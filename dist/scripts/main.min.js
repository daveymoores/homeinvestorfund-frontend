!function(n){function e(r){if(t[r])return t[r].exports;var i=t[r]={exports:{},id:r,loaded:!1};return n[r].call(i.exports,i,i.exports,e),i.loaded=!0,i.exports}var t={};e.m=n,e.c=t,e.p="",e(0)}([function(module,exports,__webpack_require__){eval('(function () {\n\t\'use strict\';\n\n\tvar widgets;\n    var $body = document.body;\n\n\twidgets = {\n\t\t"init-page" : __webpack_require__(1),\n\t\t"navigation" : __webpack_require__(2),\n\t\t"calculator" : __webpack_require__(3),\n\t\t"accordion" : __webpack_require__(5),\n\t\t"maps" : __webpack_require__(6),\n\t\t"property-map" : __webpack_require__(18),\n\t\t"carousel" : __webpack_require__(20)\n\t};\n\n    function initWidgets ($node) {\n        var dw = $node.querySelectorAll(\'[data-widget]\');\n        Array.prototype.forEach.call(dw, function(el, index, array){\n            var type;\n            type = el.getAttribute(\'data-widget\');\n\n            if (widgets[type]) {\n                new widgets[type](el);\n            }\n        });\n    }\n\n    initWidgets($body);\n\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/scripts/main.js\n// module id = 0\n// module chunks = 0\n//# sourceURL=webpack:///./assets/scripts/main.js?')},function(module,exports){eval("function InitPage(node){\n    this.node = node;\n    this.init();\n}\n\nInitPage.prototype.init = function(){\n    this.node.innerHTML = '<h1>Hello World</h1>'\n}\n\nmodule.exports = InitPage;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/scripts/widgets/init-page.js\n// module id = 1\n// module chunks = 0\n//# sourceURL=webpack:///./assets/scripts/widgets/init-page.js?")},function(module,exports){eval("function Navigation(node){\n    this.node = node;\n    this.CLASSES();\n    this.init();\n}\n\nNavigation.prototype.CLASSES = function(){\n    this.CLASSES = {\n        states : {\n            'open' : 'open',\n            'active' : 'is-active'\n        },\n        selectors : {\n            'menuButton' : '.navigation--menu-button'\n        }\n    }\n}\n\nNavigation.prototype.init = function(){\n    this.menuButton = this.node.querySelector(this.CLASSES.selectors.menuButton);\n\n    this.menuButton.addEventListener('click', this.openMenu.bind(this));\n}\n\nNavigation.prototype.openMenu = function(e){\n    var ww = window.innerWidth;\n    e.currentTarget.classList.toggle(this.CLASSES.states.active);\n    this.node.classList.toggle(this.CLASSES.states.open);\n\n    if(this.node.classList.contains(this.CLASSES.states.open)) {\n        this.node.style.maxHeight = ww+'px';\n    } else {\n        this.node.style.maxHeight = \"\";\n    }\n\n    e.preventDefault();\n}\n\nmodule.exports = Navigation;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/scripts/widgets/navigation.js\n// module id = 2\n// module chunks = 0\n//# sourceURL=webpack:///./assets/scripts/widgets/navigation.js?")},function(module,exports,__webpack_require__){eval("var rangeSlider = __webpack_require__(4);\n\nfunction Calculator(node){\n    this.node = node;\n\n    this.setVars();\n    this.init();\n}\n\nCalculator.prototype.setVars = function(){\n    this.CLASSES = {\n        states : {},\n        selectors : {\n            'calcUnit' : '.calculator__amount--unit',\n            'calcSlider' : '.calculator--slider',\n            'calcStandardRate' : '.calculator__standard-rate',\n            'calcFundRate' : '.calculator__fund-rate'\n        }\n    }\n}\n\nCalculator.prototype.init = function(){\n    this.calcUnit = this.node.querySelector(this.CLASSES.selectors.calcUnit);\n    this.calcSlider = this.node.querySelector(this.CLASSES.selectors.calcSlider);\n    this.calcStandardRate = this.node.querySelector(this.CLASSES.selectors.calcStandardRate);\n    this.calcFundRate = this.node.querySelector(this.CLASSES.selectors.calcFundRate);\n\n    this.setSlider();\n}\n\nCalculator.prototype.setSlider = function(){\n    var cxt = this;\n\n    rangeSlider.create(this.calcSlider, {\n        polyfill: true,     // Boolean, if true, custom markup will be created\n        rangeClass: 'rangeSlider',\n        disabledClass: 'rangeSlider--disabled',\n        fillClass: 'rangeSlider__fill',\n        bufferClass: 'rangeSlider__buffer',\n        handleClass: 'rangeSlider__handle',\n        startEvent: ['mousedown', 'touchstart', 'pointerdown'],\n        moveEvent: ['mousemove', 'touchmove', 'pointermove'],\n        endEvent: ['mouseup', 'touchend', 'pointerup'],\n        vertical: false,    // Boolean, if true slider will be displayed in vertical orientation\n        min: 100,          // Number , 0\n        max: 150000,          // Number, 100\n        step: 100,         // Number, 1\n        value: 25000,        // Number, center of slider\n        buffer: null,       // Number, in percent, 0 by default\n        stick: null,        // [Number stickTo, Number stickRadius] : use it if handle should stick to stickTo-th value in stickRadius\n        borderRadius: 10,    // Number, if you use buffer + border-radius in css for looks good,\n        onInit: function () {\n            console.info('onInit');\n        },\n        onSlideStart: function (position, value) {\n            console.info('onSlideStart', 'position: ' + position, 'value: ' + value);\n        },\n        onSlide: function (position, value) {\n            console.log('onSlide', 'position: ' + position, 'value: ' + value);\n            cxt.calcUnit.innerText = position.toLocaleString();\n            cxt.calcStandardRate.innerText = cxt.calcInterest(position)[0];\n            cxt.calcFundRate.innerText = cxt.calcInterest(position)[1];\n        },\n        onSlideEnd: function (position, value) {\n            console.warn('onSlideEnd', 'position: ' + position, 'value: ' + value);\n        }\n    });\n}\n\nCalculator.prototype.calcInterest = function(amount){\n    var r = 1.8/100;\n    var R = 35.73/100;\n    var standardRate = Math.round(amount*(1 + (r * 5)));\n    var fundRate = Math.round(amount*(1 + (R * 5)));\n    return [standardRate.toLocaleString(), fundRate.toLocaleString()];\n}\n\nmodule.exports = Calculator;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/scripts/widgets/calculator.js\n// module id = 3\n// module chunks = 0\n//# sourceURL=webpack:///./assets/scripts/widgets/calculator.js?")},function(module,exports,__webpack_require__){
eval("(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"rangeSlider\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rangeSlider\"] = factory();\n\telse\n\t\troot[\"rangeSlider\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Delays a function for the given number of milliseconds, and then calls\n * it with the arguments supplied.\n *\n * @param  {Function} fn   function\n * @param  {Number}   wait delay\n * @param  {Number}   args arguments\n * @return {Function}\n */\nvar delay = exports.delay = function delay(fn, wait) {\n  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  return setTimeout(function () {\n    return fn.apply(null, args);\n  }, wait);\n};\n\n/**\n * Returns a debounced function that will make sure the given\n * function is not triggered too much.\n *\n * @param  {Function} fn Function to debounce.\n * @param  {Number}   debounceDuration OPTIONAL. The amount of time in milliseconds for which we will debounce the\n *         function. (defaults to 100ms)\n * @return {Function}\n */\nvar debounce = exports.debounce = function debounce(fn, debounceDuration) {\n  debounceDuration = debounceDuration || 100;\n  return function () {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    if (!fn.debouncing) {\n      fn.lastReturnVal = fn.apply(window, args);\n      fn.debouncing = true;\n    }\n    clearTimeout(fn.debounceTimeout);\n    fn.debounceTimeout = setTimeout(function () {\n      fn.debouncing = false;\n    }, debounceDuration);\n    return fn.lastReturnVal;\n  };\n};\n\nvar isString = exports.isString = function isString(obj) {\n  return obj === '' + obj;\n};\n\nvar isArray = exports.isArray = function isArray(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]';\n};\n\nvar isNumberLike = exports.isNumberLike = function isNumberLike(obj) {\n  return obj !== null && obj !== undefined && (isString(obj) && isFinite(parseFloat(obj)) || isFinite(obj));\n};\n\nvar getFirsNumberLike = exports.getFirsNumberLike = function getFirsNumberLike() {\n  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  if (!args.length) {\n    return null;\n  }\n\n  for (var i = 0, len = args.length; i < len; i++) {\n    if (isNumberLike(args[i])) {\n      return args[i];\n    }\n  }\n\n  return null;\n};\n\nvar isObject = exports.isObject = function isObject(obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n};\n\nvar simpleExtend = exports.simpleExtend = function simpleExtend(defaultOpt, options) {\n  var opt = {};\n\n  for (var key in defaultOpt) {\n    opt[key] = defaultOpt[key];\n  }\n  for (var _key4 in options) {\n    opt[_key4] = options[_key4];\n  }\n\n  return opt;\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _dom = __webpack_require__(2);\n\nvar dom = _interopRequireWildcard(_dom);\n\nvar _functions = __webpack_require__(0);\n\nvar func = _interopRequireWildcard(_functions);\n\n__webpack_require__(3);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar newLineAndTabRegexp = new RegExp('/[\\\\n\\\\t]/', 'g');\nvar MAX_SET_BY_DEFAULT = 100;\nvar HANDLE_RESIZE_DELAY = 300;\nvar HANDLE_RESIZE_DEBOUNCE = 50;\n\nvar pluginName = 'rangeSlider';\nvar pluginIdentifier = 0;\nvar inputrange = dom.supportsRange();\nvar defaults = {\n  polyfill: true,\n  rangeClass: 'rangeSlider',\n  disabledClass: 'rangeSlider--disabled',\n  fillClass: 'rangeSlider__fill',\n  bufferClass: 'rangeSlider__buffer',\n  handleClass: 'rangeSlider__handle',\n  startEvent: ['mousedown', 'touchstart', 'pointerdown'],\n  moveEvent: ['mousemove', 'touchmove', 'pointermove'],\n  endEvent: ['mouseup', 'touchend', 'pointerup'],\n  min: null,\n  max: null,\n  step: null,\n  value: null,\n  buffer: null,\n  stick: null,\n  borderRadius: 10,\n  vertical: false\n};\n\n/**\n * Plugin\n * @param {HTMLElement} element\n * @param {this} options\n */\n\nvar RangeSlider = function () {\n  function RangeSlider(element, options) {\n    _classCallCheck(this, RangeSlider);\n\n    var minSetByDefault = void 0;\n    var maxSetByDefault = void 0;\n    var stepSetByDefault = void 0;\n    var stickAttribute = void 0;\n    var stickValues = void 0;\n\n    this.element = element;\n    this.options = func.simpleExtend(defaults, options);\n    this.polyfill = this.options.polyfill;\n    this.vertical = this.options.vertical;\n    this.onInit = this.options.onInit;\n    this.onSlide = this.options.onSlide;\n    this.onSlideStart = this.options.onSlideStart;\n    this.onSlideEnd = this.options.onSlideEnd;\n    this.onSlideEventsCount = -1;\n    this.isInteractsNow = false;\n    this.needTriggerEvents = false;\n\n    // Plugin should only be used as a polyfill\n    if (!this.polyfill) {\n      // Input range support?\n      if (inputrange) {\n        return;\n      }\n    }\n\n    this.options.buffer = this.options.buffer || parseFloat(this.element.getAttribute('data-buffer'));\n\n    this.identifier = 'js-' + pluginName + '-' + pluginIdentifier++;\n\n    this.min = func.getFirsNumberLike(this.options.min, parseFloat(this.element.getAttribute('min')), minSetByDefault = 0);\n\n    this.max = func.getFirsNumberLike(this.options.max, parseFloat(this.element.getAttribute('max')), maxSetByDefault = MAX_SET_BY_DEFAULT);\n\n    this.value = func.getFirsNumberLike(this.options.value, this.element.value, parseFloat(this.element.value || this.min + (this.max - this.min) / 2));\n\n    this.step = func.getFirsNumberLike(this.options.step, parseFloat(this.element.getAttribute('step')) || (stepSetByDefault = 1));\n\n    this.percent = null;\n\n    if (func.isArray(this.options.stick) && this.options.stick.length >= 1) {\n      this.stick = this.options.stick;\n    } else if (stickAttribute = this.element.getAttribute('stick')) {\n      stickValues = stickAttribute.split(' ');\n      if (stickValues.length >= 1) {\n        this.stick = stickValues.map(parseFloat);\n      }\n    }\n    if (this.stick && this.stick.length === 1) {\n      this.stick.push(this.step * 1.5);\n    }\n    this._updatePercentFromValue();\n\n    this.toFixed = this._toFixed(this.step);\n\n    var directionClass = void 0;\n\n    this.container = document.createElement('div');\n    dom.addClass(this.container, this.options.fillClass);\n\n    directionClass = this.vertical ? this.options.fillClass + '__vertical' : this.options.fillClass + '__horizontal';\n    dom.addClass(this.container, directionClass);\n\n    this.handle = document.createElement('div');\n    dom.addClass(this.handle, this.options.handleClass);\n\n    directionClass = this.vertical ? this.options.handleClass + '__vertical' : this.options.handleClass + '__horizontal';\n    dom.addClass(this.handle, directionClass);\n\n    this.range = document.createElement('div');\n    dom.addClass(this.range, this.options.rangeClass);\n    this.range.id = this.identifier;\n    this.range.appendChild(this.handle);\n    this.range.appendChild(this.container);\n\n    directionClass = this.vertical ? this.options.rangeClass + '__vertical' : this.options.rangeClass + '__horizontal';\n    dom.addClass(this.range, directionClass);\n\n    if (this.options.bufferClass) {\n      this.buffer = document.createElement('div');\n      dom.addClass(this.buffer, this.options.bufferClass);\n      this.range.appendChild(this.buffer);\n\n      directionClass = this.vertical ? this.options.bufferClass + '__vertical' : this.options.bufferClass + '__horizontal';\n      dom.addClass(this.buffer, directionClass);\n    }\n\n    if (func.isNumberLike(this.options.value)) {\n      this._setValue(this.options.value, true);\n      this.element.value = this.options.value;\n    }\n\n    if (func.isNumberLike(this.options.buffer)) {\n      this.element.setAttribute('data-buffer', this.options.buffer);\n    }\n\n    if (func.isNumberLike(this.options.min) || minSetByDefault) {\n      this.element.setAttribute('min', '' + this.min);\n    }\n\n    if (func.isNumberLike(this.options.max) || maxSetByDefault) {\n      this.element.setAttribute('max', '' + this.max);\n    }\n\n    if (func.isNumberLike(this.options.step) || stepSetByDefault) {\n      this.element.setAttribute('step', '' + this.step);\n    }\n\n    dom.insertAfter(this.element, this.range);\n\n    // visually hide the input\n    dom.setCss(this.element, {\n      'position': 'absolute',\n      'width': '1px',\n      'height': '1px',\n      'overflow': 'hidden',\n      'opacity': '0'\n    });\n\n    // Store context\n    this._handleDown = this._handleDown.bind(this);\n    this._handleMove = this._handleMove.bind(this);\n    this._handleEnd = this._handleEnd.bind(this);\n    this._startEventListener = this._startEventListener.bind(this);\n    this._changeEventListener = this._changeEventListener.bind(this);\n    this._handleResize = this._handleResize.bind(this);\n\n    this._init();\n\n    // Attach Events\n    window.addEventListener('resize', this._handleResize, false);\n\n    dom.addEventListeners(document, this.options.startEvent, this._startEventListener);\n\n    // Listen to programmatic value changes\n    this.element.addEventListener('change', this._changeEventListener, false);\n  }\n\n  /* public methods */\n\n  /**\n   *\n   * @param {Object} obj like {min : Number, max : Number, value : Number, step : Number, buffer : [String|Number]}\n   * @param {Boolean} triggerEvents\n   * @returns {RangeSlider}\n   */\n\n\n  _createClass(RangeSlider, [{\n    key: 'update',\n    value: function update(obj, triggerEvents) {\n      if (triggerEvents) {\n        this.needTriggerEvents = true;\n      }\n      if (func.isObject(obj)) {\n        if (func.isNumberLike(obj.min)) {\n          this.element.setAttribute('min', '' + obj.min);\n          this.min = obj.min;\n        }\n\n        if (func.isNumberLike(obj.max)) {\n          this.element.setAttribute('max', '' + obj.max);\n          this.max = obj.max;\n        }\n\n        if (func.isNumberLike(obj.step)) {\n          this.element.setAttribute('step', '' + obj.step);\n          this.step = obj.step;\n          this.toFixed = this._toFixed(obj.step);\n        }\n\n        if (func.isNumberLike(obj.buffer)) {\n          this._setBufferPosition(obj.buffer);\n        }\n\n        if (func.isNumberLike(obj.value)) {\n          this._setValue(obj.value);\n        }\n      }\n      this._update();\n      this.onSlideEventsCount = 0;\n      this.needTriggerEvents = false;\n      return this;\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      dom.removeAllListenersFromEl(this, document);\n      window.removeEventListener('resize', this._handleResize, false);\n      this.element.removeEventListener('change', this._changeEventListener, false);\n\n      this.element.style.cssText = '';\n      delete this.element[pluginName];\n\n      // Remove the generated markup\n      if (this.range) {\n        this.range.parentNode.removeChild(this.range);\n      }\n    }\n\n    /**\n     * A lightweight plugin wrapper around the constructor,preventing against multiple instantiations\n     * @param {Element} el\n     * @param {Object} options\n     */\n\n  }, {\n    key: '_toFixed',\n\n\n    /* priate methods */\n\n    value: function _toFixed(step) {\n      return (step + '').replace('.', '').length - 1;\n    }\n  }, {\n    key: '_init',\n    value: function _init() {\n      if (this.onInit && typeof this.onInit === 'function') {\n        this.onInit();\n      }\n      this._update();\n    }\n  }, {\n    key: '_updatePercentFromValue',\n    value: function _updatePercentFromValue() {\n      this.percent = (this.value - this.min) / (this.max - this.min);\n    }\n\n    /**\n     * This method check if this.identifier exists in ev.target's ancestors\n     * @param ev\n     * @param data\n     */\n\n  }, {\n    key: '_startEventListener',\n    value: function _startEventListener(ev, data) {\n      var _this = this;\n\n      var el = ev.target;\n      var isEventOnSlider = false;\n\n      if (ev.which !== 1) {\n        return;\n      }\n\n      dom.forEachAncestors(el, function (el) {\n        return isEventOnSlider = el.id === _this.identifier && !dom.hasClass(el, _this.options.disabledClass);\n      }, true);\n\n      if (isEventOnSlider) {\n        this._handleDown(ev, data);\n      }\n    }\n  }, {\n    key: '_changeEventListener',\n    value: function _changeEventListener(ev, data) {\n      if (data && data.origin === this.identifier) {\n        return;\n      }\n\n      var value = ev.target.value;\n      var pos = this._getPositionFromValue(value);\n\n      this._setPosition(pos);\n    }\n  }, {\n    key: '_update',\n    value: function _update() {\n      var sizeProperty = this.vertical ? 'offsetHeight' : 'offsetWidth';\n\n      this.handleSize = dom.getDimension(this.handle, sizeProperty);\n      this.rangeSize = dom.getDimension(this.range, sizeProperty);\n      this.maxHandleX = this.rangeSize - this.handleSize;\n      this.grabX = this.handleSize / 2;\n      this.position = this._getPositionFromValue(this.value);\n\n      // Consider disabled state\n      if (this.element.disabled) {\n        dom.addClass(this.range, this.options.disabledClass);\n      } else {\n        dom.removeClass(this.range, this.options.disabledClass);\n      }\n\n      this._setPosition(this.position);\n      if (this.options.bufferClass && this.options.buffer) {\n        this._setBufferPosition(this.options.buffer);\n      }\n      this._updatePercentFromValue();\n      dom.triggerEvent(this.element, 'change', { origin: this.identifier });\n    }\n  }, {\n    key: '_handleResize',\n    value: function _handleResize() {\n      var _this2 = this;\n\n      return func.debounce(function () {\n        // Simulate resizeEnd event.\n        func.delay(function () {\n          _this2._update();\n        }, HANDLE_RESIZE_DELAY);\n      }, HANDLE_RESIZE_DEBOUNCE)();\n    }\n  }, {\n    key: '_handleDown',\n    value: function _handleDown(e) {\n      this.isInteractsNow = true;\n      dom.addEventListeners(document, this.options.moveEvent, this._handleMove);\n      dom.addEventListeners(document, this.options.endEvent, this._handleEnd);\n\n      // If we click on the handle don't set the new position\n      if ((' ' + e.target.className + ' ').replace(newLineAndTabRegexp, ' ').indexOf(this.options.handleClass) > -1) {\n        return;\n      }\n\n      var boundingClientRect = this.range.getBoundingClientRect();\n\n      var posX = this._getRelativePosition(e);\n      var rangeX = this.vertical ? boundingClientRect.bottom : boundingClientRect.left;\n      var handleX = this._getPositionFromNode(this.handle) - rangeX;\n      var position = posX - this.grabX;\n\n      this._setPosition(position);\n\n      if (posX >= handleX && posX < handleX + this.handleWidth) {\n        this.grabX = posX - handleX;\n      }\n      this._updatePercentFromValue();\n    }\n  }, {\n    key: '_handleMove',\n    value: function _handleMove(e) {\n      var posX = this._getRelativePosition(e);\n\n      this.isInteractsNow = true;\n      this._setPosition(posX - this.grabX);\n    }\n  }, {\n    key: '_handleEnd',\n    value: function _handleEnd(e) {\n      dom.removeEventListeners(document, this.options.moveEvent, this._handleMove);\n      dom.removeEventListeners(document, this.options.endEvent, this._handleEnd);\n\n      // Ok we're done fire the change event\n      dom.triggerEvent(this.element, 'change', { origin: this.identifier });\n\n      if (this.isInteractsNow || this.needTriggerEvents) {\n        if (this.onSlideEnd && typeof this.onSlideEnd === 'function') {\n          this.onSlideEnd(this.value, this.percent, this.position);\n        }\n      }\n      this.onSlideEventsCount = 0;\n      this.isInteractsNow = false;\n    }\n  }, {\n    key: '_cap',\n    value: function _cap(pos, min, max) {\n      if (pos < min) {\n        return min;\n      }\n      if (pos > max) {\n        return max;\n      }\n      return pos;\n    }\n  }, {\n    key: '_setPosition',\n    value: function _setPosition(pos) {\n      var position = void 0;\n      var stickRadius = void 0;\n      var restFromValue = void 0;\n      var stickTo = void 0;\n\n      // Snapping steps\n      var value = this._getValueFromPosition(this._cap(pos, 0, this.maxHandleX));\n\n      // Stick to stick[0] in radius stick[1]\n      if (this.stick) {\n        stickTo = this.stick[0];\n        stickRadius = this.stick[1] || 0.1;\n        restFromValue = value % stickTo;\n        if (restFromValue < stickRadius) {\n          value = value - restFromValue;\n        } else if (Math.abs(stickTo - restFromValue) < stickRadius) {\n          value = value - restFromValue + stickTo;\n        }\n      }\n      position = this._getPositionFromValue(value);\n\n      // Update ui\n      if (this.vertical) {\n        this.container.style.height = position + this.grabX + 'px';\n        this.handle.style.transform = 'translateY(-' + position + 'px)';\n        this.handle.style['-ms-transform'] = 'translateY(-' + position + 'px)';\n      } else {\n        this.container.style.width = position + this.grabX + 'px';\n        this.handle.style.transform = 'translateX(' + position + 'px)';\n        this.handle.style['-ms-transform'] = 'translateX(' + position + 'px)';\n      }\n\n      this._setValue(value);\n\n      // Update globals\n      this.position = position;\n      this.value = value;\n      this._updatePercentFromValue();\n\n      if (this.isInteractsNow || this.needTriggerEvents) {\n        if (this.onSlideStart && typeof this.onSlideStart === 'function' && this.onSlideEventsCount === 0) {\n          this.onSlideStart(this.value, this.percent, this.position);\n        }\n\n        if (this.onSlide && typeof this.onSlide === 'function') {\n          this.onSlide(this.value, this.percent, this.position);\n        }\n      }\n\n      this.onSlideEventsCount++;\n    }\n  }, {\n    key: '_setBufferPosition',\n    value: function _setBufferPosition(pos) {\n      var isPercent = true;\n\n      if (isFinite(pos)) {\n        pos = parseFloat(pos);\n      } else if (func.isString(pos)) {\n        if (pos.indexOf('px') > 0) {\n          isPercent = false;\n        }\n        pos = parseFloat(pos);\n      } else {\n        console.warn('New position must be XXpx or XX%');\n        return;\n      }\n\n      if (isNaN(pos)) {\n        console.warn('New position is NaN');\n        return;\n      }\n      if (!this.options.bufferClass) {\n        console.warn('You disabled buffer, it\\'s className is empty');\n        return;\n      }\n      var bufferSize = isPercent ? pos : pos / this.rangeSize * 100;\n\n      if (bufferSize < 0) {\n        bufferSize = 0;\n      }\n      if (bufferSize > 100) {\n        bufferSize = 100;\n      }\n      this.options.buffer = bufferSize;\n\n      var paddingSize = this.options.borderRadius / this.rangeSize * 100;\n      var bufferSizeWithPadding = bufferSize - paddingSize;\n\n      if (bufferSizeWithPadding < 0) {\n        bufferSizeWithPadding = 0;\n      }\n\n      if (this.vertical) {\n        this.buffer.style.height = bufferSizeWithPadding + '%';\n        this.buffer.style.bottom = paddingSize * 0.5 + '%';\n      } else {\n        this.buffer.style.width = bufferSizeWithPadding + '%';\n        this.buffer.style.left = paddingSize * 0.5 + '%';\n      }\n\n      this.element.setAttribute('data-buffer', bufferSize);\n    }\n\n    /**\n     *\n     * @param {Element} node\n     * @returns {*} Returns element position relative to the parent\n     * @private\n     */\n\n  }, {\n    key: '_getPositionFromNode',\n    value: function _getPositionFromNode(node) {\n      var i = this.vertical ? this.maxHandleX : 0;\n\n      while (node !== null) {\n        i += this.vertical ? node.offsetTop : node.offsetLeft;\n        node = node.offsetParent;\n      }\n      return i;\n    }\n\n    /**\n     *\n     * @param {(MouseEvent|TouchEvent)}e\n     * @returns {number}\n     */\n\n  }, {\n    key: '_getRelativePosition',\n    value: function _getRelativePosition(e) {\n      var boundingClientRect = this.range.getBoundingClientRect();\n\n      // Get the offset relative to the viewport\n      var rangeSize = this.vertical ? boundingClientRect.bottom : boundingClientRect.left;\n      var pageOffset = 0;\n\n      var pagePositionProperty = this.vertical ? 'pageY' : 'pageX';\n\n      if (typeof e[pagePositionProperty] !== 'undefined') {\n        pageOffset = e.touches && e.touches.length ? e.touches[0][pagePositionProperty] : e[pagePositionProperty];\n      } else if (typeof e.originalEvent !== 'undefined') {\n        if (typeof e.originalEvent[pagePositionProperty] !== 'undefined') {\n          pageOffset = e.originalEvent[pagePositionProperty];\n        } else if (e.originalEvent.touches && e.originalEvent.touches[0] && typeof e.originalEvent.touches[0][pagePositionProperty] !== 'undefined') {\n          pageOffset = e.originalEvent.touches[0][pagePositionProperty];\n        }\n      } else if (e.touches && e.touches[0] && typeof e.touches[0][pagePositionProperty] !== 'undefined') {\n        pageOffset = e.touches[0][pagePositionProperty];\n      } else if (e.currentPoint && (typeof e.currentPoint.x !== 'undefined' || typeof e.currentPoint.y !== 'undefined')) {\n        pageOffset = this.vertical ? e.currentPoint.y : e.currentPoint.x;\n      }\n\n      if (this.vertical) {\n        pageOffset -= window.pageYOffset;\n      }\n\n      return this.vertical ? rangeSize - pageOffset : pageOffset - rangeSize;\n    }\n  }, {\n    key: '_getPositionFromValue',\n    value: function _getPositionFromValue(value) {\n      var percentage = (value - this.min) / (this.max - this.min);\n      var pos = percentage * this.maxHandleX;\n\n      return isNaN(pos) ? 0 : pos;\n    }\n  }, {\n    key: '_getValueFromPosition',\n    value: function _getValueFromPosition(pos) {\n      var percentage = pos / (this.maxHandleX || 1);\n      var value = this.step * Math.round(percentage * (this.max - this.min) / this.step) + this.min;\n\n      return Number(value.toFixed(this.toFixed));\n    }\n  }, {\n    key: '_setValue',\n    value: function _setValue(value, force) {\n      if (value === this.value && !force) {\n        return;\n      }\n\n      // Set the new value and fire the `input` event\n      this.element.value = value;\n      this.value = value;\n      dom.triggerEvent(this.element, 'input', { origin: this.identifier });\n    }\n  }], [{\n    key: 'create',\n    value: function create(el, options) {\n      var createInstance = function createInstance(el) {\n        var data = el[pluginName];\n\n        // Create a new instance.\n        if (!data) {\n          data = new RangeSlider(el, options);\n          el[pluginName] = data;\n        }\n      };\n\n      if (el.length) {\n        Array.prototype.slice.call(el).forEach(function (el) {\n          createInstance(el);\n        });\n      } else {\n        createInstance(el);\n      }\n    }\n  }]);\n\n  return RangeSlider;\n}();\n\nexports.default = RangeSlider;\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.supportsRange = exports.removeAllListenersFromEl = exports.removeEventListeners = exports.addEventListeners = exports.insertAfter = exports.triggerEvent = exports.forEachAncestors = exports.removeClass = exports.addClass = exports.hasClass = exports.setCss = exports.getDimension = exports.getHiddenParentNodes = exports.isHidden = exports.detectIE = undefined;\n\nvar _functions = __webpack_require__(0);\n\nvar func = _interopRequireWildcard(_functions);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar EVENT_LISTENER_LIST = 'eventListenerList';\n\nvar detectIE = exports.detectIE = function detectIE() {\n  var ua = window.navigator.userAgent;\n  var msie = ua.indexOf('MSIE ');\n\n  if (msie > 0) {\n    return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n  }\n\n  var trident = ua.indexOf('Trident/');\n\n  if (trident > 0) {\n    var rv = ua.indexOf('rv:');\n\n    return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n  }\n\n  var edge = ua.indexOf('Edge/');\n\n  if (edge > 0) {\n    return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n  }\n\n  return false;\n};\n\nvar ieVersion = detectIE();\nvar eventCaptureParams = window.PointerEvent && !ieVersion ? { passive: false } : false;\n\n/**\n * Check if a `element` is visible in the DOM\n *\n * @param  {Element}  element\n * @return {Boolean}\n */\nvar isHidden = exports.isHidden = function isHidden(element) {\n  return element.offsetWidth === 0 || element.offsetHeight === 0 || element.open === false;\n};\n\n/**\n * Get hidden parentNodes of an `element`\n *\n * @param  {Element} element\n * @return {[type]}\n */\nvar getHiddenParentNodes = exports.getHiddenParentNodes = function getHiddenParentNodes(element) {\n  var parents = [];\n  var node = element.parentNode;\n\n  while (isHidden(node)) {\n    parents.push(node);\n    node = node.parentNode;\n  }\n  return parents;\n};\n\n/**\n * Returns dimensions for an element even if it is not visible in the DOM.\n *\n * @param  {Element} element\n * @param  {string}  key     (e.g. offsetWidth …)\n * @return {Number}\n */\nvar getDimension = exports.getDimension = function getDimension(element, key) {\n  var hiddenParentNodes = getHiddenParentNodes(element);\n  var hiddenParentNodesLength = hiddenParentNodes.length;\n  var displayProperty = [];\n  var dimension = element[key];\n\n  // Used for native `<details>` elements\n  var toggleOpenProperty = function toggleOpenProperty(element) {\n    if (typeof element.open !== 'undefined') {\n      element.open = !element.open;\n    }\n  };\n\n  if (hiddenParentNodesLength) {\n    for (var i = 0; i < hiddenParentNodesLength; i++) {\n      // Cache the display property to restore it later.\n      displayProperty[i] = hiddenParentNodes[i].style.display;\n\n      hiddenParentNodes[i].style.display = 'block';\n      hiddenParentNodes[i].style.height = '0';\n      hiddenParentNodes[i].style.overflow = 'hidden';\n      hiddenParentNodes[i].style.visibility = 'hidden';\n      toggleOpenProperty(hiddenParentNodes[i]);\n    }\n\n    dimension = element[key];\n\n    for (var j = 0; j < hiddenParentNodesLength; j++) {\n      toggleOpenProperty(hiddenParentNodes[j]);\n      hiddenParentNodes[j].style.display = displayProperty[j];\n      hiddenParentNodes[j].style.height = '';\n      hiddenParentNodes[j].style.overflow = '';\n      hiddenParentNodes[j].style.visibility = '';\n    }\n  }\n  return dimension;\n};\n\n/**\n *\n * @param {HTMLElement} el\n * @param {Object} cssObj\n * @returns {*}\n */\nvar setCss = exports.setCss = function setCss(el, cssObj) {\n  for (var key in cssObj) {\n    el.style[key] = cssObj[key];\n  }\n  return el.style;\n};\n\n/**\n *\n * @param {HTMLElement} elem\n * @param {string} className\n */\nvar hasClass = exports.hasClass = function hasClass(elem, className) {\n  return new RegExp(' ' + className + ' ').test(' ' + elem.className + ' ');\n};\n\n/**\n *\n * @param {HTMLElement} elem\n * @param {string} className\n */\nvar addClass = exports.addClass = function addClass(elem, className) {\n  if (!hasClass(elem, className)) {\n    elem.className += ' ' + className;\n  }\n};\n\n/**\n *\n * @param {HTMLElement} elem\n * @param {string} className\n */\nvar removeClass = exports.removeClass = function removeClass(elem, className) {\n  var newClass = ' ' + elem.className.replace(/[\\t\\r\\n]/g, ' ') + ' ';\n\n  if (hasClass(elem, className)) {\n    while (newClass.indexOf(' ' + className + ' ') >= 0) {\n      newClass = newClass.replace(' ' + className + ' ', ' ');\n    }\n    elem.className = newClass.replace(/^\\s+|\\s+$/g, '');\n  }\n};\n\n/**\n *\n * @param {HTMLElement} el\n * @callback callback\n * @param {boolean} andForElement - apply callback for el\n * @returns {HTMLElement}\n */\nvar forEachAncestors = exports.forEachAncestors = function forEachAncestors(el, callback, andForElement) {\n  if (andForElement) {\n    callback(el);\n  }\n\n  while (el.parentNode && !callback(el)) {\n    el = el.parentNode;\n  }\n\n  return el;\n};\n\n/**\n *\n * @param {HTMLElement} el\n * @param {string} name event name\n * @param {Object} data\n */\nvar triggerEvent = exports.triggerEvent = function triggerEvent(el, name, data) {\n  if (!func.isString(name)) {\n    throw new TypeError('event name must be String');\n  }\n  if (!(el instanceof HTMLElement)) {\n    throw new TypeError('element must be HTMLElement');\n  }\n  name = name.trim();\n  var event = document.createEvent('CustomEvent');\n\n  event.initCustomEvent(name, false, false, data);\n  el.dispatchEvent(event);\n};\n\n/**\n * @param {Object} referenceNode after this\n * @param {Object} newNode insert this\n */\nvar insertAfter = exports.insertAfter = function insertAfter(referenceNode, newNode) {\n  return referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n};\n\n/**\n * Add event listeners and push them to el[EVENT_LISTENER_LIST]\n * @param {HTMLElement} el DOM element\n * @param {Array} events\n * @callback listener\n */\nvar addEventListeners = exports.addEventListeners = function addEventListeners(el, events, listener) {\n  events.forEach(function (eventName) {\n    if (!el[EVENT_LISTENER_LIST]) {\n      el[EVENT_LISTENER_LIST] = {};\n    }\n    if (!el[EVENT_LISTENER_LIST][eventName]) {\n      el[EVENT_LISTENER_LIST][eventName] = [];\n    }\n\n    el.addEventListener(eventName, listener, eventCaptureParams);\n    if (el[EVENT_LISTENER_LIST][eventName].indexOf(listener) < 0) {\n      el[EVENT_LISTENER_LIST][eventName].push(listener);\n    }\n  });\n};\n\n/**\n * Remove event listeners and remove them from el[EVENT_LISTENER_LIST]\n * @param {HTMLElement} el DOM element\n * @param {Array} events\n * @callback listener\n */\nvar removeEventListeners = exports.removeEventListeners = function removeEventListeners(el, events, listener) {\n  events.forEach(function (eventName) {\n    var index = void 0;\n\n    el.removeEventListener(eventName, listener, false);\n\n    if (el[EVENT_LISTENER_LIST] && el[EVENT_LISTENER_LIST][eventName] && (index = el[EVENT_LISTENER_LIST][eventName].indexOf(listener)) > -1) {\n      el[EVENT_LISTENER_LIST][eventName].splice(index, 1);\n    }\n  });\n};\n\n/**\n * Remove ALL event listeners which exists in el[EVENT_LISTENER_LIST]\n * @param {HTMLElement} el DOM element\n */\nvar removeAllListenersFromEl = exports.removeAllListenersFromEl = function removeAllListenersFromEl(instance, el) {\n  if (!el[EVENT_LISTENER_LIST]) {\n    return;\n  }\n  /* jshint ignore:start */\n\n  /**\n   *\n   * @callback listener\n   * @this {Object} event name\n   */\n  function rm(listener) {\n    if (listener === instance._startEventListener) {\n      this.el.removeEventListener(this.eventName, listener, false);\n    }\n  }\n\n  for (var eventName in el[EVENT_LISTENER_LIST]) {\n    el[EVENT_LISTENER_LIST][eventName].forEach(rm, { eventName: eventName, el: el });\n  }\n\n  el[EVENT_LISTENER_LIST] = {};\n  /* jshint ignore:end */\n};\n\n/**\n * Range feature detection\n * @return {Boolean}\n */\nvar supportsRange = exports.supportsRange = function supportsRange() {\n  var input = document.createElement('input');\n\n  input.setAttribute('type', 'range');\n  return input.type !== 'text';\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=range-slider.js.map\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rangeslider-pure/dist/range-slider.js\n// module id = 4\n// module chunks = 0\n//# sourceURL=webpack:///./~/rangeslider-pure/dist/range-slider.js?")
},function(module,exports){eval('function Accordion(element) {\n    this.element = element;\n\n    this.setVars();\n    this.setEventListeners();\n    this.init();\n}\n\nAccordion.prototype.setVars = function() {\n    this.css = {\n      classes: {\n        active: "active",\n        rendered: "accordion--rendered"\n      },\n      selectors: {\n        accordion: ".accordion",\n        accordionItem: ".accordion__item",\n        accordionTrigger: ".accordion__item__trigger"\n      }\n    };\n\n    this.accordionTriggers = this.element.querySelectorAll(this.css.selectors.accordionTrigger);\n    this.accordionItems = this.element.querySelectorAll(this.css.selectors.accordionItem);\n    this.openAnswers = 0;\n    this.totalAnswers = this.accordionTriggers.length;\n};\n\nAccordion.prototype.init = function() {\n    this.element.classList.add(this.css.classes.rendered);\n};\n\nAccordion.prototype.setEventListeners = function() {\n    var cxt = this;\n    Array.prototype.forEach.call(this.accordionTriggers, function(el, arr, index){\n        el.addEventListener(\'click\', cxt.toggleContent.bind(cxt));\n    });\n};\n\nAccordion.prototype.toggleContent = function(event) {\n    var accordionItem = event.target.closest(this.css.selectors.accordionItem);\n\n    event.preventDefault();\n\n    if (accordionItem.classList.contains(this.css.classes.active)) {\n        this.openAnswers -= 1;\n    } else {\n        this.openAnswers += 1;\n    }\n\n    if (this.openAnswers === this.totalAnswers) {\n        this.showAllContent();\n    } else if (!this.openAnswers) {\n        this.hideAllContent();\n    } else {\n        accordionItem.classList.toggle(this.css.classes.active);\n    }\n};\n\n\nAccordion.prototype.showAllContent = function() {\n    var cxt = this;\n    Array.prototype.forEach.call(this.accordionItems, function(el, arr, index){\n        el.classList.add(cxt.css.classes.active);\n    });\n    this.openAnswers = this.totalAnswers;\n    console.log(\'openAnswers\', this.openAnswers);\n};\n\nAccordion.prototype.hideAllContent = function() {\n    var cxt = this;\n    Array.prototype.forEach.call(this.accordionItems, function(el, arr, index){\n        el.classList.remove(cxt.css.classes.active);\n    });\n\n    this.openAnswers = 0;\n    console.log(\'openAnswers\', this.openAnswers);\n};\n\nAccordion.prototype.toggleAllContent = function() {\n    if (this.openAnswers < this.totalAnswers) {\n        this.showAllContent();\n    } else {\n        this.hideAllContent();\n    }\n};\n\nmodule.exports = Accordion;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/scripts/widgets/accordion.js\n// module id = 5\n// module chunks = 0\n//# sourceURL=webpack:///./assets/scripts/widgets/accordion.js?')},function(module,exports,__webpack_require__){eval('var GoogleMapsLoader = __webpack_require__(7);\nvar Promise = __webpack_require__(8);\nGoogleMapsLoader.KEY = \'AIzaSyDor4jeGMzVTzl6x5QgpGPvahUSje9I-E0\';\n\nfunction InitGoogleMaps(node){\n    this.$node = node;\n    this.setVars();\n    this.init();\n}\n\nInitGoogleMaps.prototype.setVars = function(){\n    this.css = {\n        states : {\n            \'active\':\'active\'\n        },\n        selectors : {\n            \'propertiesPanel\' : \'.properties__panel\',\n            \'propertiesContainer\' : \'.properties__container\',\n            \'properties\' : \'propertiesHook\'\n        }\n    }\n}\n\nInitGoogleMaps.prototype.init = function(){\n    var cxt = this;\n\n    var ww = window.innerWidth;\n\n    //mobile selectors\n    this.locationMobSelect = document.getElementById(this.css.selectors.locationMobSelect);\n    this.properties = document.getElementById(this.css.selectors.properties);\n    this.propertiesContainer = this.properties.querySelector(this.css.selectors.propertiesContainer);\n    this.loadMore = this.properties.querySelector(\'a\');\n\n    GoogleMapsLoader.load(function(google) {\n        var map;\n          var styles = {\n              silver:\n                [\n                    {\n                        "featureType": "all",\n                        "elementType": "geometry",\n                        "stylers": [\n                            {\n                                "color": "#92d1f4"\n                            }\n                        ]\n                    },\n                    {\n                        "featureType": "all",\n                        "elementType": "labels.text.fill",\n                        "stylers": [\n                            {\n                                "gamma": 0.01\n                            },\n                            {\n                                "lightness": 20\n                            }\n                        ]\n                    },\n                    {\n                        "featureType": "all",\n                        "elementType": "labels.text.stroke",\n                        "stylers": [\n                            {\n                                "saturation": -31\n                            },\n                            {\n                                "lightness": -33\n                            },\n                            {\n                                "weight": 2\n                            },\n                            {\n                                "gamma": 0.8\n                            }\n                        ]\n                    },\n                    {\n                        "featureType": "all",\n                        "elementType": "labels.icon",\n                        "stylers": [\n                            {\n                                "visibility": "off"\n                            }\n                        ]\n                    },\n                    {\n                        "featureType": "landscape",\n                        "elementType": "geometry",\n                        "stylers": [\n                            {\n                                "lightness": 80\n                            },\n                            {\n                                "saturation": 10\n                            }\n                        ]\n                    },\n                    {\n                        "featureType": "poi",\n                        "elementType": "geometry",\n                        "stylers": [\n                            {\n                                "saturation": 20\n                            }\n                        ]\n                    },\n                    {\n                        "featureType": "poi.park",\n                        "elementType": "geometry",\n                        "stylers": [\n                            {\n                                "lightness": 70\n                            },\n                            {\n                                "saturation": -20\n                            }\n                        ]\n                    },\n                    {\n                        "featureType": "road",\n                        "elementType": "geometry",\n                        "stylers": [\n                            {\n                                "lightness": 670\n                            },\n                            {\n                                "saturation": -30\n                            }\n                        ]\n                    },\n                    {\n                        "featureType": "road",\n                        "elementType": "geometry.stroke",\n                        "stylers": [\n                            {\n                                "saturation": 25\n                            },\n                            {\n                                "lightness": 25\n                            }\n                        ]\n                    },\n                    {\n                        "featureType": "water",\n                        "elementType": "all",\n                        "stylers": [\n                            {\n                                "saturation": 35\n                            },\n                            {\n                                "lightness":20\n                            }\n                        ]\n                    }\n                ]\n            };\n\n\n          var myStyles =[\n            {\n                featureType: "poi",\n                elementType: "labels",\n                stylers: [\n                      { visibility: "off" }\n                ]\n            },\n            {\n              featureType: \'transit\',\n              elementType: \'labels.icon\',\n              stylers: [{visibility: \'off\'}]\n            }\n        ];\n\n\n        var locations = [\n          [51.521722, -0.130443],\n          [53.386278, -1.469588],\n          [55.869120, -4.251686],\n          [51.461624, -2.588994]\n        ];\n\n        var options = {\n           draggable: false,\n           scrollwheel: false,\n           panControl: false,\n           maxZoom: 6,\n           minZoom: 6,\n           zoom: 6,\n           disableDefaultUI: true,\n           clickableIcons: false,\n           center: {lat: 53.634566, lng: -3.472727},\n           mapTypeId: google.maps.MapTypeId.ROADMAP,\n           styles: myStyles\n       };\n\n\n      if(ww > 768) {\n          map = new google.maps.Map(cxt.$node, options);\n          map.setOptions({styles: styles[\'silver\']});\n\n          //Resize Function\n          google.maps.event.addDomListener(window, "resize", function() {\n              var center = map.getCenter();\n              google.maps.event.trigger(map, "resize");\n              map.setCenter(center);\n          });\n\n          var image = {\n            url: \'./dist/images/icons/pin.png\',\n            size: new google.maps.Size(37, 40),\n            origin: new google.maps.Point(0, 0),\n            anchor: new google.maps.Point(0, 32)\n          };\n\n\n          var marker, i;\n\n          for (i = 0; i < locations.length; i++) {\n              marker = new google.maps.Marker({\n                  position: new google.maps.LatLng(locations[i][0], locations[i][1]),\n                  map: map,\n                  icon: image\n              });\n           }\n\n      } else {\n\n          //load more button functionality\n          // NOTE: move json out inton seperate method\n          cxt.loadMore.addEventListener(\'click\', function(e){\n              e.preventDefault();\n\n              cxt.propertiesPanels = cxt.properties.querySelectorAll(cxt.css.selectors.propertiesPanel);\n              //prevent action if button is disabled\n              if(!e.currentTarget.classList.contains(\'disabled\')) {\n                  //current number of panels\n                  var panels = cxt.propertiesPanels.length;\n                  var panelsMax = panels+3;\n\n                  cxt.get(\'json/locations.json\').then(function(locations) {\n\n                      var locationsMax = locations.length; //max number of locations\n\n                      if(locationsMax < panelsMax) {\n                          cxt.loadMore.classList.add(\'disabled\');\n                          for (i = panels; i < panelsMax; i++) {\n                              cxt.buildMobileList(locations[i], locations[i].location, locations[i].pics[0]); //create property panels\n                          }\n                      } else {\n                          for (i = panels; i < panelsMax; i++) {\n                              cxt.buildMobileList(locations[i], locations[i].location, locations[i].pics[0]); //create property panels\n                          }\n                      }\n\n                  }, function(error) {\n                    console.error("Failed!", error);\n                  });\n              }\n\n          });\n\n          cxt.get(\'json/locations.json\').then(function(locations) {\n\n              for (i = 0; i < locations.length; i++) {\n                  if(locations.length > 3 && i < 3) {\n                       cxt.buildMobileList(locations[i], locations[i].location, locations[i].pics[0]); //create property panels\n                  }\n              }\n\n          }, function(error) {\n            console.error("Failed!", error);\n          });\n      }\n\n    });\n\n\n}\n\nInitGoogleMaps.prototype.buildMobileList = function(data, title, picUrl) {\n\n    var cxt = this;\n    var parent = document.createElement(\'div\');\n    var imgCont = document.createElement(\'div\');\n    var img = document.createElement(\'img\');\n    var p = document.createElement(\'p\');\n\n    parent.classList.add(\'properties__panel\');\n    imgCont.classList.add(\'properties__panel--img-cont\');\n    parent.appendChild(imgCont);\n\n    img.setAttribute(\'src\', picUrl.url);\n    imgCont.appendChild(img);\n\n    p.innerHTML = title;\n    parent.appendChild(p);\n\n    this.propertiesContainer.appendChild(parent);\n\n    //add click handler and build overlay\n    parent.addEventListener(\'click\', function(){\n        cxt.mapOverlayLoading.classList.add(cxt.css.states.active);\n        cxt.mapOverlayLoading.style.zIndex = 3;\n        setTimeout(function(){\n            cxt.scrap();\n            cxt.buildOverlay(data);\n        }, 300);\n    });\n}\n\n\nInitGoogleMaps.prototype.get = function(url) {\n\n  return new Promise(function(resolve, reject) {\n\n    var req = new XMLHttpRequest();\n    req.open(\'GET\', url);\n\n    req.onload = function() {\n\n      if (req.status == 200) {\n        resolve(JSON.parse(req.response));\n      }\n      else {\n        reject(Error(req.statusText));\n      }\n    };\n\n    // Handle network errors\n    req.onerror = function() {\n      reject(Error("Network Error"));\n    };\n\n    req.send();\n  });\n}\n\nmodule.exports = InitGoogleMaps;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/scripts/widgets/maps.js\n// module id = 6\n// module chunks = 0\n//# sourceURL=webpack:///./assets/scripts/widgets/maps.js?')},function(module,exports,__webpack_require__){eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory) {\n\n\tif (root === null) {\n\t\tthrow new Error('Google-maps package can be used only in browser');\n\t}\n\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\troot.GoogleMapsLoader = factory();\n\t}\n\n})(typeof window !== 'undefined' ? window : null, function() {\n\n\n\t'use strict';\n\n\n\tvar googleVersion = '3.18';\n\n\tvar script = null;\n\n\tvar google = null;\n\n\tvar loading = false;\n\n\tvar callbacks = [];\n\n\tvar onLoadEvents = [];\n\n\tvar originalCreateLoaderMethod = null;\n\n\n\tvar GoogleMapsLoader = {};\n\n\n\tGoogleMapsLoader.URL = 'https://maps.googleapis.com/maps/api/js';\n\n\tGoogleMapsLoader.KEY = null;\n\n\tGoogleMapsLoader.LIBRARIES = [];\n\n\tGoogleMapsLoader.CLIENT = null;\n\n\tGoogleMapsLoader.CHANNEL = null;\n\n\tGoogleMapsLoader.LANGUAGE = null;\n\n\tGoogleMapsLoader.REGION = null;\n\n\tGoogleMapsLoader.VERSION = googleVersion;\n\n\tGoogleMapsLoader.WINDOW_CALLBACK_NAME = '__google_maps_api_provider_initializator__';\n\n\n\tGoogleMapsLoader._googleMockApiObject = {};\n\n\n\tGoogleMapsLoader.load = function(fn) {\n\t\tif (google === null) {\n\t\t\tif (loading === true) {\n\t\t\t\tif (fn) {\n\t\t\t\t\tcallbacks.push(fn);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tloading = true;\n\n\t\t\t\twindow[GoogleMapsLoader.WINDOW_CALLBACK_NAME] = function() {\n\t\t\t\t\tready(fn);\n\t\t\t\t};\n\n\t\t\t\tGoogleMapsLoader.createLoader();\n\t\t\t}\n\t\t} else if (fn) {\n\t\t\tfn(google);\n\t\t}\n\t};\n\n\n\tGoogleMapsLoader.createLoader = function() {\n\t\tscript = document.createElement('script');\n\t\tscript.type = 'text/javascript';\n\t\tscript.src = GoogleMapsLoader.createUrl();\n\n\t\tdocument.body.appendChild(script);\n\t};\n\n\n\tGoogleMapsLoader.isLoaded = function() {\n\t\treturn google !== null;\n\t};\n\n\n\tGoogleMapsLoader.createUrl = function() {\n\t\tvar url = GoogleMapsLoader.URL;\n\n\t\turl += '?callback=' + GoogleMapsLoader.WINDOW_CALLBACK_NAME;\n\n\t\tif (GoogleMapsLoader.KEY) {\n\t\t\turl += '&key=' + GoogleMapsLoader.KEY;\n\t\t}\n\n\t\tif (GoogleMapsLoader.LIBRARIES.length > 0) {\n\t\t\turl += '&libraries=' + GoogleMapsLoader.LIBRARIES.join(',');\n\t\t}\n\n\t\tif (GoogleMapsLoader.CLIENT) {\n\t\t\turl += '&client=' + GoogleMapsLoader.CLIENT + '&v=' + GoogleMapsLoader.VERSION;\n\t\t}\n\n\t\tif (GoogleMapsLoader.CHANNEL) {\n\t\t\turl += '&channel=' + GoogleMapsLoader.CHANNEL;\n\t\t}\n\n\t\tif (GoogleMapsLoader.LANGUAGE) {\n\t\t\turl += '&language=' + GoogleMapsLoader.LANGUAGE;\n\t\t}\n\n\t\tif (GoogleMapsLoader.REGION) {\n\t\t\turl += '&region=' + GoogleMapsLoader.REGION;\n\t\t}\n\n\t\treturn url;\n\t};\n\n\n\tGoogleMapsLoader.release = function(fn) {\n\t\tvar release = function() {\n\t\t\tGoogleMapsLoader.KEY = null;\n\t\t\tGoogleMapsLoader.LIBRARIES = [];\n\t\t\tGoogleMapsLoader.CLIENT = null;\n\t\t\tGoogleMapsLoader.CHANNEL = null;\n\t\t\tGoogleMapsLoader.LANGUAGE = null;\n\t\t\tGoogleMapsLoader.REGION = null;\n\t\t\tGoogleMapsLoader.VERSION = googleVersion;\n\n\t\t\tgoogle = null;\n\t\t\tloading = false;\n\t\t\tcallbacks = [];\n\t\t\tonLoadEvents = [];\n\n\t\t\tif (typeof window.google !== 'undefined') {\n\t\t\t\tdelete window.google;\n\t\t\t}\n\n\t\t\tif (typeof window[GoogleMapsLoader.WINDOW_CALLBACK_NAME] !== 'undefined') {\n\t\t\t\tdelete window[GoogleMapsLoader.WINDOW_CALLBACK_NAME];\n\t\t\t}\n\n\t\t\tif (originalCreateLoaderMethod !== null) {\n\t\t\t\tGoogleMapsLoader.createLoader = originalCreateLoaderMethod;\n\t\t\t\toriginalCreateLoaderMethod = null;\n\t\t\t}\n\n\t\t\tif (script !== null) {\n\t\t\t\tscript.parentElement.removeChild(script);\n\t\t\t\tscript = null;\n\t\t\t}\n\n\t\t\tif (fn) {\n\t\t\t\tfn();\n\t\t\t}\n\t\t};\n\n\t\tif (loading) {\n\t\t\tGoogleMapsLoader.load(function() {\n\t\t\t\trelease();\n\t\t\t});\n\t\t} else {\n\t\t\trelease();\n\t\t}\n\t};\n\n\n\tGoogleMapsLoader.onLoad = function(fn) {\n\t\tonLoadEvents.push(fn);\n\t};\n\n\n\tGoogleMapsLoader.makeMock = function() {\n\t\toriginalCreateLoaderMethod = GoogleMapsLoader.createLoader;\n\n\t\tGoogleMapsLoader.createLoader = function() {\n\t\t\twindow.google = GoogleMapsLoader._googleMockApiObject;\n\t\t\twindow[GoogleMapsLoader.WINDOW_CALLBACK_NAME]();\n\t\t};\n\t};\n\n\n\tvar ready = function(fn) {\n\t\tvar i;\n\n\t\tloading = false;\n\n\t\tif (google === null) {\n\t\t\tgoogle = window.google;\n\t\t}\n\n\t\tfor (i = 0; i < onLoadEvents.length; i++) {\n\t\t\tonLoadEvents[i](google);\n\t\t}\n\n\t\tif (fn) {\n\t\t\tfn(google);\n\t\t}\n\n\t\tfor (i = 0; i < callbacks.length; i++) {\n\t\t\tcallbacks[i](google);\n\t\t}\n\n\t\tcallbacks = [];\n\t};\n\n\n\treturn GoogleMapsLoader;\n\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/google-maps/lib/Google.js\n// module id = 7\n// module chunks = 0\n//# sourceURL=webpack:///./~/google-maps/lib/Google.js?")},function(module,exports,__webpack_require__){eval("'use strict';\n\nmodule.exports = __webpack_require__(9)\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/index.js\n// module id = 8\n// module chunks = 0\n//# sourceURL=webpack:///./~/promise/index.js?")},function(module,exports,__webpack_require__){eval("'use strict';\n\nmodule.exports = __webpack_require__(10);\n__webpack_require__(12);\n__webpack_require__(13);\n__webpack_require__(14);\n__webpack_require__(15);\n__webpack_require__(17);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/index.js\n// module id = 9\n// module chunks = 0\n//# sourceURL=webpack:///./~/promise/lib/index.js?")},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar asap = __webpack_require__(11);\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._75 = 0;\n  this._83 = 0;\n  this._18 = null;\n  this._38 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._47 = null;\nPromise._71 = null;\nPromise._44 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._83 === 3) {\n    self = self._18;\n  }\n  if (Promise._47) {\n    Promise._47(self);\n  }\n  if (self._83 === 0) {\n    if (self._75 === 0) {\n      self._75 = 1;\n      self._38 = deferred;\n      return;\n    }\n    if (self._75 === 1) {\n      self._75 = 2;\n      self._38 = [self._38, deferred];\n      return;\n    }\n    self._38.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._83 === 1) {\n        resolve(deferred.promise, self._18);\n      } else {\n        reject(deferred.promise, self._18);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._18);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._83 = 3;\n      self._18 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._83 = 1;\n  self._18 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._83 = 2;\n  self._18 = newValue;\n  if (Promise._71) {\n    Promise._71(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._75 === 1) {\n    handle(self, self._38);\n    self._38 = null;\n  }\n  if (self._75 === 2) {\n    for (var i = 0; i < self._38.length; i++) {\n      handle(self, self._38[i]);\n    }\n    self._38 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/core.js\n// module id = 10\n// module chunks = 0\n//# sourceURL=webpack:///./~/promise/lib/core.js?")},function(module,exports){
eval('/* WEBPACK VAR INJECTION */(function(global) {"use strict";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser\'s own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don\'t\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== "undefined" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === "function") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser\'s renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on("uncaughtException")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between "1" and "-1".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode("");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page\'s first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don\'t need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we\'re flushing, there\'s no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/asap/browser-raw.js\n// module id = 11\n// module chunks = 0\n//# sourceURL=webpack:///./~/asap/browser-raw.js?')},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar Promise = __webpack_require__(10);\n\nmodule.exports = Promise;\nPromise.prototype.done = function (onFulfilled, onRejected) {\n  var self = arguments.length ? this.then.apply(this, arguments) : this;\n  self.then(null, function (err) {\n    setTimeout(function () {\n      throw err;\n    }, 0);\n  });\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/done.js\n// module id = 12\n// module chunks = 0\n//# sourceURL=webpack:///./~/promise/lib/done.js?")},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar Promise = __webpack_require__(10);\n\nmodule.exports = Promise;\nPromise.prototype['finally'] = function (f) {\n  return this.then(function (value) {\n    return Promise.resolve(f()).then(function () {\n      return value;\n    });\n  }, function (err) {\n    return Promise.resolve(f()).then(function () {\n      throw err;\n    });\n  });\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/finally.js\n// module id = 13\n// module chunks = 0\n//# sourceURL=webpack:///./~/promise/lib/finally.js?")},function(module,exports,__webpack_require__){eval("'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = __webpack_require__(10);\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._44);\n  p._83 = 1;\n  p._18 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._83 === 3) {\n            val = val._18;\n          }\n          if (val._83 === 1) return res(i, val._18);\n          if (val._83 === 2) reject(val._18);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/es6-extensions.js\n// module id = 14\n// module chunks = 0\n//# sourceURL=webpack:///./~/promise/lib/es6-extensions.js?")},function(module,exports,__webpack_require__){eval("'use strict';\n\n// This file contains then/promise specific extensions that are only useful\n// for node.js interop\n\nvar Promise = __webpack_require__(10);\nvar asap = __webpack_require__(16);\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nPromise.denodeify = function (fn, argumentCount) {\n  if (\n    typeof argumentCount === 'number' && argumentCount !== Infinity\n  ) {\n    return denodeifyWithCount(fn, argumentCount);\n  } else {\n    return denodeifyWithoutCount(fn);\n  }\n};\n\nvar callbackFn = (\n  'function (err, res) {' +\n  'if (err) { rj(err); } else { rs(res); }' +\n  '}'\n);\nfunction denodeifyWithCount(fn, argumentCount) {\n  var args = [];\n  for (var i = 0; i < argumentCount; i++) {\n    args.push('a' + i);\n  }\n  var body = [\n    'return function (' + args.join(',') + ') {',\n    'var self = this;',\n    'return new Promise(function (rs, rj) {',\n    'var res = fn.call(',\n    ['self'].concat(args).concat([callbackFn]).join(','),\n    ');',\n    'if (res &&',\n    '(typeof res === \"object\" || typeof res === \"function\") &&',\n    'typeof res.then === \"function\"',\n    ') {rs(res);}',\n    '});',\n    '};'\n  ].join('');\n  return Function(['Promise', 'fn'], body)(Promise, fn);\n}\nfunction denodeifyWithoutCount(fn) {\n  var fnLength = Math.max(fn.length - 1, 3);\n  var args = [];\n  for (var i = 0; i < fnLength; i++) {\n    args.push('a' + i);\n  }\n  var body = [\n    'return function (' + args.join(',') + ') {',\n    'var self = this;',\n    'var args;',\n    'var argLength = arguments.length;',\n    'if (arguments.length > ' + fnLength + ') {',\n    'args = new Array(arguments.length + 1);',\n    'for (var i = 0; i < arguments.length; i++) {',\n    'args[i] = arguments[i];',\n    '}',\n    '}',\n    'return new Promise(function (rs, rj) {',\n    'var cb = ' + callbackFn + ';',\n    'var res;',\n    'switch (argLength) {',\n    args.concat(['extra']).map(function (_, index) {\n      return (\n        'case ' + (index) + ':' +\n        'res = fn.call(' + ['self'].concat(args.slice(0, index)).concat('cb').join(',') + ');' +\n        'break;'\n      );\n    }).join(''),\n    'default:',\n    'args[argLength] = cb;',\n    'res = fn.apply(self, args);',\n    '}',\n    \n    'if (res &&',\n    '(typeof res === \"object\" || typeof res === \"function\") &&',\n    'typeof res.then === \"function\"',\n    ') {rs(res);}',\n    '});',\n    '};'\n  ].join('');\n\n  return Function(\n    ['Promise', 'fn'],\n    body\n  )(Promise, fn);\n}\n\nPromise.nodeify = function (fn) {\n  return function () {\n    var args = Array.prototype.slice.call(arguments);\n    var callback =\n      typeof args[args.length - 1] === 'function' ? args.pop() : null;\n    var ctx = this;\n    try {\n      return fn.apply(this, arguments).nodeify(callback, ctx);\n    } catch (ex) {\n      if (callback === null || typeof callback == 'undefined') {\n        return new Promise(function (resolve, reject) {\n          reject(ex);\n        });\n      } else {\n        asap(function () {\n          callback.call(ctx, ex);\n        })\n      }\n    }\n  }\n};\n\nPromise.prototype.nodeify = function (callback, ctx) {\n  if (typeof callback != 'function') return this;\n\n  this.then(function (value) {\n    asap(function () {\n      callback.call(ctx, null, value);\n    });\n  }, function (err) {\n    asap(function () {\n      callback.call(ctx, err);\n    });\n  });\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/node-extensions.js\n// module id = 15\n// module chunks = 0\n//# sourceURL=webpack:///./~/promise/lib/node-extensions.js?")},function(module,exports,__webpack_require__){eval('"use strict";\n\n// rawAsap provides everything we need except exception management.\nvar rawAsap = __webpack_require__(11);\n// RawTasks are recycled to reduce GC churn.\nvar freeTasks = [];\n// We queue errors to ensure they are thrown in right order (FIFO).\n// Array-as-queue is good enough here, since we are just dealing with exceptions.\nvar pendingErrors = [];\nvar requestErrorThrow = rawAsap.makeRequestCallFromTimer(throwFirstError);\n\nfunction throwFirstError() {\n    if (pendingErrors.length) {\n        throw pendingErrors.shift();\n    }\n}\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nmodule.exports = asap;\nfunction asap(task) {\n    var rawTask;\n    if (freeTasks.length) {\n        rawTask = freeTasks.pop();\n    } else {\n        rawTask = new RawTask();\n    }\n    rawTask.task = task;\n    rawAsap(rawTask);\n}\n\n// We wrap tasks with recyclable task objects.  A task object implements\n// `call`, just like a function.\nfunction RawTask() {\n    this.task = null;\n}\n\n// The sole purpose of wrapping the task is to catch the exception and recycle\n// the task object after its single use.\nRawTask.prototype.call = function () {\n    try {\n        this.task.call();\n    } catch (error) {\n        if (asap.onerror) {\n            // This hook exists purely for testing purposes.\n            // Its name will be periodically randomized to break any code that\n            // depends on its existence.\n            asap.onerror(error);\n        } else {\n            // In a web browser, exceptions are not fatal. However, to avoid\n            // slowing down the queue of pending tasks, we rethrow the error in a\n            // lower priority turn.\n            pendingErrors.push(error);\n            requestErrorThrow();\n        }\n    } finally {\n        this.task = null;\n        freeTasks[freeTasks.length] = this;\n    }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/asap/browser-asap.js\n// module id = 16\n// module chunks = 0\n//# sourceURL=webpack:///./~/asap/browser-asap.js?')},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar Promise = __webpack_require__(10);\n\nmodule.exports = Promise;\nPromise.enableSynchronous = function () {\n  Promise.prototype.isPending = function() {\n    return this.getState() == 0;\n  };\n\n  Promise.prototype.isFulfilled = function() {\n    return this.getState() == 1;\n  };\n\n  Promise.prototype.isRejected = function() {\n    return this.getState() == 2;\n  };\n\n  Promise.prototype.getValue = function () {\n    if (this._83 === 3) {\n      return this._18.getValue();\n    }\n\n    if (!this.isFulfilled()) {\n      throw new Error('Cannot get a value of an unfulfilled promise.');\n    }\n\n    return this._18;\n  };\n\n  Promise.prototype.getReason = function () {\n    if (this._83 === 3) {\n      return this._18.getReason();\n    }\n\n    if (!this.isRejected()) {\n      throw new Error('Cannot get a rejection reason of a non-rejected promise.');\n    }\n\n    return this._18;\n  };\n\n  Promise.prototype.getState = function () {\n    if (this._83 === 3) {\n      return this._18.getState();\n    }\n    if (this._83 === -1 || this._83 === -2) {\n      return 0;\n    }\n\n    return this._83;\n  };\n};\n\nPromise.disableSynchronous = function() {\n  Promise.prototype.isPending = undefined;\n  Promise.prototype.isFulfilled = undefined;\n  Promise.prototype.isRejected = undefined;\n  Promise.prototype.getValue = undefined;\n  Promise.prototype.getReason = undefined;\n  Promise.prototype.getState = undefined;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/synchronous.js\n// module id = 17\n// module chunks = 0\n//# sourceURL=webpack:///./~/promise/lib/synchronous.js?")},function(module,exports,__webpack_require__){
eval("var MarkerClusterer = __webpack_require__(19);\nvar GoogleMaps = __webpack_require__(7);\nvar Promise = __webpack_require__(8);\nGoogleMaps.KEY = 'AIzaSyDor4jeGMzVTzl6x5QgpGPvahUSje9I-E0';\n\nfunction PropertyMap(node){\n    this.$node = node;\n    this.setVars();\n    this.init();\n}\n\nPropertyMap.prototype.setVars = function(){\n    this.css = {\n        states : {\n            'active':'active'\n        },\n        selectors : {\n            'mapOverlay' : 'mapOverlayHook',\n            'mapClose'  : '.map__overlay--close',\n            'mapCarouselTrack' : '.map__overlay--carousel-track',\n            'mapCarouselThumbnails' : '.map__overlay--thumbnails',\n            'mapOverlayTitle'  :  '.map__overlay--title',\n            'mapOverlayContents' : '.map__overlay--contents',\n            'mapOverlaySpotlight'  : '.map__overlay--spotlight',\n            'mapOverlayLoading' : '.map__overlay--loading',\n            'locationMobSelect' : 'locationMobSelectHook',\n            'propertiesPanel' : '.properties__panel',\n            'propertiesContainer' : '.properties__container',\n            'properties' : 'propertiesHook'\n        }\n    }\n}\n\nPropertyMap.prototype.init = function(){\n    var cxt = this;\n\n    var ww = window.innerWidth;\n\n    this.mapOverlay = document.getElementById(this.css.selectors.mapOverlay);\n    this.mapOverlayClose = this.mapOverlay.querySelector(this.css.selectors.mapClose);\n    this.mapCarouselThumbnails = this.mapOverlay.querySelector(this.css.selectors.mapCarouselThumbnails);\n    this.mapCarouselTrack = this.mapOverlay.querySelector(this.css.selectors.mapCarouselTrack);\n    this.mapOverlayTitle = this.mapOverlay.querySelector(this.css.selectors.mapOverlayTitle);\n    this.mapOverlayContents = this.mapOverlay.querySelector(this.css.selectors.mapOverlayContents);\n    this.mapOverlaySpotlight = this.mapOverlay.querySelector(this.css.selectors.mapOverlaySpotlight);\n    this.mapOverlayLoading = this.mapOverlay.querySelector(this.css.selectors.mapOverlayLoading);\n\n    //mobile selectors\n    this.locationMobSelect = document.getElementById(this.css.selectors.locationMobSelect);\n    this.properties = document.getElementById(this.css.selectors.properties);\n    this.propertiesContainer = this.properties.querySelector(this.css.selectors.propertiesContainer);\n    this.loadMore = this.properties.querySelector('a');\n\n\n    //same close button for desktop and mobile overlays\n    this.mapOverlayClose.addEventListener('click', function(e){\n        e.preventDefault();\n        cxt.mapOverlay.classList.remove(cxt.css.states.active);\n    });\n\n\n    GoogleMaps.load(function(google) {\n        var map;\n          var styles = {\n              silver:\n                [\n                    {\n                        \"featureType\": \"all\",\n                        \"elementType\": \"geometry\",\n                        \"stylers\": [\n                            {\n                                \"color\": \"#92d1f4\"\n                            }\n                        ]\n                    },\n                    {\n                        \"featureType\": \"all\",\n                        \"elementType\": \"labels.text.fill\",\n                        \"stylers\": [\n                            {\n                                \"gamma\": 0.01\n                            },\n                            {\n                                \"lightness\": 20\n                            }\n                        ]\n                    },\n                    {\n                        \"featureType\": \"all\",\n                        \"elementType\": \"labels.text.stroke\",\n                        \"stylers\": [\n                            {\n                                \"saturation\": -31\n                            },\n                            {\n                                \"lightness\": -33\n                            },\n                            {\n                                \"weight\": 2\n                            },\n                            {\n                                \"gamma\": 0.8\n                            }\n                        ]\n                    },\n                    {\n                        \"featureType\": \"all\",\n                        \"elementType\": \"labels.icon\",\n                        \"stylers\": [\n                            {\n                                \"visibility\": \"off\"\n                            }\n                        ]\n                    },\n                    {\n                        \"featureType\": \"landscape\",\n                        \"elementType\": \"geometry\",\n                        \"stylers\": [\n                            {\n                                \"lightness\": 80\n                            },\n                            {\n                                \"saturation\": 10\n                            }\n                        ]\n                    },\n                    {\n                        \"featureType\": \"poi\",\n                        \"elementType\": \"geometry\",\n                        \"stylers\": [\n                            {\n                                \"saturation\": 20\n                            }\n                        ]\n                    },\n                    {\n                        \"featureType\": \"poi.park\",\n                        \"elementType\": \"geometry\",\n                        \"stylers\": [\n                            {\n                                \"lightness\": 70\n                            },\n                            {\n                                \"saturation\": -20\n                            }\n                        ]\n                    },\n                    {\n                        \"featureType\": \"road\",\n                        \"elementType\": \"geometry\",\n                        \"stylers\": [\n                            {\n                                \"lightness\": 670\n                            },\n                            {\n                                \"saturation\": -30\n                            }\n                        ]\n                    },\n                    {\n                        \"featureType\": \"road\",\n                        \"elementType\": \"geometry.stroke\",\n                        \"stylers\": [\n                            {\n                                \"saturation\": 25\n                            },\n                            {\n                                \"lightness\": 25\n                            }\n                        ]\n                    },\n                    {\n                        \"featureType\": \"water\",\n                        \"elementType\": \"all\",\n                        \"stylers\": [\n                            {\n                                \"saturation\": 35\n                            },\n                            {\n                                \"lightness\":20\n                            }\n                        ]\n                    }\n                ]\n            };\n\n\n          var myStyles =[\n            {\n                featureType: \"poi\",\n                elementType: \"labels\",\n                stylers: [\n                      { visibility: \"off\" }\n                ]\n            },\n            {\n              featureType: 'transit',\n              elementType: 'labels.icon',\n              stylers: [{visibility: 'off'}]\n            }\n        ];\n\n\n        var options = {\n           draggable: true,\n           scrollwheel: true,\n           panControl: true,\n           zoom: 6,\n           disableDefaultUI: true,\n           zoomControl: true,\n           clickableIcons: true,\n           center: {lat: 53.634566, lng: -3.472727},\n           mapTypeId: google.maps.MapTypeId.ROADMAP,\n           styles: myStyles\n       };\n\n\n       if(ww > 768) {\n           map = new google.maps.Map(cxt.$node, options);\n           map.setOptions({styles: styles['silver']});\n\n           //Resize Function\n           google.maps.event.addDomListener(window, \"resize\", function() {\n               var center = map.getCenter();\n               google.maps.event.trigger(map, \"resize\");\n               map.setCenter(center);\n           });\n\n           var image = {\n             url: './dist/images/icons/pin.png',\n             size: new google.maps.Size(37, 40),\n             origin: new google.maps.Point(0, 0),\n             anchor: new google.maps.Point(0, 32)\n           };\n\n           var marker, i;\n           var gmarkers = []; //marker for clusters\n\n           cxt.get('json/locations.json').then(function(locations) {\n\n               for (i = 0; i < locations.length; i++) {\n                   marker = new google.maps.Marker({\n                       position: new google.maps.LatLng(locations[i].lat, locations[i].lng),\n                       map: map,\n                       icon: image\n                   });\n\n                   google.maps.event.addListener(marker, \"click\", (function(marker, i) {\n                       return function() {\n                           cxt.mapOverlayLoading.classList.add(cxt.css.states.active);\n                           cxt.mapOverlayLoading.style.zIndex = 3;\n                           setTimeout(function(){\n                               cxt.scrap();\n                               cxt.buildOverlay(locations[i]);\n                           }, 300);\n                       }\n                   })(marker, i));\n\n                   gmarkers.push(marker);\n               }\n\n               //begin cluster definition\n               var clusterStyles = [\n                   {\n                       textColor: 'white',\n                       textSize: 16,\n                       url: 'dist/images/icons/m1.png',\n                       height: 48,\n                       width: 48\n                   },\n                   {\n                       textColor: 'white',\n                       textSize: 16,\n                       url: 'dist/images/icons/m2.png',\n                       height: 48,\n                       width: 48\n                   },\n                   {\n                       textColor: 'white',\n                       textSize: 16,\n                       url: 'dist/images/icons/m3.png',\n                       height: 48,\n                       width: 48\n                   },\n                   {\n                       textColor: 'white',\n                       textSize: 16,\n                       url: 'dist/images/icons/m4.png',\n                       height: 48,\n                       width: 48\n                   },\n                   {\n                       textColor: 'white',\n                       textSize: 16,\n                       url: 'dist/images/icons/m5.png',\n                       height: 48,\n                       width: 48\n                   }\n               ];\n\n\n                 var mcOptions = {\n                     gridSize: 50,\n                     styles: clusterStyles,\n                     maxZoom: 15\n                 };\n\n                 var markerCluster = new MarkerClusterer(map, gmarkers, mcOptions);\n\n           }, function(error) {\n             console.error(\"Failed!\", error);\n           });\n\n       } else {\n\n           //load more button functionality\n           // NOTE: move json out inton seperate method\n           cxt.loadMore.addEventListener('click', function(e){\n               e.preventDefault();\n\n               cxt.propertiesPanels = cxt.properties.querySelectorAll(cxt.css.selectors.propertiesPanel);\n               //prevent action if button is disabled\n               if(!e.currentTarget.classList.contains('disabled')) {\n                   //current number of panels\n                   var panels = cxt.propertiesPanels.length;\n                   var panelsMax = panels+3;\n\n                   cxt.get('json/locations.json').then(function(locations) {\n\n                       var locationsMax = locations.length; //max number of locations\n\n                       if(locationsMax < panelsMax) {\n                           cxt.loadMore.classList.add('disabled');\n                           for (i = panels; i < panelsMax; i++) {\n                               cxt.buildMobileList(locations[i], locations[i].location, locations[i].pics[0]); //create property panels\n                           }\n                       } else {\n                           for (i = panels; i < panelsMax; i++) {\n                               cxt.buildMobileList(locations[i], locations[i].location, locations[i].pics[0]); //create property panels\n                           }\n                       }\n\n                   }, function(error) {\n                     console.error(\"Failed!\", error);\n                   });\n               }\n\n           });\n\n           cxt.get('json/locations.json').then(function(locations) {\n\n               for (i = 0; i < locations.length; i++) {\n                   if(locations.length > 3 && i < 3) {\n                        cxt.buildMobileList(locations[i], locations[i].location, locations[i].pics[0]); //create property panels\n                   }\n               }\n\n           }, function(error) {\n             console.error(\"Failed!\", error);\n           });\n       }\n\n    });\n\n}\n\n\nPropertyMap.prototype.buildMobileList = function(data, title, picUrl) {\n\n    var cxt = this;\n    var parent = document.createElement('div');\n    var imgCont = document.createElement('div');\n    var img = document.createElement('img');\n    var p = document.createElement('p');\n\n    parent.classList.add('properties__panel');\n    imgCont.classList.add('properties__panel--img-cont');\n    parent.appendChild(imgCont);\n\n    img.setAttribute('src', picUrl.url);\n    imgCont.appendChild(img);\n\n    p.innerHTML = title;\n    parent.appendChild(p);\n\n    this.propertiesContainer.appendChild(parent);\n\n    //add click handler and build overlay\n    parent.addEventListener('click', function(){\n        cxt.mapOverlayLoading.classList.add(cxt.css.states.active);\n        cxt.mapOverlayLoading.style.zIndex = 3;\n        setTimeout(function(){\n            cxt.scrap();\n            cxt.buildOverlay(data);\n        }, 300);\n    });\n}\n\n\nPropertyMap.prototype.get = function(url) {\n\n  return new Promise(function(resolve, reject) {\n\n    var req = new XMLHttpRequest();\n    req.open('GET', url);\n\n    req.onload = function() {\n\n      if (req.status == 200) {\n        resolve(JSON.parse(req.response));\n      }\n      else {\n        reject(Error(req.statusText));\n      }\n    };\n\n    // Handle network errors\n    req.onerror = function() {\n      reject(Error(\"Network Error\"));\n    };\n\n    req.send();\n  });\n}\n\nPropertyMap.prototype.scrap = function(){\n    var h4 = this.mapOverlayTitle.querySelector('h4');\n    var p = this.mapOverlayContents.querySelector('p');\n    var li = this.mapOverlayContents.querySelectorAll('li');\n\n    h4.innerHTML = '';\n    p.innerHTML = '';\n    [].forEach.call(li, function(el, index, array){\n        el.innerHTML = '';\n    });\n    this.mapCarouselTrack.innerHTML = '';\n    this.mapCarouselThumbnails.innerHTML = '';\n}\n\nPropertyMap.prototype.initCarousel = function(){\n    var cxt = this;\n    var thumbs = this.mapCarouselThumbnails.querySelectorAll('a');\n    var imgs = this.mapCarouselTrack.querySelectorAll('img');\n    var imgsNum = imgs.length;\n    var imgWidth = this.mapOverlaySpotlight.getBoundingClientRect().width;\n\n    [].forEach.call(imgs, function(el, index, array){\n        el.setAttribute('data-imgindex', index);\n        el.style.width = imgWidth + 'px';\n    });\n\n    [].forEach.call(thumbs, function(el, index, array){\n        el.setAttribute('data-thumbindex', index);\n\n        el.addEventListener('click', function(e){\n            e.preventDefault();\n            var active = cxt.mapCarouselThumbnails.querySelector('.'+cxt.css.states.active);\n            active.classList.toggle(cxt.css.states.active);\n            e.currentTarget.classList.toggle(cxt.css.states.active);\n\n            var i = parseInt(e.currentTarget.getAttribute('data-thumbindex'));\n            cxt.mapCarouselTrack.style.webkitTransform = 'translateX('+ -(i*imgWidth) + 'px)';\n            cxt.mapCarouselTrack.style.transform = 'translateX('+ -(i*imgWidth) + 'px)';\n        });\n    });\n\n    this.mapOverlay.classList.add(cxt.css.states.active);\n    this.mapCarouselTrack.style.width = imgWidth*imgsNum + 'px';\n    cxt.mapOverlayLoading.classList.remove(cxt.css.states.active);\n    setTimeout(function(){\n        cxt.mapOverlayLoading.style.zIndex = -1;\n    }, 300);\n}\n\nPropertyMap.prototype.buildOverlay = function(data){\n    var cxt = this;\n\n    //title\n    var h4 = this.mapOverlayTitle.querySelector('h4');\n    h4.innerHTML = data.location;\n\n    //intro and bullets\n    var p = this.mapOverlayContents.querySelector('p');\n    var li = this.mapOverlayContents.querySelectorAll('li');\n\n    [].forEach.call(li, function(el, index, array){\n        el.innerHTML = '<span class=\"check\"></span>' + data.points[index].txt;\n    });\n\n    p.innerHTML = data.intro;\n\n    //fill thumbnails\n    //fill gallery\n    console.log(data.pics.length);\n    data.pics.forEach(function(i){\n        var img = document.createElement('img');\n        var a = document.createElement('a');\n        img.setAttribute('src', i.url);\n        a.innerHTML = \"<img src=\"+ i.url +\" alt=''>\";\n        cxt.mapCarouselTrack.appendChild(img);\n        cxt.mapCarouselThumbnails.appendChild(a);\n    });\n\n    var firstAnchor = cxt.mapCarouselThumbnails.querySelectorAll('a')[0];\n    firstAnchor.classList.add(this.css.states.active);\n\n    cxt.initCarousel();\n}\n\nmodule.exports = PropertyMap;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/scripts/widgets/property-map.js\n// module id = 18\n// module chunks = 0\n//# sourceURL=webpack:///./assets/scripts/widgets/property-map.js?")},function(module,exports){
eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * Npm version of markerClusterer works great with browserify and google maps for commonjs\n * https://www.npmjs.com/package/googlemaps\n * Difference from the original - adds a commonjs format and replaces window with global and some unit test\n * The original functionality it's not modified for docs and original source check\n * https://github.com/googlemaps/js-marker-clusterer\n */\n\n/**\n * @name MarkerClusterer for Google Maps v3\n * @version version 1.0\n * @author Luke Mahe\n * @fileoverview\n * The library creates and manages per-zoom-level clusters for large amounts of\n * markers.\n * <br/>\n * This is a v3 implementation of the\n * <a href=\"http://gmaps-utility-library-dev.googlecode.com/svn/tags/markerclusterer/\"\n * >v2 MarkerClusterer</a>.\n */\n\n/**\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * A Marker Clusterer that clusters markers.\n *\n * @param {google.maps.Map} map The Google map to attach to.\n * @param {Array.<google.maps.Marker>=} opt_markers Optional markers to add to\n *   the cluster.\n * @param {Object=} opt_options support the following options:\n *     'gridSize': (number) The grid size of a cluster in pixels.\n *     'maxZoom': (number) The maximum zoom level that a marker can be part of a\n *                cluster.\n *     'zoomOnClick': (boolean) Whether the default behaviour of clicking on a\n *                    cluster is to zoom into it.\n *     'averageCenter': (boolean) Wether the center of each cluster should be\n *                      the average of all markers in the cluster.\n *     'minimumClusterSize': (number) The minimum number of markers to be in a\n *                           cluster before the markers are hidden and a count\n *                           is shown.\n *     'styles': (object) An object that has style properties:\n *       'url': (string) The image url.\n *       'height': (number) The image height.\n *       'width': (number) The image width.\n *       'anchor': (Array) The anchor position of the label text.\n *       'textColor': (string) The text color.\n *       'textSize': (number) The text size.\n *       'backgroundPosition': (string) The position of the backgound x, y.\n * @constructor\n * @extends google.maps.OverlayView\n */\nfunction MarkerClusterer(map, opt_markers, opt_options) {\n  // MarkerClusterer implements google.maps.OverlayView interface. We use the\n  // extend function to extend MarkerClusterer with google.maps.OverlayView\n  // because it might not always be available when the code is defined so we\n  // look for it at the last possible moment. If it doesn't exist now then\n  // there is no point going ahead :)\n  this.extend(MarkerClusterer, google.maps.OverlayView);\n  this.map_ = map;\n\n  /**\n   * @type {Array.<google.maps.Marker>}\n   * @private\n   */\n  this.markers_ = [];\n\n  /**\n   *  @type {Array.<Cluster>}\n   */\n  this.clusters_ = [];\n\n  this.sizes = [53, 56, 66, 78, 90];\n\n  /**\n   * @private\n   */\n  this.styles_ = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.ready_ = false;\n\n  var options = opt_options || {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.gridSize_ = options['gridSize'] || 60;\n\n  /**\n   * @private\n   */\n  this.minClusterSize_ = options['minimumClusterSize'] || 2;\n\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.maxZoom_ = options['maxZoom'] || null;\n\n  this.styles_ = options['styles'] || [];\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.imagePath_ = options['imagePath'] ||\n      this.MARKER_CLUSTER_IMAGE_PATH_;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.imageExtension_ = options['imageExtension'] ||\n      this.MARKER_CLUSTER_IMAGE_EXTENSION_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.zoomOnClick_ = true;\n\n  if (options['zoomOnClick'] != undefined) {\n    this.zoomOnClick_ = options['zoomOnClick'];\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.averageCenter_ = false;\n\n  if (options['averageCenter'] != undefined) {\n    this.averageCenter_ = options['averageCenter'];\n  }\n\n  this.setupStyles_();\n\n  this.setMap(map);\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevZoom_ = this.map_.getZoom();\n\n  // Add the map event listeners\n  var that = this;\n  google.maps.event.addListener(this.map_, 'zoom_changed', function() {\n    var zoom = that.map_.getZoom();\n\n    if (that.prevZoom_ != zoom) {\n      that.prevZoom_ = zoom;\n      that.resetViewport();\n    }\n  });\n\n  google.maps.event.addListener(this.map_, 'idle', function() {\n    that.redraw();\n  });\n\n  // Finally, add the markers\n  if (opt_markers && opt_markers.length) {\n    this.addMarkers(opt_markers, false);\n  }\n}\n\n\n/**\n * The marker cluster image path.\n *\n * @type {string}\n * @private\n */\nMarkerClusterer.prototype.MARKER_CLUSTER_IMAGE_PATH_ =\n    'http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclusterer/' +\n    'images/m';\n\n\n/**\n * The marker cluster image path.\n *\n * @type {string}\n * @private\n */\nMarkerClusterer.prototype.MARKER_CLUSTER_IMAGE_EXTENSION_ = 'png';\n\n\n/**\n * Extends a objects prototype by anothers.\n *\n * @param {Object} obj1 The object to be extended.\n * @param {Object} obj2 The object to extend with.\n * @return {Object} The new extended object.\n * @ignore\n */\nMarkerClusterer.prototype.extend = function(obj1, obj2) {\n  return (function(object) {\n    for (var property in object.prototype) {\n      this.prototype[property] = object.prototype[property];\n    }\n    return this;\n  }).apply(obj1, [obj2]);\n};\n\n\n/**\n * Implementaion of the interface method.\n * @ignore\n */\nMarkerClusterer.prototype.onAdd = function() {\n  this.setReady_(true);\n};\n\n/**\n * Implementaion of the interface method.\n * @ignore\n */\nMarkerClusterer.prototype.draw = function() {};\n\n/**\n * Sets up the styles object.\n *\n * @private\n */\nMarkerClusterer.prototype.setupStyles_ = function() {\n  if (this.styles_.length) {\n    return;\n  }\n\n  for (var i = 0, size; size = this.sizes[i]; i++) {\n    this.styles_.push({\n      url: this.imagePath_ + (i + 1) + '.' + this.imageExtension_,\n      height: size,\n      width: size\n    });\n  }\n};\n\n/**\n *  Fit the map to the bounds of the markers in the clusterer.\n */\nMarkerClusterer.prototype.fitMapToMarkers = function() {\n  var markers = this.getMarkers();\n  var bounds = new google.maps.LatLngBounds();\n  for (var i = 0, marker; marker = markers[i]; i++) {\n    bounds.extend(marker.getPosition());\n  }\n\n  this.map_.fitBounds(bounds);\n};\n\n\n/**\n *  Sets the styles.\n *\n *  @param {Object} styles The style to set.\n */\nMarkerClusterer.prototype.setStyles = function(styles) {\n  this.styles_ = styles;\n};\n\n\n/**\n *  Gets the styles.\n *\n *  @return {Object} The styles object.\n */\nMarkerClusterer.prototype.getStyles = function() {\n  return this.styles_;\n};\n\n\n/**\n * Whether zoom on click is set.\n *\n * @return {boolean} True if zoomOnClick_ is set.\n */\nMarkerClusterer.prototype.isZoomOnClick = function() {\n  return this.zoomOnClick_;\n};\n\n/**\n * Whether average center is set.\n *\n * @return {boolean} True if averageCenter_ is set.\n */\nMarkerClusterer.prototype.isAverageCenter = function() {\n  return this.averageCenter_;\n};\n\n\n/**\n *  Returns the array of markers in the clusterer.\n *\n *  @return {Array.<google.maps.Marker>} The markers.\n */\nMarkerClusterer.prototype.getMarkers = function() {\n  return this.markers_;\n};\n\n\n/**\n *  Returns the number of markers in the clusterer\n *\n *  @return {Number} The number of markers.\n */\nMarkerClusterer.prototype.getTotalMarkers = function() {\n  return this.markers_.length;\n};\n\n\n/**\n *  Sets the max zoom for the clusterer.\n *\n *  @param {number} maxZoom The max zoom level.\n */\nMarkerClusterer.prototype.setMaxZoom = function(maxZoom) {\n  this.maxZoom_ = maxZoom;\n};\n\n\n/**\n *  Gets the max zoom for the clusterer.\n *\n *  @return {number} The max zoom level.\n */\nMarkerClusterer.prototype.getMaxZoom = function() {\n  return this.maxZoom_;\n};\n\n\n/**\n *  The function for calculating the cluster icon image.\n *\n *  @param {Array.<google.maps.Marker>} markers The markers in the clusterer.\n *  @param {number} numStyles The number of styles available.\n *  @return {Object} A object properties: 'text' (string) and 'index' (number).\n *  @private\n */\nMarkerClusterer.prototype.calculator_ = function(markers, numStyles) {\n  var index = 0;\n  var count = markers.length;\n  var dv = count;\n  while (dv !== 0) {\n    dv = parseInt(dv / 10, 10);\n    index++;\n  }\n\n  index = Math.min(index, numStyles);\n  return {\n    text: count,\n    index: index\n  };\n};\n\n\n/**\n * Set the calculator function.\n *\n * @param {function(Array, number)} calculator The function to set as the\n *     calculator. The function should return a object properties:\n *     'text' (string) and 'index' (number).\n *\n */\nMarkerClusterer.prototype.setCalculator = function(calculator) {\n  this.calculator_ = calculator;\n};\n\n\n/**\n * Get the calculator function.\n *\n * @return {function(Array, number)} the calculator function.\n */\nMarkerClusterer.prototype.getCalculator = function() {\n  return this.calculator_;\n};\n\n\n/**\n * Add an array of markers to the clusterer.\n *\n * @param {Array.<google.maps.Marker>} markers The markers to add.\n * @param {boolean=} opt_nodraw Whether to redraw the clusters.\n */\nMarkerClusterer.prototype.addMarkers = function(markers, opt_nodraw) {\n  for (var i = 0, marker; marker = markers[i]; i++) {\n    this.pushMarkerTo_(marker);\n  }\n  if (!opt_nodraw) {\n    this.redraw();\n  }\n};\n\n\n/**\n * Pushes a marker to the clusterer.\n *\n * @param {google.maps.Marker} marker The marker to add.\n * @private\n */\nMarkerClusterer.prototype.pushMarkerTo_ = function(marker) {\n  marker.isAdded = false;\n  if (marker['draggable']) {\n    // If the marker is draggable add a listener so we update the clusters on\n    // the drag end.\n    var that = this;\n    google.maps.event.addListener(marker, 'dragend', function() {\n      marker.isAdded = false;\n      that.repaint();\n    });\n  }\n  this.markers_.push(marker);\n};\n\n\n/**\n * Adds a marker to the clusterer and redraws if needed.\n *\n * @param {google.maps.Marker} marker The marker to add.\n * @param {boolean=} opt_nodraw Whether to redraw the clusters.\n */\nMarkerClusterer.prototype.addMarker = function(marker, opt_nodraw) {\n  this.pushMarkerTo_(marker);\n  if (!opt_nodraw) {\n    this.redraw();\n  }\n};\n\n\n/**\n * Removes a marker and returns true if removed, false if not\n *\n * @param {google.maps.Marker} marker The marker to remove\n * @return {boolean} Whether the marker was removed or not\n * @private\n */\nMarkerClusterer.prototype.removeMarker_ = function(marker) {\n  var index = -1;\n  if (this.markers_.indexOf) {\n    index = this.markers_.indexOf(marker);\n  } else {\n    for (var i = 0, m; m = this.markers_[i]; i++) {\n      if (m == marker) {\n        index = i;\n        break;\n      }\n    }\n  }\n\n  if (index == -1) {\n    // Marker is not in our list of markers.\n    return false;\n  }\n\n  marker.setMap(null);\n\n  this.markers_.splice(index, 1);\n\n  return true;\n};\n\n\n/**\n * Remove a marker from the cluster.\n *\n * @param {google.maps.Marker} marker The marker to remove.\n * @param {boolean=} opt_nodraw Optional boolean to force no redraw.\n * @return {boolean} True if the marker was removed.\n */\nMarkerClusterer.prototype.removeMarker = function(marker, opt_nodraw) {\n  var removed = this.removeMarker_(marker);\n\n  if (!opt_nodraw && removed) {\n    this.resetViewport();\n    this.redraw();\n    return true;\n  } else {\n   return false;\n  }\n};\n\n\n/**\n * Removes an array of markers from the cluster.\n *\n * @param {Array.<google.maps.Marker>} markers The markers to remove.\n * @param {boolean=} opt_nodraw Optional boolean to force no redraw.\n */\nMarkerClusterer.prototype.removeMarkers = function(markers, opt_nodraw) {\n  var removed = false;\n\n  for (var i = 0, marker; marker = markers[i]; i++) {\n    var r = this.removeMarker_(marker);\n    removed = removed || r;\n  }\n\n  if (!opt_nodraw && removed) {\n    this.resetViewport();\n    this.redraw();\n    return true;\n  }\n};\n\n\n/**\n * Sets the clusterer's ready state.\n *\n * @param {boolean} ready The state.\n * @private\n */\nMarkerClusterer.prototype.setReady_ = function(ready) {\n  if (!this.ready_) {\n    this.ready_ = ready;\n    this.createClusters_();\n  }\n};\n\n\n/**\n * Returns the number of clusters in the clusterer.\n *\n * @return {number} The number of clusters.\n */\nMarkerClusterer.prototype.getTotalClusters = function() {\n  return this.clusters_.length;\n};\n\n\n/**\n * Returns the google map that the clusterer is associated with.\n *\n * @return {google.maps.Map} The map.\n */\nMarkerClusterer.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Sets the google map that the clusterer is associated with.\n *\n * @param {google.maps.Map} map The map.\n */\nMarkerClusterer.prototype.setMap = function(map) {\n  this.map_ = map;\n};\n\n\n/**\n * Returns the size of the grid.\n *\n * @return {number} The grid size.\n */\nMarkerClusterer.prototype.getGridSize = function() {\n  return this.gridSize_;\n};\n\n\n/**\n * Sets the size of the grid.\n *\n * @param {number} size The grid size.\n */\nMarkerClusterer.prototype.setGridSize = function(size) {\n  this.gridSize_ = size;\n};\n\n\n/**\n * Returns the min cluster size.\n *\n * @return {number} The grid size.\n */\nMarkerClusterer.prototype.getMinClusterSize = function() {\n  return this.minClusterSize_;\n};\n\n/**\n * Sets the min cluster size.\n *\n * @param {number} size The grid size.\n */\nMarkerClusterer.prototype.setMinClusterSize = function(size) {\n  this.minClusterSize_ = size;\n};\n\n\n/**\n * Extends a bounds object by the grid size.\n *\n * @param {google.maps.LatLngBounds} bounds The bounds to extend.\n * @return {google.maps.LatLngBounds} The extended bounds.\n */\nMarkerClusterer.prototype.getExtendedBounds = function(bounds) {\n  var projection = this.getProjection();\n\n  // Turn the bounds into latlng.\n  var tr = new google.maps.LatLng(bounds.getNorthEast().lat(),\n      bounds.getNorthEast().lng());\n  var bl = new google.maps.LatLng(bounds.getSouthWest().lat(),\n      bounds.getSouthWest().lng());\n\n  // Convert the points to pixels and the extend out by the grid size.\n  var trPix = projection.fromLatLngToDivPixel(tr);\n  trPix.x += this.gridSize_;\n  trPix.y -= this.gridSize_;\n\n  var blPix = projection.fromLatLngToDivPixel(bl);\n  blPix.x -= this.gridSize_;\n  blPix.y += this.gridSize_;\n\n  // Convert the pixel points back to LatLng\n  var ne = projection.fromDivPixelToLatLng(trPix);\n  var sw = projection.fromDivPixelToLatLng(blPix);\n\n  // Extend the bounds to contain the new bounds.\n  bounds.extend(ne);\n  bounds.extend(sw);\n\n  return bounds;\n};\n\n\n/**\n * Determins if a marker is contained in a bounds.\n *\n * @param {google.maps.Marker} marker The marker to check.\n * @param {google.maps.LatLngBounds} bounds The bounds to check against.\n * @return {boolean} True if the marker is in the bounds.\n * @private\n */\nMarkerClusterer.prototype.isMarkerInBounds_ = function(marker, bounds) {\n  return bounds.contains(marker.getPosition());\n};\n\n\n/**\n * Clears all clusters and markers from the clusterer.\n */\nMarkerClusterer.prototype.clearMarkers = function() {\n  this.resetViewport(true);\n\n  // Set the markers a empty array.\n  this.markers_ = [];\n};\n\n\n/**\n * Clears all existing clusters and recreates them.\n * @param {boolean} opt_hide To also hide the marker.\n */\nMarkerClusterer.prototype.resetViewport = function(opt_hide) {\n  // Remove all the clusters\n  for (var i = 0, cluster; cluster = this.clusters_[i]; i++) {\n    cluster.remove();\n  }\n\n  // Reset the markers to not be added and to be invisible.\n  for (var i = 0, marker; marker = this.markers_[i]; i++) {\n    marker.isAdded = false;\n    if (opt_hide) {\n      marker.setMap(null);\n    }\n  }\n\n  this.clusters_ = [];\n};\n\n/**\n *\n */\nMarkerClusterer.prototype.repaint = function() {\n  var oldClusters = this.clusters_.slice();\n  this.clusters_.length = 0;\n  this.resetViewport();\n  this.redraw();\n\n  // Remove the old clusters.\n  // Do it in a timeout so the other clusters have been drawn first.\n  window.setTimeout(function() {\n    for (var i = 0, cluster; cluster = oldClusters[i]; i++) {\n      cluster.remove();\n    }\n  }, 0);\n};\n\n\n/**\n * Redraws the clusters.\n */\nMarkerClusterer.prototype.redraw = function() {\n  this.createClusters_();\n};\n\n\n/**\n * Calculates the distance between two latlng locations in km.\n * @see http://www.movable-type.co.uk/scripts/latlong.html\n *\n * @param {google.maps.LatLng} p1 The first lat lng point.\n * @param {google.maps.LatLng} p2 The second lat lng point.\n * @return {number} The distance between the two points in km.\n * @private\n*/\nMarkerClusterer.prototype.distanceBetweenPoints_ = function(p1, p2) {\n  if (!p1 || !p2) {\n    return 0;\n  }\n\n  var R = 6371; // Radius of the Earth in km\n  var dLat = (p2.lat() - p1.lat()) * Math.PI / 180;\n  var dLon = (p2.lng() - p1.lng()) * Math.PI / 180;\n  var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(p1.lat() * Math.PI / 180) * Math.cos(p2.lat() * Math.PI / 180) *\n    Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c;\n  return d;\n};\n\n\n/**\n * Add a marker to a cluster, or creates a new cluster.\n *\n * @param {google.maps.Marker} marker The marker to add.\n * @private\n */\nMarkerClusterer.prototype.addToClosestCluster_ = function(marker) {\n  var distance = 40000; // Some large number\n  var clusterToAddTo = null;\n  var pos = marker.getPosition();\n  for (var i = 0, cluster; cluster = this.clusters_[i]; i++) {\n    var center = cluster.getCenter();\n    if (center) {\n      var d = this.distanceBetweenPoints_(center, marker.getPosition());\n      if (d < distance) {\n        distance = d;\n        clusterToAddTo = cluster;\n      }\n    }\n  }\n\n  if (clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)) {\n    clusterToAddTo.addMarker(marker);\n  } else {\n    var cluster = new Cluster(this);\n    cluster.addMarker(marker);\n    this.clusters_.push(cluster);\n  }\n};\n\n\n/**\n * Creates the clusters.\n *\n * @private\n */\nMarkerClusterer.prototype.createClusters_ = function() {\n  if (!this.ready_) {\n    return;\n  }\n\n  // Get our current map view bounds.\n  // Create a new bounds object so we don't affect the map.\n  var mapBounds = new google.maps.LatLngBounds(this.map_.getBounds().getSouthWest(),\n      this.map_.getBounds().getNorthEast());\n  var bounds = this.getExtendedBounds(mapBounds);\n\n  for (var i = 0, marker; marker = this.markers_[i]; i++) {\n    if (!marker.isAdded && this.isMarkerInBounds_(marker, bounds)) {\n      this.addToClosestCluster_(marker);\n    }\n  }\n};\n\n\n/**\n * A cluster that contains markers.\n *\n * @param {MarkerClusterer} markerClusterer The markerclusterer that this\n *     cluster is associated with.\n * @constructor\n * @ignore\n */\nfunction Cluster(markerClusterer) {\n  this.markerClusterer_ = markerClusterer;\n  this.map_ = markerClusterer.getMap();\n  this.gridSize_ = markerClusterer.getGridSize();\n  this.minClusterSize_ = markerClusterer.getMinClusterSize();\n  this.averageCenter_ = markerClusterer.isAverageCenter();\n  this.center_ = null;\n  this.markers_ = [];\n  this.bounds_ = null;\n  this.clusterIcon_ = new ClusterIcon(this, markerClusterer.getStyles(),\n      markerClusterer.getGridSize());\n}\n\n/**\n * Determins if a marker is already added to the cluster.\n *\n * @param {google.maps.Marker} marker The marker to check.\n * @return {boolean} True if the marker is already added.\n */\nCluster.prototype.isMarkerAlreadyAdded = function(marker) {\n  if (this.markers_.indexOf) {\n    return this.markers_.indexOf(marker) != -1;\n  } else {\n    for (var i = 0, m; m = this.markers_[i]; i++) {\n      if (m == marker) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * Add a marker the cluster.\n *\n * @param {google.maps.Marker} marker The marker to add.\n * @return {boolean} True if the marker was added.\n */\nCluster.prototype.addMarker = function(marker) {\n  if (this.isMarkerAlreadyAdded(marker)) {\n    return false;\n  }\n\n  if (!this.center_) {\n    this.center_ = marker.getPosition();\n    this.calculateBounds_();\n  } else {\n    if (this.averageCenter_) {\n      var l = this.markers_.length + 1;\n      var lat = (this.center_.lat() * (l-1) + marker.getPosition().lat()) / l;\n      var lng = (this.center_.lng() * (l-1) + marker.getPosition().lng()) / l;\n      this.center_ = new google.maps.LatLng(lat, lng);\n      this.calculateBounds_();\n    }\n  }\n\n  marker.isAdded = true;\n  this.markers_.push(marker);\n\n  var len = this.markers_.length;\n  if (len < this.minClusterSize_ && marker.getMap() != this.map_) {\n    // Min cluster size not reached so show the marker.\n    marker.setMap(this.map_);\n  }\n\n  if (len == this.minClusterSize_) {\n    // Hide the markers that were showing.\n    for (var i = 0; i < len; i++) {\n      this.markers_[i].setMap(null);\n    }\n  }\n\n  if (len >= this.minClusterSize_) {\n    marker.setMap(null);\n  }\n\n  this.updateIcon();\n  return true;\n};\n\n\n/**\n * Returns the marker clusterer that the cluster is associated with.\n *\n * @return {MarkerClusterer} The associated marker clusterer.\n */\nCluster.prototype.getMarkerClusterer = function() {\n  return this.markerClusterer_;\n};\n\n\n/**\n * Returns the bounds of the cluster.\n *\n * @return {google.maps.LatLngBounds} the cluster bounds.\n */\nCluster.prototype.getBounds = function() {\n  var bounds = new google.maps.LatLngBounds(this.center_, this.center_);\n  var markers = this.getMarkers();\n  for (var i = 0, marker; marker = markers[i]; i++) {\n    bounds.extend(marker.getPosition());\n  }\n  return bounds;\n};\n\n\n/**\n * Removes the cluster\n */\nCluster.prototype.remove = function() {\n  this.clusterIcon_.remove();\n  this.markers_.length = 0;\n  delete this.markers_;\n};\n\n\n/**\n * Returns the center of the cluster.\n *\n * @return {number} The cluster center.\n */\nCluster.prototype.getSize = function() {\n  return this.markers_.length;\n};\n\n\n/**\n * Returns the center of the cluster.\n *\n * @return {Array.<google.maps.Marker>} The cluster center.\n */\nCluster.prototype.getMarkers = function() {\n  return this.markers_;\n};\n\n\n/**\n * Returns the center of the cluster.\n *\n * @return {google.maps.LatLng} The cluster center.\n */\nCluster.prototype.getCenter = function() {\n  return this.center_;\n};\n\n\n/**\n * Calculated the extended bounds of the cluster with the grid.\n *\n * @private\n */\nCluster.prototype.calculateBounds_ = function() {\n  var bounds = new google.maps.LatLngBounds(this.center_, this.center_);\n  this.bounds_ = this.markerClusterer_.getExtendedBounds(bounds);\n};\n\n\n/**\n * Determines if a marker lies in the clusters bounds.\n *\n * @param {google.maps.Marker} marker The marker to check.\n * @return {boolean} True if the marker lies in the bounds.\n */\nCluster.prototype.isMarkerInClusterBounds = function(marker) {\n  return this.bounds_.contains(marker.getPosition());\n};\n\n\n/**\n * Returns the map that the cluster is associated with.\n *\n * @return {google.maps.Map} The map.\n */\nCluster.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Updates the cluster icon\n */\nCluster.prototype.updateIcon = function() {\n  var zoom = this.map_.getZoom();\n  var mz = this.markerClusterer_.getMaxZoom();\n\n  if (mz && zoom > mz) {\n    // The zoom is greater than our max zoom so show all the markers in cluster.\n    for (var i = 0, marker; marker = this.markers_[i]; i++) {\n      marker.setMap(this.map_);\n    }\n    return;\n  }\n\n  if (this.markers_.length < this.minClusterSize_) {\n    // Min cluster size not yet reached.\n    this.clusterIcon_.hide();\n    return;\n  }\n\n  var numStyles = this.markerClusterer_.getStyles().length;\n  var sums = this.markerClusterer_.getCalculator()(this.markers_, numStyles);\n  this.clusterIcon_.setCenter(this.center_);\n  this.clusterIcon_.setSums(sums);\n  this.clusterIcon_.show();\n};\n\n\n/**\n * A cluster icon\n *\n * @param {Cluster} cluster The cluster to be associated with.\n * @param {Object} styles An object that has style properties:\n *     'url': (string) The image url.\n *     'height': (number) The image height.\n *     'width': (number) The image width.\n *     'anchor': (Array) The anchor position of the label text.\n *     'textColor': (string) The text color.\n *     'textSize': (number) The text size.\n *     'backgroundPosition: (string) The background postition x, y.\n * @param {number=} opt_padding Optional padding to apply to the cluster icon.\n * @constructor\n * @extends google.maps.OverlayView\n * @ignore\n */\nfunction ClusterIcon(cluster, styles, opt_padding) {\n  cluster.getMarkerClusterer().extend(ClusterIcon, google.maps.OverlayView);\n\n  this.styles_ = styles;\n  this.padding_ = opt_padding || 0;\n  this.cluster_ = cluster;\n  this.center_ = null;\n  this.map_ = cluster.getMap();\n  this.div_ = null;\n  this.sums_ = null;\n  this.visible_ = false;\n\n  this.setMap(this.map_);\n}\n\n\n/**\n * Triggers the clusterclick event and zoom's if the option is set.\n */\nClusterIcon.prototype.triggerClusterClick = function() {\n  var markerClusterer = this.cluster_.getMarkerClusterer();\n\n  // Trigger the clusterclick event.\n  google.maps.event.trigger(markerClusterer, 'clusterclick', this.cluster_);\n\n  if (markerClusterer.isZoomOnClick()) {\n    // Zoom into the cluster.\n    this.map_.fitBounds(this.cluster_.getBounds());\n  }\n};\n\n\n/**\n * Adding the cluster icon to the dom.\n * @ignore\n */\nClusterIcon.prototype.onAdd = function() {\n  this.div_ = document.createElement('DIV');\n  if (this.visible_) {\n    var pos = this.getPosFromLatLng_(this.center_);\n    this.div_.style.cssText = this.createCss(pos);\n    this.div_.innerHTML = this.sums_.text;\n  }\n\n  var panes = this.getPanes();\n  panes.overlayMouseTarget.appendChild(this.div_);\n\n  var that = this;\n  google.maps.event.addDomListener(this.div_, 'click', function() {\n    that.triggerClusterClick();\n  });\n};\n\n\n/**\n * Returns the position to place the div dending on the latlng.\n *\n * @param {google.maps.LatLng} latlng The position in latlng.\n * @return {google.maps.Point} The position in pixels.\n * @private\n */\nClusterIcon.prototype.getPosFromLatLng_ = function(latlng) {\n  var pos = this.getProjection().fromLatLngToDivPixel(latlng);\n  pos.x -= parseInt(this.width_ / 2, 10);\n  pos.y -= parseInt(this.height_ / 2, 10);\n  return pos;\n};\n\n\n/**\n * Draw the icon.\n * @ignore\n */\nClusterIcon.prototype.draw = function() {\n  if (this.visible_) {\n    var pos = this.getPosFromLatLng_(this.center_);\n    this.div_.style.top = pos.y + 'px';\n    this.div_.style.left = pos.x + 'px';\n  }\n};\n\n\n/**\n * Hide the icon.\n */\nClusterIcon.prototype.hide = function() {\n  if (this.div_) {\n    this.div_.style.display = 'none';\n  }\n  this.visible_ = false;\n};\n\n\n/**\n * Position and show the icon.\n */\nClusterIcon.prototype.show = function() {\n  if (this.div_) {\n    var pos = this.getPosFromLatLng_(this.center_);\n    this.div_.style.cssText = this.createCss(pos);\n    this.div_.style.display = '';\n  }\n  this.visible_ = true;\n};\n\n\n/**\n * Remove the icon from the map\n */\nClusterIcon.prototype.remove = function() {\n  this.setMap(null);\n};\n\n\n/**\n * Implementation of the onRemove interface.\n * @ignore\n */\nClusterIcon.prototype.onRemove = function() {\n  if (this.div_ && this.div_.parentNode) {\n    this.hide();\n    this.div_.parentNode.removeChild(this.div_);\n    this.div_ = null;\n  }\n};\n\n\n/**\n * Set the sums of the icon.\n *\n * @param {Object} sums The sums containing:\n *   'text': (string) The text to display in the icon.\n *   'index': (number) The style index of the icon.\n */\nClusterIcon.prototype.setSums = function(sums) {\n  this.sums_ = sums;\n  this.text_ = sums.text;\n  this.index_ = sums.index;\n  if (this.div_) {\n    this.div_.innerHTML = sums.text;\n  }\n\n  this.useStyle();\n};\n\n\n/**\n * Sets the icon to the the styles.\n */\nClusterIcon.prototype.useStyle = function() {\n  var index = Math.max(0, this.sums_.index - 1);\n  index = Math.min(this.styles_.length - 1, index);\n  var style = this.styles_[index];\n  this.url_ = style['url'];\n  this.height_ = style['height'];\n  this.width_ = style['width'];\n  this.textColor_ = style['textColor'];\n  this.anchor_ = style['anchor'];\n  this.textSize_ = style['textSize'];\n  this.backgroundPosition_ = style['backgroundPosition'];\n};\n\n\n/**\n * Sets the center of the icon.\n *\n * @param {google.maps.LatLng} center The latlng to set as the center.\n */\nClusterIcon.prototype.setCenter = function(center) {\n  this.center_ = center;\n};\n\n\n/**\n * Create the css text based on the position of the icon.\n *\n * @param {google.maps.Point} pos The position.\n * @return {string} The css style text.\n */\nClusterIcon.prototype.createCss = function(pos) {\n  var style = [];\n  style.push('background-image:url(' + this.url_ + ');');\n  var backgroundPosition = this.backgroundPosition_ ? this.backgroundPosition_ : '0 0';\n  style.push('background-position:' + backgroundPosition + ';');\n\n  if (typeof this.anchor_ === 'object') {\n    if (typeof this.anchor_[0] === 'number' && this.anchor_[0] > 0 &&\n        this.anchor_[0] < this.height_) {\n      style.push('height:' + (this.height_ - this.anchor_[0]) +\n          'px; padding-top:' + this.anchor_[0] + 'px;');\n    } else {\n      style.push('height:' + this.height_ + 'px; line-height:' + this.height_ +\n          'px;');\n    }\n    if (typeof this.anchor_[1] === 'number' && this.anchor_[1] > 0 &&\n        this.anchor_[1] < this.width_) {\n      style.push('width:' + (this.width_ - this.anchor_[1]) +\n          'px; padding-left:' + this.anchor_[1] + 'px;');\n    } else {\n      style.push('width:' + this.width_ + 'px; text-align:center;');\n    }\n  } else {\n    style.push('height:' + this.height_ + 'px; line-height:' +\n        this.height_ + 'px; width:' + this.width_ + 'px; text-align:center;');\n  }\n\n  var txtColor = this.textColor_ ? this.textColor_ : 'black';\n  var txtSize = this.textSize_ ? this.textSize_ : 11;\n\n  style.push('cursor:pointer; top:' + pos.y + 'px; left:' +\n      pos.x + 'px; color:' + txtColor + '; position:absolute; font-size:' +\n      txtSize + 'px; font-family:Arial,sans-serif; font-weight:bold');\n  return style.join('');\n};\n\n\n// Export Symbols for Closure\n// If you are not going to compile with closure then you can remove the\n// code below.\nglobal['MarkerClusterer'] = MarkerClusterer;\nMarkerClusterer.prototype['addMarker'] = MarkerClusterer.prototype.addMarker;\nMarkerClusterer.prototype['addMarkers'] = MarkerClusterer.prototype.addMarkers;\nMarkerClusterer.prototype['clearMarkers'] =\n    MarkerClusterer.prototype.clearMarkers;\nMarkerClusterer.prototype['fitMapToMarkers'] =\n    MarkerClusterer.prototype.fitMapToMarkers;\nMarkerClusterer.prototype['getCalculator'] =\n    MarkerClusterer.prototype.getCalculator;\nMarkerClusterer.prototype['getGridSize'] =\n    MarkerClusterer.prototype.getGridSize;\nMarkerClusterer.prototype['getExtendedBounds'] =\n    MarkerClusterer.prototype.getExtendedBounds;\nMarkerClusterer.prototype['getMap'] = MarkerClusterer.prototype.getMap;\nMarkerClusterer.prototype['getMarkers'] = MarkerClusterer.prototype.getMarkers;\nMarkerClusterer.prototype['getMaxZoom'] = MarkerClusterer.prototype.getMaxZoom;\nMarkerClusterer.prototype['getStyles'] = MarkerClusterer.prototype.getStyles;\nMarkerClusterer.prototype['getTotalClusters'] =\n    MarkerClusterer.prototype.getTotalClusters;\nMarkerClusterer.prototype['getTotalMarkers'] =\n    MarkerClusterer.prototype.getTotalMarkers;\nMarkerClusterer.prototype['redraw'] = MarkerClusterer.prototype.redraw;\nMarkerClusterer.prototype['removeMarker'] =\n    MarkerClusterer.prototype.removeMarker;\nMarkerClusterer.prototype['removeMarkers'] =\n    MarkerClusterer.prototype.removeMarkers;\nMarkerClusterer.prototype['resetViewport'] =\n    MarkerClusterer.prototype.resetViewport;\nMarkerClusterer.prototype['repaint'] =\n    MarkerClusterer.prototype.repaint;\nMarkerClusterer.prototype['setCalculator'] =\n    MarkerClusterer.prototype.setCalculator;\nMarkerClusterer.prototype['setGridSize'] =\n    MarkerClusterer.prototype.setGridSize;\nMarkerClusterer.prototype['setMaxZoom'] =\n    MarkerClusterer.prototype.setMaxZoom;\nMarkerClusterer.prototype['onAdd'] = MarkerClusterer.prototype.onAdd;\nMarkerClusterer.prototype['draw'] = MarkerClusterer.prototype.draw;\n\nCluster.prototype['getCenter'] = Cluster.prototype.getCenter;\nCluster.prototype['getSize'] = Cluster.prototype.getSize;\nCluster.prototype['getMarkers'] = Cluster.prototype.getMarkers;\n\nClusterIcon.prototype['onAdd'] = ClusterIcon.prototype.onAdd;\nClusterIcon.prototype['draw'] = ClusterIcon.prototype.draw;\nClusterIcon.prototype['onRemove'] = ClusterIcon.prototype.onRemove;\n\n\nmodule.exports = MarkerClusterer;\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/node-js-marker-clusterer/src/markerclusterer.js\n// module id = 19\n// module chunks = 0\n//# sourceURL=webpack:///./~/node-js-marker-clusterer/src/markerclusterer.js?")
},function(module,exports,__webpack_require__){eval("var carousel = __webpack_require__(21).tns;\n\nfunction Carousel(node){\n    this.node = node;\n    this.init();\n}\n\nCarousel.prototype.init = function(){\n\n    // var slider = carousel({\n    //     container: this.node,\n    //     items: 6,\n    //     slideBy: 'page',\n    //     autoplay: true\n    //   });\n\n}\n\nmodule.exports = Carousel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/scripts/widgets/carousel.js\n// module id = 20\n// module chunks = 0\n//# sourceURL=webpack:///./assets/scripts/widgets/carousel.js?")},function(module,exports){
eval("var tns = (function (){\n// keys\nif (!Object.keys) {\n    Object.keys = function (object) {\n        var keys = [];\n        for (var name in object) {\n            if (Object.prototype.hasOwnProperty.call(object, name)) {\n                keys.push(name);\n            }\n        }\n        return keys;\n    };\n}\n\n// ChildNode.remove\n(function () {\n  \"use strict\";\n\n  if(!(\"remove\" in Element.prototype)){\n    Element.prototype.remove = function(){\n      if(this.parentNode) {\n        this.parentNode.removeChild(this);\n      }\n    };\n  }\n})();\n\n/** DOMTokenList polyfill */\n(function(){\n\t\"use strict\";\n\t\n\t/*<*/\n\tvar UNDEF,\n\tWIN   = window,\n\tDOC   = document,\n\tOBJ   = Object,\n\tNULL  = null,\n\tTRUE  = true,\n\tFALSE = false,\n\t/*>*/\n\t\n\t/** Munge the hell out of our string literals. Saves a tonne of space after compression. */\n\tSPACE           = \" \",\n\tELEMENT         = \"Element\",\n\tCREATE_ELEMENT  = \"create\"+ELEMENT,\n\tDOM_TOKEN_LIST  = \"DOMTokenList\",\n\tDEFINE_GETTER   = \"__defineGetter__\",\n\tDEFINE_PROPERTY = \"defineProperty\",\n\tCLASS_          = \"class\",\n\tLIST            = \"List\",\n\tCLASS_LIST      = CLASS_+LIST,\n\tREL             = \"rel\",\n\tREL_LIST        = REL+LIST,\n\tDIV             = \"div\",\n\tLENGTH          = \"length\",\n\tCONTAINS        = \"contains\",\n\tAPPLY           = \"apply\",\n\tHTML_           = \"HTML\",\n\tMETHODS         = (\"item \"+CONTAINS+\" add remove toggle toString toLocaleString\").split(SPACE),\n\tADD             = METHODS[2],\n\tREMOVE          = METHODS[3],\n\tTOGGLE          = METHODS[4],\n\tPROTOTYPE       = \"prototype\",\n\t\n\t\n\t\n\t/** Ascertain browser support for Object.defineProperty */\n\tdpSupport       = DEFINE_PROPERTY in OBJ || DEFINE_GETTER in OBJ[ PROTOTYPE ] || NULL,\n\t\n\t\n\t/** Wrapper for Object.defineProperty that falls back to using the legacy __defineGetter__ method if available. */\n\tdefineGetter    = function(object, name, fn, configurable){\n\t\tif(OBJ[ DEFINE_PROPERTY ])\n\t\t\tOBJ[ DEFINE_PROPERTY ](object, name, {\n\t\t\t\tconfigurable: FALSE === dpSupport ? TRUE : !!configurable,\n\t\t\t\tget:          fn\n\t\t\t});\n\t\t\n\t\telse object[ DEFINE_GETTER ](name, fn);\n\t},\n\t\n\t\n\t\n\t\n\t/** DOMTokenList interface replacement */\n\tDOMTokenList = function(el, prop){\n\t\tvar THIS    = this,\n\t\t\n\t\t/** Private variables */\n\t\ttokens      = [],\n\t\ttokenMap    = {},\n\t\tlength      = 0,\n\t\tmaxLength   = 0,\n\t\t\n\t\t\n\t\treindex     = function(){\n\t\t\t\n\t\t\t/** Define getter functions for array-like access to the tokenList's contents. */\n\t\t\tif(length >= maxLength)\n\t\t\t\tfor(; maxLength < length; ++maxLength) (function(i){\n\t\t\t\t\t\n\t\t\t\t\tdefineGetter(THIS, i, function(){\n\t\t\t\t\t\tpreop();\n\t\t\t\t\t\treturn tokens[i];\n\t\t\t\t\t}, FALSE);\n\t\t\t\t\t\n\t\t\t\t})(maxLength);\n\t\t},\n\t\t\n\t\t\n\t\t\n\t\t/** Helper function called at the start of each class method. Internal use only. */\n\t\tpreop = function(){\n\t\t\tvar error, i,\n\t\t\targs    = arguments,\n\t\t\trSpace  = /\\s+/;\n\t\t\t\n\t\t\t/** Validate the token/s passed to an instance method, if any. */\n\t\t\tif(args[ LENGTH ])\n\t\t\t\tfor(i = 0; i < args[ LENGTH ]; ++i)\n\t\t\t\t\tif(rSpace.test(args[i])){\n\t\t\t\t\t\terror       = new SyntaxError('String \"' + args[i] + '\" ' + CONTAINS + ' an invalid character');\n\t\t\t\t\t\terror.code  = 5;\n\t\t\t\t\t\terror.name  = \"InvalidCharacterError\";\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t/** Split the new value apart by whitespace*/\n\t\t\ttokens = (\"\" + el[prop]).replace(/^\\s+|\\s+$/g, \"\").split(rSpace);\n\t\t\t\n\t\t\t/** Avoid treating blank strings as single-item token lists */\n\t\t\tif(\"\" === tokens[0]) tokens = [];\n\t\t\t\n\t\t\t/** Repopulate the internal token lists */\n\t\t\ttokenMap = {};\n\t\t\tfor(i = 0; i < tokens[ LENGTH ]; ++i)\n\t\t\t\ttokenMap[tokens[i]] = TRUE;\n\t\t\tlength = tokens[ LENGTH ];\n\t\t\treindex();\n\t\t};\n\t\t\n\t\t\n\t\t\n\t\t/** Populate our internal token list if the targeted attribute of the subject element isn't empty. */\n\t\tpreop();\n\t\t\n\t\t\n\t\t\n\t\t/** Return the number of tokens in the underlying string. Read-only. */\n\t\tdefineGetter(THIS, LENGTH, function(){\n\t\t\tpreop();\n\t\t\treturn length;\n\t\t});\n\t\t\n\t\t\n\t\t/** Override the default toString/toLocaleString methods to return a space-delimited list of tokens when typecast. */\n\t\tTHIS[ METHODS[6] /** toLocaleString */ ] =\n\t\tTHIS[ METHODS[5] /** toString       */ ] = function(){\n\t\t\tpreop();\n\t\t\treturn tokens.join(SPACE);\n\t\t};\n\t\t\n\t\t\n\t\t\n\t\t/** Return an item in the list by its index (or undefined if the number is greater than or equal to the length of the list) */\n\t\tTHIS.item = function(idx){\n\t\t\tpreop();\n\t\t\treturn tokens[idx];\n\t\t};\n\t\t\n\t\t\n\t\t/** Return TRUE if the underlying string contains `token`; otherwise, FALSE. */\n\t\tTHIS[ CONTAINS ] = function(token){\n\t\t\tpreop();\n\t\t\treturn !!tokenMap[token];\n\t\t};\n\t\t\n\t\t\n\t\t\n\t\t/** Add one or more tokens to the underlying string. */\n\t\tTHIS[ADD] = function(){\n\t\t\tpreop[APPLY](THIS, args = arguments);\n\n\t\t\tfor(var args, token, i = 0, l = args[ LENGTH ]; i < l; ++i){\n\t\t\t\ttoken = args[i];\n\t\t\t\tif(!tokenMap[token]){\n\t\t\t\t\ttokens.push(token);\n\t\t\t\t\ttokenMap[token] = TRUE;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/** Update the targeted attribute of the attached element if the token list's changed. */\n\t\t\tif(length  !== tokens[ LENGTH ]){\n\t\t\t\tlength   = tokens[ LENGTH ] >>> 0;\n\t\t\t\tel[prop] = tokens.join(SPACE);\n\t\t\t\treindex();\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t\n\t\t/** Remove one or more tokens from the underlying string. */\n\t\tTHIS[ REMOVE ] = function(){\n\t\t\tpreop[APPLY](THIS, args = arguments);\n\t\t\t\n\t\t\t/** Build a hash of token names to compare against when recollecting our token list. */\n\t\t\tfor(var args, ignore = {}, i = 0, t = []; i < args[ LENGTH ]; ++i){\n\t\t\t\tignore[args[i]] = TRUE;\n\t\t\t\tdelete tokenMap[args[i]];\n\t\t\t}\n\t\t\t\n\t\t\t/** Run through our tokens list and reassign only those that aren't defined in the hash declared above. */\n\t\t\tfor(i = 0; i < tokens[ LENGTH ]; ++i)\n\t\t\t\tif(!ignore[tokens[i]]) t.push(tokens[i]);\n\t\t\t\n\t\t\ttokens   = t;\n\t\t\tlength   = t[ LENGTH ] >>> 0;\n\t\t\t\n\t\t\t/** Update the targeted attribute of the attached element. */\n\t\t\tel[prop] = tokens.join(SPACE);\n\t\t\treindex();\n\t\t};\n\t\t\n\t\t\n\t\t\n\t\t/** Add or remove a token depending on whether it's already contained within the token list. */\n\t\tTHIS[TOGGLE] = function(token, force){\n\t\t\tpreop[APPLY](THIS, [token]);\n\t\t\t\n\t\t\t/** Token state's being forced. */\n\t\t\tif(UNDEF !== force){\n\t\t\t\tif(force) { THIS[ADD](token);     return TRUE;  }\n\t\t\t\telse      { THIS[REMOVE](token);  return FALSE; }\n\t\t\t}\n\t\t\t\n\t\t\t/** Token already exists in tokenList. Remove it, and return FALSE. */\n\t\t\tif(tokenMap[token]){\n\t\t\t\tTHIS[ REMOVE ](token);\n\t\t\t\treturn FALSE;\n\t\t\t}\n\t\t\t\n\t\t\t/** Otherwise, add the token and return TRUE. */\n\t\t\tTHIS[ADD](token);\n\t\t\treturn TRUE;\n\t\t};\n\t\t\n\t\t\n\t\t/** Mark our newly-assigned methods as non-enumerable. */\n\t\t(function(o, defineProperty){\n\t\t\tif(defineProperty)\n\t\t\t\tfor(var i = 0; i < 7; ++i)\n\t\t\t\t\tdefineProperty(o, METHODS[i], {enumerable: FALSE});\n\t\t}(THIS, OBJ[ DEFINE_PROPERTY ]));\n\t\t\n\t\treturn THIS;\n\t},\n\t\n\t\n\t\n\t/** Polyfills a property with a DOMTokenList */\n\taddProp = function(o, name, attr){\n\t\t\n\t\tdefineGetter(o[PROTOTYPE], name, function(){\n\t\t\tvar tokenList,\n\t\t\tTHIS = this,\n\t\t\t\n\t\t\t/** Prevent this from firing twice for some reason. What the hell, IE. */\n\t\t\tgibberishProperty           = DEFINE_GETTER + DEFINE_PROPERTY + name;\n\t\t\tif(THIS[gibberishProperty]) return tokenList;\n\t\t\tTHIS[gibberishProperty]     = TRUE;\n\t\t\t\n\t\t\t\n\t\t\t/**\n\t\t\t * IE8 can't define properties on native JavaScript objects, so we'll use a dumb hack instead.\n\t\t\t *\n\t\t\t * What this is doing is creating a dummy element (\"reflection\") inside a detached phantom node (\"mirror\")\n\t\t\t * that serves as the target of Object.defineProperty instead. While we could simply use the subject HTML\n\t\t\t * element instead, this would conflict with element types which use indexed properties (such as forms and\n\t\t\t * select lists).\n\t\t\t */\n\t\t\tif(FALSE === dpSupport){\n\t\t\t\t\n\t\t\t\tvar visage,\n\t\t\t\tmirror      = addProp.mirror = addProp.mirror || DOC[ CREATE_ELEMENT ](DIV),\n\t\t\t\treflections = mirror.childNodes,\n\t\t\t\t\n\t\t\t\t/** Iterator variables */\n\t\t\t\tl = reflections[ LENGTH ],\n\t\t\t\ti = 0;\n\t\t\t\t\n\t\t\t\tfor(; i < l; ++i)\n\t\t\t\t\tif(reflections[i]._R === THIS){\n\t\t\t\t\t\tvisage = reflections[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/** Couldn't find an element's reflection inside the mirror. Materialise one. */\n\t\t\t\tvisage || (visage = mirror.appendChild(DOC[ CREATE_ELEMENT ](DIV)));\n\t\t\t\t\n\t\t\t\ttokenList = DOMTokenList.call(visage, THIS, attr);\n\t\t\t}\n\t\t\t\n\t\t\telse tokenList = new DOMTokenList(THIS, attr);\n\t\t\t\n\t\t\t\n\t\t\tdefineGetter(THIS, name, function(){ return tokenList; });\n\t\t\tdelete THIS[gibberishProperty];\n\t\t\t\n\t\t\treturn tokenList;\n\t\t}, TRUE);\n\t},\n\n\t/** Variables used for patching native methods that're partially implemented (IE doesn't support adding/removing multiple tokens, for instance). */\n\ttestList,\n\tnativeAdd,\n\tnativeRemove;\n\t\n\t\n\t\n\t\n\t/** No discernible DOMTokenList support whatsoever. Time to remedy that. */\n\tif(!WIN[ DOM_TOKEN_LIST ]){\n\t\t\n\t\t/** Ensure the browser allows Object.defineProperty to be used on native JavaScript objects. */\n\t\tif(dpSupport)\n\t\t\ttry{ defineGetter({}, \"support\"); }\n\t\t\tcatch(e){ dpSupport = FALSE; }\n\t\t\n\t\t\n\t\tDOMTokenList.polyfill   = TRUE;\n\t\tWIN[ DOM_TOKEN_LIST ]   = DOMTokenList;\n\t\t\n\t\taddProp( WIN[ ELEMENT ], CLASS_LIST, CLASS_ + \"Name\");      /* Element.classList */\n\t\taddProp( WIN[ HTML_+ \"Link\"   + ELEMENT ], REL_LIST, REL);  /* HTMLLinkElement.relList */\n\t\taddProp( WIN[ HTML_+ \"Anchor\" + ELEMENT ], REL_LIST, REL);  /* HTMLAnchorElement.relList */\n\t\taddProp( WIN[ HTML_+ \"Area\"   + ELEMENT ], REL_LIST, REL);  /* HTMLAreaElement.relList */\n\t}\n\t\n\t\n\t/**\n\t * Possible support, but let's check for bugs.\n\t *\n\t * Where arbitrary values are needed for performing a test, previous variables\n\t * are recycled to save space in the minified file.\n\t */\n\telse{\n\t\ttestList = DOC[ CREATE_ELEMENT ](DIV)[CLASS_LIST];\n\t\t\n\t\t/** We'll replace a \"string constant\" to hold a reference to DOMTokenList.prototype (filesize optimisation, yaddah-yaddah...) */\n\t\tPROTOTYPE = WIN[DOM_TOKEN_LIST][PROTOTYPE];\n\t\t\n\t\t\n\t\t/** Check if we can pass multiple arguments to add/remove. To save space, we'll just recycle a previous array of strings. */\n\t\ttestList[ADD][APPLY](testList, METHODS);\n\t\tif(2 > testList[LENGTH]){\n\t\t\tnativeAdd      = PROTOTYPE[ADD];\n\t\t\tnativeRemove   = PROTOTYPE[REMOVE];\n\t\t\t\n\t\t\tPROTOTYPE[ADD] = function(){\n\t\t\t\tfor(var i = 0, args = arguments; i < args[LENGTH]; ++i)\n\t\t\t\t\tnativeAdd.call(this, args[i]);\n\t\t\t};\n\t\t\t\n\t\t\tPROTOTYPE[REMOVE] = function(){\n\t\t\t\tfor(var i = 0, args = arguments; i < args[LENGTH]; ++i)\n\t\t\t\t\tnativeRemove.call(this, args[i]);\n\t\t\t};\n\t\t}\n\t\t\n\t\t\n\t\t/** Check if the \"force\" option of .toggle is supported. */\n\t\tif(testList[TOGGLE](LIST, FALSE))\n\t\t\tPROTOTYPE[TOGGLE] = function(token, force){\n\t\t\t\tvar THIS = this;\n\t\t\t\tTHIS[(force = UNDEF === force ? !THIS[CONTAINS](token) : force) ? ADD : REMOVE](token);\n\t\t\t\treturn !!force;\n\t\t\t};\n\t}\n}());\n\nfunction extend() {\n  var obj, name, copy,\n      target = arguments[0] || {},\n      i = 1,\n      length = arguments.length;\n\n  for (; i < length; i++) {\n    if ((obj = arguments[i]) !== null) {\n      for (name in obj) {\n        copy = obj[name];\n\n        if (target === copy) {\n          continue;\n        } else if (copy !== undefined) {\n          target[name] = copy;\n        }\n      }\n    }\n  }\n  return target;\n}\n\nfunction checkStorageValue (value) {\n  return (['true', 'false', 'null'].indexOf(value) >= 0) ? JSON.parse(value) : value;\n}\n\nfunction setLocalStorage(key, value) {\n  localStorage.setItem(key, value);\n  return value;\n}\n\nfunction getSlideId() {\n  if (window.tnsId === undefined) {\n    window.tnsId = 1;\n  } else {\n    window.tnsId++;\n  }\n  return 'tns' + window.tnsId;\n}\n\n// get css-calc \n// @return - false | calc | -webkit-calc | -moz-calc\n// @usage - var calc = getCalc(); \nfunction calc() {\n  var doc = document, \n      body = doc.body,\n      el = doc.createElement('div'), \n      result = false;\n  body.appendChild(el);\n  try {\n    var vals = ['calc(10px)', '-moz-calc(10px)', '-webkit-calc(10px)'], val;\n    for (var i = 0; i < 3; i++) {\n      val = vals[i];\n      el.style.width = val;\n      if (el.offsetWidth === 10) { \n        result = val.replace('(10px)', ''); \n        break;\n      }\n    }\n  } catch (e) {}\n  body.removeChild(el);\n\n  return result;\n}\n\n// get subpixel support value\n// @return - boolean\nfunction subpixelLayout() {\n  var doc = document,\n      body = doc.body,\n      parent = doc.createElement('div'),\n      child1 = doc.createElement('div'),\n      child2;\n  parent.style.cssText = 'width: 10px';\n  child1.style.cssText = 'float: left; width: 5.5px; height: 10px;';\n  child2 = child1.cloneNode(true);\n\n  parent.appendChild(child1);\n  parent.appendChild(child2);\n  body.appendChild(parent);\n\n  var supported = child1.offsetTop !== child2.offsetTop;\n  body.removeChild(parent);\n\n  return supported;\n}\n\nfunction mediaquerySupport () {\n  var doc = document,\n      body = doc.body,\n      div = doc.createElement('div');\n\n  div.className = 'tns-mq-test';\n  body.appendChild(div);\n\n  var position = (window.getComputedStyle) ? window.getComputedStyle(div).position : div.currentStyle['position'];\n  body.removeChild(div);\n\n  return position === \"absolute\";\n}\n\n// create and append style sheet\nfunction createStyleSheet (media) {\n  // Create the <style> tag\n  var style = document.createElement(\"style\");\n  // style.setAttribute(\"type\", \"text/css\");\n\n  // Add a media (and/or media query) here if you'd like!\n  // style.setAttribute(\"media\", \"screen\")\n  // style.setAttribute(\"media\", \"only screen and (max-width : 1024px)\")\n  if (media) { style.setAttribute(\"media\", media); }\n\n  // WebKit hack :(\n  // style.appendChild(document.createTextNode(\"\"));\n\n  // Add the <style> element to the page\n  document.querySelector('head').appendChild(style);\n\n  return (style.sheet) ? style.sheet : style.styleSheet;\n}\n\n// cross browsers addRule method\nvar addCSSRule = (function () {\n  var styleSheet = document.styleSheets[0];\n  if('insertRule' in styleSheet) {\n\n    return function (sheet, selector, rules, index) {\n      sheet.insertRule(selector + '{' + rules + '}', index);\n    };\n  } else if('addRule' in styleSheet) {\n\n    return function (sheet, selector, rules, index) {\n      sheet.addRule(selector, rules, index);\n    };\n  }\n})();\n\n// cross browsers addRule method\nvar getCssRulesLength = (function () {\n  var styleSheet = document.styleSheets[0];\n  if(styleSheet.cssRules) {\n    return function (sheet) { return sheet.cssRules.length; };\n  } else {\n    return function (sheet) { return sheet.rules.length; };\n  }\n})();\n\nfunction toDegree (y, x) {\n  return Math.atan2(y, x) * (180 / Math.PI);\n}\n\nfunction getTouchDirection(angle, range) {\n  if ( Math.abs(90 - Math.abs(angle)) >= (90 - range) ) {\n    return 'horizontal';\n  } else if ( Math.abs(90 - Math.abs(angle)) <= range ) {\n    return 'vertical';\n  } else {\n    return false;\n  }\n}\n\nfunction hasAttr(el, attr) {\n  return el.hasAttribute(attr);\n}\n\nfunction getAttr(el, attr) {\n  return el.getAttribute(attr);\n}\n\nfunction isNodeList(el) {\n  // Only NodeList has the \"item()\" function\n  return typeof el.item !== \"undefined\"; \n}\n\nfunction setAttrs(els, attrs) {\n  els = (isNodeList(els) || els instanceof Array) ? els : [els];\n  if (Object.prototype.toString.call(attrs) !== '[object Object]') { return; }\n\n  for (var i = els.length; i--;) {\n    for(var key in attrs) {\n      els[i].setAttribute(key, attrs[key]);\n    }\n  }\n}\n\nfunction removeAttrs(els, attrs) {\n  els = (isNodeList(els) || els instanceof Array) ? els : [els];\n  attrs = (attrs instanceof Array) ? attrs : [attrs];\n\n  var attrLength = attrs.length;\n  for (var i = els.length; i--;) {\n    for (var j = attrLength; j--;) {\n      els[i].removeAttribute(attrs[j]);\n    }\n  }\n}\n\nfunction hideElement(el) {\n  if (!hasAttr(el, 'hidden')) {\n    setAttrs(el, {'hidden': ''});\n  }\n}\n\nfunction showElement(el) {\n  if (hasAttr(el, 'hidden')) {\n    removeAttrs(el, 'hidden');\n  }\n}\n\n// check if an image is loaded\n// 1. See if \"naturalWidth\" and \"naturalHeight\" properties are available.\n// 2. See if \"complete\" property is available.\n\nfunction imageLoaded(img) {\n  if (typeof img.complete === 'boolean') {\n    return img.complete;\n  } else if (typeof img.naturalWidth === 'number') {\n    return img.naturalWidth !== 0;\n  }\n}\n\nfunction whichProperty(props){\n  var el = document.createElement('fakeelement'),\n      len = props.length;\n  for(var i = 0; i < props.length; i++){\n    var prop = props[i];\n    if( el.style[prop] !== undefined ){ return prop; }\n  }\n\n  return false; // explicit for ie9-\n}\n\n// get transitionend, animationend based on transitionDuration\n// @propin: string\n// @propOut: string, first-letter uppercase\n// Usage: getEndProperty('webkitTransitionDuration', 'Transition') => webkitTransitionEnd\nfunction getEndProperty(propIn, propOut) {\n  var endProp = false;\n  if (/^Webkit/.test(propIn)) {\n    endProp = 'webkit' + propOut + 'End';\n  } else if (/^O/.test(propIn)) {\n    endProp = 'o' + propOut + 'End';\n  } else if (propIn) {\n    endProp = propOut.toLowerCase() + 'end';\n  }\n  return endProp;\n}\n\n// Test via a getter in the options object to see if the passive property is accessed\nvar supportsPassive = false;\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function() {\n      supportsPassive = true;\n    }\n  });\n  window.addEventListener(\"test\", null, opts);\n} catch (e) {}\nvar passiveOption = supportsPassive ? { passive: true } : false;\n\nfunction addEvents(el, obj) {\n  for (var prop in obj) {\n    var option = (prop === 'touchstart' || prop === 'touchmove') ? passiveOption : false;\n    el.addEventListener(prop, obj[prop], option);\n  }\n}\n\nfunction removeEvents(el, obj) {\n  for (var prop in obj) {\n    var option = (prop === 'touchstart' || prop === 'touchmove') ? passiveOption : false;\n    el.removeEventListener(prop, obj[prop], option);\n  }\n}\n\nfunction Events() {\n  return {\n    topics: {},\n    on: function (eventName, fn) {\n      this.topics[eventName] = this.topics[eventName] || [];\n      this.topics[eventName].push(fn);\n    },\n    off: function(eventName, fn) {\n      if (this.topics[eventName]) {\n        for (var i = 0; i < this.topics[eventName].length; i++) {\n          if (this.topics[eventName][i] === fn) {\n            this.topics[eventName].splice(i, 1);\n            break;\n          }\n        }\n      }\n    },\n    emit: function (eventName, data) {\n      if (this.topics[eventName]) {\n        this.topics[eventName].forEach(function(fn) {\n          fn(data);\n        });\n      }\n    }\n  };\n}\n\nfunction jsTransform(element, attr, prefix, postfix, to, duration, callback) {\n  var tick = Math.min(duration, 10),\n      unit = (to.indexOf('%') >= 0) ? '%' : 'px',\n      to = to.replace(unit, ''),\n      from = Number(element.style[attr].replace(prefix, '').replace(postfix, '').replace(unit, '')),\n      positionTick = (to - from) / duration * tick,\n      running;\n\n  setTimeout(moveElement, tick);\n  function moveElement() {\n    duration -= tick;\n    from += positionTick;\n    element.style[attr] = prefix + from + unit + postfix;\n    if (duration > 0) { \n      setTimeout(moveElement, tick); \n    } else {\n      callback();\n    }\n  }\n}\n\n// Format: IIFE\n// Version: 2.1.6\n\n// from go-native\n// helper functions\n// check browser version and local storage\n// if browser upgraded, \n// 1. delete browser ralated data from local storage and \n// 2. recheck these options and save them to local storage\nvar browserInfo = navigator.userAgent;\nvar tnsStorage = localStorage;\nif (!tnsStorage['tnsApp']) {\n  tnsStorage['tnsApp'] = browserInfo;\n} else if (tnsStorage['tnsApp'] !== browserInfo) {\n  tnsStorage['tnsApp'] = browserInfo;\n\n  ['tnsCalc', 'tnsSubpixel', 'tnsCSSMQ', 'tnsTf', 'tnsTsDu', 'tnsTsDe', 'tnsAnDu', 'tnsAnDe', 'tnsTsEn', 'tnsAnEn'].forEach(function (item) {\n    tnsStorage.removeItem(item);\n  })\n}\n\n// get browser related data from local storage if they exist\n// otherwise, run the functions again and save these data to local storage\n// checkStorageValue() convert non-string value to its original value: 'true' > true\nvar doc = document;\nvar win = window;\nvar KEYS = {\n      ENTER: 13,\n      SPACE: 32,\n      PAGEUP: 33,\n      PAGEDOWN: 34,\n      END: 35,\n      HOME: 36,\n      LEFT: 37,\n      UP: 38,\n      RIGHT: 39,\n      DOWN: 40\n    };\nvar CALC = checkStorageValue(tnsStorage['tnsCalc'] || setLocalStorage('tnsCalc', calc()));\nvar SUBPIXEL = checkStorageValue(tnsStorage['tnsSubpixel'] || setLocalStorage('tnsSubpixel', subpixelLayout()));\nvar CSSMQ = checkStorageValue(tnsStorage['tnsCSSMQ'] || setLocalStorage('tnsCSSMQ', mediaquerySupport()));\nvar TRANSFORM = checkStorageValue(tnsStorage['tnsTf'] || setLocalStorage('tnsTf', whichProperty([\n      'transform', \n      'WebkitTransform', \n      'MozTransform', \n      'msTransform', \n      'OTransform'\n    ])));\nvar TRANSITIONDURATION = checkStorageValue(tnsStorage['tnsTsDu'] || setLocalStorage('tnsTsDu', whichProperty([\n      'transitionDuration', \n      'WebkitTransitionDuration', \n      'MozTransitionDuration', \n      'OTransitionDuration'\n    ])));\nvar TRANSITIONDELAY = checkStorageValue(tnsStorage['tnsTsDe'] || setLocalStorage('tnsTsDe', whichProperty([\n      'transitionDelay', \n      'WebkitTransitionDelay', \n      'MozTransitionDelay', \n      'OTransitionDelay'\n    ])));\nvar ANIMATIONDURATION = checkStorageValue(tnsStorage['tnsAnDu'] || setLocalStorage('tnsAnDu', whichProperty([\n      'animationDuration', \n      'WebkitAnimationDuration', \n      'MozAnimationDuration', \n      'OAnimationDuration'\n    ])));\nvar ANIMATIONDELAY = checkStorageValue(tnsStorage['tnsAnDe'] || setLocalStorage('tnsAnDe', whichProperty([\n      'animationDelay', \n      'WebkitAnimationDelay', \n      'MozAnimationDelay', \n      'OAnimationDelay'\n    ])));\nvar TRANSITIONEND = checkStorageValue(tnsStorage['tnsTsEn'] || setLocalStorage('tnsTsEn', getEndProperty(TRANSITIONDURATION, 'Transition')));\nvar ANIMATIONEND = checkStorageValue(tnsStorage['tnsAnEn'] || setLocalStorage('tnsAnEn', getEndProperty(ANIMATIONDURATION, 'Animation')));\n\n// reset SUBPIXEL for IE8\nif (!CSSMQ) { SUBPIXEL = false; }\n\nvar tns = function(options) {\n  options = extend({\n    container: doc.querySelector('.slider'),\n    mode: 'carousel',\n    axis: 'horizontal',\n    items: 1,\n    gutter: 0,\n    edgePadding: 0,\n    fixedWidth: false,\n    slideBy: 1,\n    controls: true,\n    controlsText: ['prev', 'next'],\n    controlsContainer: false,\n    nav: true,\n    navContainer: false,\n    arrowKeys: false,\n    speed: 300,\n    autoplay: false,\n    autoplayTimeout: 5000,\n    autoplayDirection: 'forward',\n    autoplayText: ['start', 'stop'],\n    autoplayHoverPause: false,\n    autoplayButton: false,\n    autoplayResetOnVisibility: true,\n    // animateIn: 'tns-fadeIn',\n    // animateOut: 'tns-fadeOut',\n    // animateNormal: 'tns-normal',\n    // animateDelay: false,\n    loop: true,\n    rewind: false,\n    autoHeight: false,\n    responsive: false,\n    lazyload: false,\n    touch: true,\n    mouseDrag: false,\n    nested: false,\n    onInit: false\n  }, options || {});\n  \n  // get element nodes from selectors\n  ['container', 'controlsContainer', 'navContainer', 'autoplayButton'].forEach(function(item) {\n    if (typeof options[item] === 'string') { options[item] = doc.querySelector(options[item]); }\n  });\n\n  // make sure slide container exists\n  if (!options.container || !options.container.nodeName || options.container.children.length < 2) { return; }\n\n  // update responsive\n  // from: { \n  //    300: 2, \n  //    800: {\n  //      loop: false\n  //    }\n  // }\n  // to: {\n  //    300: { \n  //      items: 2 \n  //    }, \n  //    800: {\n  //      loop: false\n  //    }\n  // }\n  if (options.responsive) {\n    var resTem = {}, res = options.responsive;\n    for(var key in res) {\n      var val = res[key];\n      resTem[key] = typeof val === 'number' ? {items: val} :  val;\n    }\n\n    options.responsive = resTem;\n    resTem = null;\n  }\n\n  // === define and set variables ===\n  var carousel = options.mode === 'carousel' ? true : false;\n\n  if (!carousel) {\n    options.axis = 'horizontal';\n    options.rewind = false;\n    options.loop = true;\n\n    var animateIn = 'tns-fadeIn',\n        animateOut = 'tns-fadeOut',\n        animateDelay = false,\n        animateNormal = options.animateNormal || 'tns-normal';\n\n    if (TRANSITIONEND && ANIMATIONEND) {\n      animateIn = options.animateIn || animateIn;\n      animateOut = options.animateOut || animateOut;\n      animateDelay = options.animateDelay || animateDelay;\n    }\n  }\n\n  var horizontal = options.axis === 'horizontal' ? true : false,\n      outerWrapper = doc.createElement('div'),\n      innerWrapper = doc.createElement('div'),\n      container = options.container,\n      containerParent = container.parentNode,\n      slideItems = container.children,\n      slideCount = slideItems.length,\n      vpOuter = containerParent.clientWidth,\n      vpInner,\n      responsive = options.responsive,\n      responsiveItems = [],\n      breakpoints = false,\n      breakpointZone = 0,\n      breakpointZoneAdjust = 0;\n\n  if (responsive) {\n    breakpoints = Object.keys(responsive)\n      .map(function (x) { return parseInt(x); })\n      .sort(function (a, b) { return a - b; });\n    if (breakpoints.indexOf(0) < 0) { breakpointZoneAdjust = 1; }\n\n    breakpoints.forEach(function(bp) {\n      responsiveItems = responsiveItems.concat(Object.keys(responsive[bp]));\n    });\n    var arr = [];\n    responsiveItems.forEach(function (item) { if (arr.indexOf(item) < 0) { arr.push(item); } });\n    responsiveItems = arr;\n    // alert(responsiveItems);\n\n    breakpointZone = getBreakpointZone();\n  } \n\n  var items = getOption('items'),\n      slideBy = getOption('slideBy') === 'page' ? items : getOption('slideBy'),\n      nested = options.nested,\n      gutter = getOption('gutter'),\n      edgePadding = getOption('edgePadding'),\n      fixedWidth = getOption('fixedWidth'),\n      arrowKeys = getOption('arrowKeys'),\n      speed = getOption('speed'),\n      rewind = options.rewind,\n      loop = rewind ? false : options.loop,\n      autoHeight = getOption('autoHeight'),\n      sheet = createStyleSheet(),\n      lazyload = options.lazyload,\n      slideOffsetTops, // collection of slide offset tops\n      slideItemsOut = [],\n      cloneCount = loop ? slideCount * 2 : checkOption('edgePadding') ? 1 : 0,\n      slideCountNew = !carousel ? slideCount + cloneCount : slideCount + cloneCount * 2,\n      hasRightDeadZone = fixedWidth && !loop && !edgePadding ? true : false,\n      checkIndexBeforeTransform = !carousel || !loop ? true : false,\n      // transform\n      transformAttr = horizontal ? 'left' : 'top',\n      transformPrefix = '',\n      transformPostfix = '',\n      // index\n      index = !carousel ? 0 : cloneCount,\n      indexCached = index,\n      indexAdjust = !loop && checkOption('edgePadding') ? 1 : 0,\n      indexMin = indexAdjust,\n      indexMax = slideCountNew - items - indexAdjust,\n      // resize\n      resizeTimer,\n      touchedOrDraged,\n      running = false,\n      onInit = options.onInit,\n      events = new Events(),\n      // id, class\n      containerIdCached = container.id,\n      containerClassCached = container.className,\n      slideItemIdCached = slideItems[0].id,\n      slideItemClassCached = slideItems[0].className,\n      slideId = container.id || getSlideId(),\n      freeze = slideCount <= items,\n      importantStr = nested === 'inner' ? ' !important' : '',\n      controlsEvents = {\n        'click': onControlsClick,\n        'keydown': onControlsKeydown\n      },\n      navEvents = {\n        'click': onNavClick,\n        'keydown': onNavKeydown\n      },\n      hoverEvents = {\n        'mouseover': mouseoverPause,\n        'mouseout': mouseoutRestart\n      },\n      visibilityEvent = {'visibilitychange': onVisibilityChange},\n      docmentKeydownEvent = {'keydown': onDocumentKeydown},\n      touchEvents = {\n        'touchstart': onTouchOrMouseStart,\n        'touchmove': onTouchOrMouseMove,\n        'touchend': onTouchOrMouseEnd,\n        'touchcancel': onTouchOrMouseEnd\n      }, dragEvents = {\n        'mousedown': onTouchOrMouseStart,\n        'mousemove': onTouchOrMouseMove,\n        'mouseup': onTouchOrMouseEnd,\n        'mouseleave': onTouchOrMouseEnd\n      },\n      hasControls = checkOption('controls'),\n      hasNav = checkOption('nav'),\n      hasAutoplay = checkOption('autoplay'),\n      hasTouch = checkOption('touch'),\n      hasMouseDrag = checkOption('mouseDrag');\n\n  // controls\n  if (hasControls) {\n    var controls = getOption('controls'),\n        controlsText = getOption('controlsText'),\n        controlsContainer = options.controlsContainer,\n        prevButton,\n        nextButton,\n        prevIsButton,\n        nextIsButton;\n  }\n\n  // nav\n  if (hasNav) {\n    var nav = getOption('nav'),\n        navContainer = options.navContainer,\n        navItems,\n        visibleNavIndexes = [],\n        visibleNavIndexesCached = visibleNavIndexes,\n        navClicked = -1,\n        navCurrent = 0,\n        navCurrentCached = 0;\n  }\n\n  // autoplay\n  if (hasAutoplay) {\n    var autoplay = getOption('autoplay'),\n        autoplayTimeout = getOption('autoplayTimeout'),\n        autoplayDirection = options.autoplayDirection === 'forward' ? 1 : -1,\n        autoplayText = getOption('autoplayText'),\n        autoplayHoverPause = getOption('autoplayHoverPause'),\n        autoplayTimer,\n        autoplayButton = options.autoplayButton,\n        animating = false,\n        autoplayHoverStopped = false,\n        autoplayHtmlStrings = ['<span class=\\'tns-visually-hidden\\'>', ' animation</span>'],\n        autoplayResetOnVisibility = getOption('autoplayResetOnVisibility'),\n        autoplayResetVisibilityState = false;\n  }\n\n  // touch\n  if (hasTouch) {\n    var touch = getOption('touch'),\n        startX = null,\n        startY = null,\n        translateInit,\n        disX,\n        disY;\n  }\n\n  // mouse drag\n  if (hasMouseDrag) {\n    var mouseDrag = getOption('mouseDrag'),\n        isDragEvent = false;\n  }\n\n  // disable slider when slidecount <= items\n  if (freeze) {\n    controls = nav = touch = mouseDrag = arrowKeys = autoplay = autoplayHoverPause = autoplayResetOnVisibility = false;\n  }\n\n  if (TRANSFORM) {\n    transformAttr = TRANSFORM;\n    transformPrefix = 'translate';\n    transformPrefix += horizontal ? 'X(' : 'Y(';\n    transformPostfix = ')';\n  }\n\n  // === COMMON FUNCTIONS === //\n  function checkOption(item) {\n    var result = options[item];\n    if (!result && breakpoints && responsiveItems.indexOf(item) >= 0) {\n      breakpoints.forEach(function (bp) {\n        if (responsive[bp][item]) { result = true; }\n      });\n    }\n    return result;\n  }\n\n  function getOption(item, view) {\n    view = view ? view : vpOuter;\n    var result;\n\n    if (item === 'items' && getOption('fixedWidth')) {\n      result = Math.floor(view / (getOption('fixedWidth') + getOption('gutter')));\n    } else if (item === 'slideBy' && !carousel) {\n      result = 'page';\n    } else if (item === 'edgePadding' && !carousel) {\n      result = false;\n    } else if (item === 'autoHeight' && (!carousel || nested === 'outer')) {\n      result = true;\n    } else {\n      result = options[item];\n\n      if (breakpoints && responsiveItems.indexOf(item) >= 0) {\n        for (var i = 0, len = breakpoints.length; i < len; i++) {\n          var bp = breakpoints[i];\n          if (view >= bp) {\n            if (item in responsive[bp]) { result = responsive[bp][item]; }\n          } else { break; }\n        }\n      }\n\n    }\n\n    if (item === 'items') { result = Math.max(1, Math.min(slideCount, result)); }\n    if (item === 'slideBy' && result === 'page') { result = getOption('items'); }\n\n    return result;\n  }\n\n  function getSlideMarginLeft(i) {\n    var str = CALC ? \n      CALC + '(' + i * 100 + '% / ' + slideCountNew + ')' : \n      i * 100 / slideCountNew + '%';\n    return str;\n  }\n\n  function getInnerWrapperStyles(edgePaddingTem, gutterTem, fixedWidthTem) {\n    var str = '';\n    if (edgePaddingTem) {\n      var gap = edgePaddingTem;\n      if (gutterTem) { gap += gutterTem; }\n      if (fixedWidthTem) {\n        str = 'margin: 0px ' + (vpOuter%(fixedWidthTem + gutterTem) + gutterTem) / 2 + 'px';\n      } else {\n        str = horizontal ?\n          'margin: 0 ' + edgePaddingTem + 'px 0 ' + gap + 'px;' :\n          'padding: ' + gap + 'px 0 ' + edgePaddingTem + 'px 0;';\n      }\n    } else if (gutterTem && !fixedWidthTem) {\n      var dir = horizontal ? 'right' : 'bottom';\n      str = 'margin-' + dir + ': -' + gutterTem + 'px;';\n    }\n\n    return str;\n  }\n\n  function getContainerWidth(fixedWidthTem, gutterTem, itemsTem) {\n    itemsTem = Math.min(slideCount, itemsTem);\n    var str;\n\n    if (fixedWidthTem) {\n      str = (fixedWidthTem + gutterTem) * slideCountNew + 'px';\n    } else {\n      str = CALC ? \n        CALC + '(' + slideCountNew * 100 + '% / ' + itemsTem + ')' : \n        slideCountNew * 100 / itemsTem + '%';\n    }\n\n    return str;\n  }\n\n  function getSlideWidthStyle(fixedWidthTem, gutterTem, itemsTem) {\n    itemsTem = Math.min(slideCount, itemsTem);\n    var str = '';\n\n    if (horizontal) {\n      str = 'width:';\n      if (fixedWidthTem) {\n        str += (fixedWidthTem + gutterTem) + 'px';\n      } else {\n        var dividend = carousel ? slideCountNew : Math.min(slideCount, itemsTem);\n        str += CALC ? \n          CALC + '(100% / ' + dividend + ')' : \n          100 / dividend + '%';\n      }\n      str += importantStr + ';';\n    }\n\n    return str;\n  }\n\n  function getSlideGutterStyle(gutterTem) {\n    var str = '';\n\n    // gutter maybe interger || 0\n    // so can't use 'if (gutter)'\n    if (gutterTem !== false) {\n      var prop = horizontal ? 'padding-' : 'margin-',\n          dir = horizontal ? 'right' : 'bottom';\n      str = prop +  dir + ': ' + gutterTem + 'px;';\n    }\n\n    return str;\n  }\n\n  (function sliderInit() {\n    // First thing first, wrap container with 'outerWrapper > innerWrapper',\n    // to get the correct view width\n    outerWrapper.appendChild(innerWrapper);\n    containerParent.insertBefore(outerWrapper, container);\n    innerWrapper.appendChild(container);\n    vpInner = innerWrapper.clientWidth;\n\n    var dataOuter = 'tns-outer',\n        dataInner = 'tns-inner',\n        dataContainer = ' tns-slider tns-' + options.mode;\n\n    if (carousel) {\n      if (horizontal) {\n        if (checkOption('edgePadding') || checkOption('gutter') && !options.fixedWidth) {\n          dataOuter += ' tns-ovh';\n        } else {\n          dataInner += ' tns-ovh';\n        }\n      } else {\n        dataInner += ' tns-ovh';\n      }\n    // } else {\n    //   dataOuter += ' tns-hdx';\n    }\n\n    outerWrapper.className = dataOuter;\n    innerWrapper.className = dataInner;\n    innerWrapper.id = slideId + '-iw';\n    if (autoHeight) {\n      innerWrapper.className += ' tns-ah';\n      innerWrapper.style[TRANSITIONDURATION] = speed / 1000 + 's';\n    }\n\n    // set container properties\n    if (container.id === '') { container.id = slideId; }\n    dataContainer += SUBPIXEL ? ' tns-subpixel' : ' tns-no-subpixel';\n    dataContainer += CALC ? ' tns-calc' : ' tns-no-calc';\n    if (carousel) { dataContainer += ' tns-' + options.axis; }\n    container.className += dataContainer;\n    // add event\n    if (carousel && TRANSITIONEND) {\n      var eve = {};\n      eve[TRANSITIONEND] = onTransitionEnd;\n      addEvents(container, eve);\n    }\n\n    // delete datas after init\n    dataOuter = dataInner = dataContainer = null;\n\n    // add id, class, aria attributes \n    // before clone slides\n    for (var x = 0; x < slideCount; x++) {\n      var item = slideItems[x];\n      item.id = slideId + '-item' + x;\n      item.classList.add('tns-item');\n      if (!carousel && animateNormal) { item.classList.add(animateNormal); }\n      setAttrs(item, {\n        'aria-hidden': 'true',\n        'tabindex': '-1'\n      });\n    }\n\n    // clone slides\n    if (loop || edgePadding) {\n      var fragmentBefore = doc.createDocumentFragment(), \n          fragmentAfter = doc.createDocumentFragment();\n\n      for (var j = cloneCount; j--;) {\n        var num = j%slideCount,\n            cloneFirst = slideItems[num].cloneNode(true);\n        removeAttrs(cloneFirst, 'id');\n        fragmentAfter.insertBefore(cloneFirst, fragmentAfter.firstChild);\n\n        if (carousel) {\n          var cloneLast = slideItems[slideCount - 1 - num].cloneNode(true);\n          removeAttrs(cloneLast, 'id');\n          fragmentBefore.appendChild(cloneLast);\n        }\n      }\n\n      container.insertBefore(fragmentBefore, container.firstChild);\n      container.appendChild(fragmentAfter);\n      slideItems = container.children;\n    }\n\n    // activate visible slides\n    // add aria attrs\n    // set animation classes and left value for gallery slider\n    for (var i = index; i < index + items; i++) {\n      var item = slideItems[i];\n      setAttrs(item, {'aria-hidden': 'false'});\n      removeAttrs(item, ['tabindex']);\n\n      if (!carousel) { \n        item.style.left = (i - index) * 100 / items + '%';\n        item.classList.remove(animateNormal);\n        item.classList.add(animateIn);\n      }\n    }\n\n    if (carousel && horizontal) {\n      // set font-size rules\n      // for modern browsers\n      // run once\n      if (SUBPIXEL) {\n        var cssFontSize = win.getComputedStyle(slideItems[0]).fontSize;\n        // em, rem to px (for IE8-)\n        if (cssFontSize.indexOf('em') > 0) {\n          cssFontSize = parseFloat(cssFontSize) * 16 + 'px';\n        }\n\n        addCSSRule(sheet, '#' + slideId, 'font-size:0;', getCssRulesLength(sheet));\n        addCSSRule(sheet, '#' + slideId + ' .tns-item', 'font-size:' + cssFontSize + ';', getCssRulesLength(sheet));\n\n      // slide left margin\n      // for IE8 & webkit browsers (no subpixel)\n      } else {\n        [].forEach.call(slideItems, function (slide, i) {\n          slide.style.marginLeft = getSlideMarginLeft(i);\n        });\n      }\n    }\n\n    if (CSSMQ) {\n      // inner wrapper styles\n      var str = getInnerWrapperStyles(options.edgePadding, options.gutter, options.fixedWidth);\n      addCSSRule(sheet, '#' + slideId + '-iw', str, getCssRulesLength(sheet));\n\n      // container styles\n      if (carousel && horizontal) {\n        str = 'width:' + getContainerWidth(options.fixedWidth, options.gutter, options.items);\n        addCSSRule(sheet, '#' + slideId + '', str, getCssRulesLength(sheet));\n      }\n\n      // slide styles\n      if (horizontal || options.gutter) {\n        str = getSlideWidthStyle(options.fixedWidth, options.gutter, options.items) + \n              getSlideGutterStyle(options.gutter);\n        addCSSRule(sheet, '#' + slideId + ' .tns-item', str, getCssRulesLength(sheet));\n      }\n\n    // non CSS mediaqueries: IE8\n    // ## update inner wrapper, container, slides if needed\n    // set inline styles for inner wrapper & container\n    // insert stylesheet (one line) for slides only (since slides are many)\n    } else {\n      // inner wrapper styles\n      innerWrapper.style.cssText = getInnerWrapperStyles(edgePadding, gutter, fixedWidth);\n\n      // container styles\n      if (carousel && horizontal) {\n        container.style.width = getContainerWidth(fixedWidth, gutter, items);\n      }\n\n      // slide styles\n      if (horizontal || gutter) {\n        var str = getSlideWidthStyle(fixedWidth, gutter, items) +\n                  getSlideGutterStyle(gutter);\n        // append to the last line\n        addCSSRule(sheet, '#' + slideId + ' .tns-item', str, getCssRulesLength(sheet));\n      }\n    }\n\n    if (!horizontal) {\n      getSlideOffsetTops();\n      updateContentWrapperHeight();\n    }\n\n    // media queries\n    if (responsive && CSSMQ) {\n      breakpoints.forEach(function(bp) {\n        var opts = responsive[bp],\n            str = '',\n            innerWrapperStr = '',\n            containerStr = '',\n            slideStr = '',\n            itemsBP = getOption('items', bp),\n            fixedWidthBP = getOption('fixedWidth', bp),\n            edgePaddingBP = getOption('edgePadding', bp),\n            gutterBP = getOption('gutter', bp);\n\n        // inner wrapper string\n        if ('edgePadding' in opts || 'gutter' in opts) {\n          innerWrapperStr = '#' + slideId + '-iw{' + getInnerWrapperStyles(edgePaddingBP, gutterBP, fixedWidthBP) + '}';\n        }\n\n        // container string\n        if (carousel && horizontal && ('fixedWidth' in opts || 'gutter' in opts || 'items' in opts)) {\n          containerStr = '#' + slideId + '{' + 'width:' + getContainerWidth(fixedWidthBP, gutterBP, itemsBP) + '}';\n        }\n\n        // slide string\n        if ('fixedWidth' in opts || checkOption('fixedWidth') && 'gutter' in opts) {\n          slideStr += getSlideWidthStyle(fixedWidthBP, gutterBP, itemsBP);\n        }\n        if ('gutter' in opts) {\n          slideStr += getSlideGutterStyle(gutterBP);\n        }\n        if (slideStr.length > 0) { slideStr = '#' + slideId + ' .tns-item{' + slideStr + '}'; }\n\n        str = innerWrapperStr + containerStr + slideStr;\n\n        if (str.length > 0) {\n          sheet.insertRule('@media (min-width: ' + bp / 16 + 'em) {' + str + '}', sheet.cssRules.length);\n        }\n      });\n    }\n\n\n    // set container transform property\n    if (carousel) {\n      doContainerTransform();\n    }\n\n\n    // == msInit ==\n    // for IE10\n    if (navigator.msMaxTouchPoints) {\n      outerWrapper.classList.add('ms-touch');\n      addEvents(outerWrapper, {'scroll': ie10Scroll});\n      setSnapInterval();\n    }\n\n \n    // == navInit ==\n    if (hasNav) {\n      // customized nav\n      // will not hide the navs in case they're thumbnails\n      if (navContainer) {\n        setAttrs(navContainer, {'aria-label': 'Carousel Pagination'});\n        navItems = navContainer.children;\n        [].forEach.call(navItems, function (item, index) {\n          setAttrs(item, {\n            'data-nav': index,\n            'tabindex': '-1',\n            'aria-selected': 'false',\n            'aria-controls': slideId + '-item' + index,\n          });\n        });\n\n      // generated nav \n      } else {\n        var navHtml = '';\n        for (var i = 0; i < slideCount; i++) {\n          // hide nav items by default\n          navHtml += '<button data-nav=\"' + i +'\" tabindex=\"-1\" aria-selected=\"false\" aria-controls=\"' + slideId + '-item' + i +'\" hidden type=\"button\"></button>';\n        }\n        navHtml = '<div class=\"tns-nav\" aria-label=\"Carousel Pagination\">' + navHtml + '</div>';\n        outerWrapper.insertAdjacentHTML('afterbegin', navHtml);\n\n        [].forEach.call(outerWrapper.children, function (el) {\n          if (el.classList.contains('tns-nav')) { navContainer = el; }\n        });\n        navItems = navContainer.children;\n\n        updateNavVisibility();\n      }\n\n      setAttrs(navItems[0], {'tabindex': '0', 'aria-selected': 'true'});\n\n      // add events\n      addEvents(navContainer, navEvents);\n\n      if (!nav) { hideElement(navContainer); }\n    }\n\n\n    // == autoplayInit ==\n    if (hasAutoplay) {\n      var txt = autoplay ? 'stop' : 'start';\n      if (autoplayButton) {\n        setAttrs(autoplayButton, {'data-action': txt});\n      } else {\n        innerWrapper.insertAdjacentHTML('beforebegin', '<button data-action=\"' + txt + '\" type=\"button\">' + autoplayHtmlStrings[0] + txt + autoplayHtmlStrings[1] + autoplayText[0] + '</button>');\n        autoplayButton = outerWrapper.querySelector('[data-action]');\n      }\n\n      // add event\n      addEvents(autoplayButton, {'click': toggleAnimation});\n\n      if (!autoplay) {\n        hideElement(autoplayButton);\n      } else {\n        startAction();\n        if (autoplayHoverPause) { addEvents(container, hoverEvents); }\n        if (autoplayResetOnVisibility) { addEvents(container, visibilityEvent); }\n      }\n    }\n\n\n    // == controlsInit ==\n    if (hasControls) {\n      if (controlsContainer) {\n        prevButton = controlsContainer.children[0];\n        nextButton = controlsContainer.children[1];\n        setAttrs(controlsContainer, {\n          'aria-label': 'Carousel Navigation',\n          'tabindex': '0'\n        });\n        setAttrs(prevButton, {'data-controls' : 'prev'});\n        setAttrs(nextButton, {'data-controls' : 'next'});\n        setAttrs(controlsContainer.children, {\n          'aria-controls': slideId,\n          'tabindex': '-1',\n        });\n      } else {\n        outerWrapper.insertAdjacentHTML('afterbegin', '<div class=\"tns-controls\" aria-label=\"Carousel Navigation\" tabindex=\"0\"><button data-controls=\"prev\" tabindex=\"-1\" aria-controls=\"' + slideId +'\" type=\"button\">' + controlsText[0] + '</button><button data-controls=\"next\" tabindex=\"-1\" aria-controls=\"' + slideId +'\" type=\"button\">' + controlsText[1] + '</button></div>');\n\n        [].forEach.call(outerWrapper.children, function (el) {\n          if (el.classList.contains('tns-controls')) { controlsContainer = el; }\n        });\n        prevButton = controlsContainer.children[0];\n        nextButton = controlsContainer.children[1];\n      }\n\n      prevIsButton = isButton(prevButton);\n      nextIsButton = isButton(nextButton);\n\n      if (!loop) { disEnableElement(prevIsButton, prevButton, true); }\n\n      // add events\n      addEvents(controlsContainer, controlsEvents);\n\n      if (!controls) { hideElement(controlsContainer); }\n    }\n\n\n    if (touch) { addEvents(container, touchEvents); }\n    if (mouseDrag) { addEvents(container, dragEvents); }\n    if (arrowKeys) { addEvents(doc, docmentKeydownEvent); }\n\n\n    if (nested === 'inner') {\n      events.on('outerResized', function () {\n        resizeTasks();\n        events.emit('innerLoaded', info());\n      });\n    } else {\n      addEvents(win, {'resize': onResize});\n      if (nested === 'outer') {\n        events.on('innerLoaded', runAutoHeight);\n      }\n    }\n\n    lazyLoad();\n    runAutoHeight();\n    checkFixedWidthSlideCount();\n\n    if (typeof onInit === 'function') { onInit(info()); }\n    if (nested === 'inner') { events.emit('innerLoaded', info()); }\n  })();\n\n\n\n\n\n// === ON RESIZE ===\n  function onResize(e) {\n    e = e || win.event;\n\n    clearTimeout(resizeTimer);\n    resizeTimer = setTimeout(function () {\n      if (vpOuter !== outerWrapper.clientWidth) {\n        resizeTasks();\n        if (nested === 'outer') { \n          events.emit('outerResized', info(e)); \n        }\n      }\n    }, 100); // update after stop resizing for 100 ms\n  }\n\n  function resizeTasks() {\n    var breakpointZoneTem = breakpointZone,\n        indexTem = index, \n        itemsTem = items,\n        freezeTem = freeze;\n\n    vpOuter = outerWrapper.clientWidth;\n    vpInner = innerWrapper.clientWidth;\n    if (breakpoints) { breakpointZone = getBreakpointZone(); }\n\n\n    // things do when breakpoint zone change\n    if (breakpointZoneTem !== breakpointZone || fixedWidth) {\n      var slideByTem = slideBy,\n          arrowKeysTem = arrowKeys,\n          autoHeightTem = autoHeight,\n          fixedWidthTem = fixedWidth,\n          edgePaddingTem = edgePadding,\n          gutterTem = gutter;\n\n      // get options for current breakpoint zone\n      var opts = breakpointZone > 0 ? responsive[breakpoints[breakpointZone - 1]] : options;\n\n      // update variables\n      items = getOption('items');\n      slideBy = getOption('slideBy');\n      freeze = slideCount <= items;\n\n      if (items !== itemsTem) {\n        indexMax = slideCountNew - items - indexAdjust;\n        // check index before transform in case\n        // slider reach the right edge then items become bigger\n        checkIndex();\n      }\n      \n      if (freeze !== freezeTem && freeze) {\n        // reset index to initial status\n        index = !carousel ? 0 : cloneCount;\n      }\n      \n      if (breakpointZoneTem !== breakpointZone) {\n        speed = opts.speed || getOption('speed');\n        edgePadding = opts.edgePadding || getOption('edgePadding');\n        gutter = opts.gutter || getOption('gutter');\n\n        fixedWidth = opts.fixedWidth || getOption('fixedWidth');\n        if (fixedWidth !== fixedWidthTem) {\n          doContainerTransform();\n        }\n\n        autoHeight = getOption('autoHeight');\n        if (autoHeight !== autoHeightTem) {\n          if (!autoHeight) { innerWrapper.style.height = ''; }\n        }\n      }\n\n      arrowKeys = freeze ? false : opts.arrowKeys || getOption('arrowKeys');\n      if (arrowKeys !== arrowKeysTem) {\n        arrowKeys ?\n          addEvents(doc, docmentKeydownEvent) :\n          removeEvents(doc, docmentKeydownEvent);\n      }\n\n      if (hasControls) {\n        var controlsTem = controls,\n            controlsTextTem = controlsText;\n        controls = freeze ? false : opts.controls || getOption('controls');\n        controlsText = opts.controlsText || getOption('controlsText');\n\n        if (controls !== controlsTem) {\n          controls ?\n            showElement(controlsContainer) :\n            hideElement(controlsContainer); \n        }\n        if (controlsText !== controlsTextTem) {\n          prevButton.innerHTML = controlsText[0];\n          nextButton.innerHTML = controlsText[1];\n        }\n      }\n      if (hasNav) {\n        var navTem = nav;\n        nav = freeze ? false : opts.nav || getOption('nav');\n\n        if (nav !== navTem) {\n          if (nav) {\n            showElement(navContainer);\n            updateNavVisibility();\n          } else {\n            hideElement(navContainer);\n          }\n        }\n      }\n      if (hasTouch) {\n        var touchTem = touch;\n        touch = freeze ? false : opts.touch || getOption('touch');\n\n        if (touch !== touchTem && carousel) {\n          touch ?\n            addEvents(container, touchEvents) :\n            removeEvents(container, touchEvents);\n        }\n      }\n      if (hasMouseDrag) {\n        var mouseDragTem = mouseDrag;\n        mouseDrag = freeze ? false : opts.mouseDrag || getOption('mouseDrag');\n\n        if (mouseDrag !== mouseDragTem && carousel) {\n          mouseDrag ?\n            addEvents(container, dragEvents) :\n            removeEvents(container, dragEvents);\n        }\n      }\n      if (hasAutoplay) {\n        var autoplayTem = autoplay,\n            autoplayHoverPauseTem = autoplayHoverPause,\n            autoplayResetOnVisibilityTem = autoplayResetOnVisibility,\n            autoplayTextTem = autoplayText;\n\n        if (freeze) {\n          autoplay = autoplayHoverPause = autoplayResetOnVisibility = false;\n        } else {\n          autoplay = opts.autoplay || getOption('autoplay');\n          \n          if (autoplay) {\n            autoplayHoverPause = opts.autoplayHoverPause || getOption('autoplayHoverPause');\n            autoplayResetOnVisibility = opts.autoplayResetOnVisibility || getOption('autoplayResetOnVisibility');\n          } else {\n            autoplayHoverPause = autoplayResetOnVisibility = false;\n          }\n        }\n        autoplayText = opts.autoplayText || getOption('autoplayText');\n        autoplayTimeout = opts.autoplayTimeout || getOption('autoplayTimeout');\n\n        if (autoplay !== autoplayTem) {\n          if (autoplay) {\n            showElement(autoplayButton);\n            if (!animating) { startAction(); }\n          } else {\n            hideElement(autoplayButton); \n            if (animating) { stopAction(); }\n          }\n        }\n        if (autoplayHoverPause !== autoplayHoverPauseTem) {\n          autoplayHoverPause ?\n            addEvents(container, hoverEvents) :\n            removeEvents(container, hoverEvents);\n        }\n        if (autoplayResetOnVisibility !== autoplayResetOnVisibilityTem) {\n          autoplayResetOnVisibility ?\n            addEvents(doc, visibilityEvent) :\n            removeEvents(doc, visibilityEvent);\n        }\n        if (autoplayText !== autoplayTextTem) {\n          var i = autoplay ? 1 : 0,\n              html = autoplayButton.innerHTML,\n              len = html.length - autoplayTextTem[i].length;\n          if (html.substring(len) === autoplayTextTem[i]) {\n            autoplayButton.innerHTML = html.substring(0, len) + autoplayText[i];\n          }\n        }\n      }\n\n      // IE8\n      // ## update inner wrapper, container, slides if needed\n      // set inline styles for inner wrapper & container\n      // insert stylesheet (one line) for slides only (since slides are many)\n      if (!CSSMQ) {\n        // inner wrapper styles\n        if (edgePadding !== edgePaddingTem || gutter !== gutterTem) {\n          innerWrapper.style.cssText = getInnerWrapperStyles(edgePadding, gutter, fixedWidth);\n        }\n\n        // container styles\n        if (carousel && horizontal && (fixedWidth !== fixedWidthTem || gutter !== gutterTem || items !== itemsTem)) {\n          container.style.width = getContainerWidth(fixedWidth, gutter, items);\n        }\n\n        // slide styles\n        // always need to get width property\n        var str = getSlideWidthStyle(fixedWidth, gutter, items);\n        if (gutter !== gutterTem) {\n          str += getSlideGutterStyle(gutter);\n        }\n\n        // remove the last line and\n        // add it again\n        if (str.length > 0) {\n          sheet.removeRule(getCssRulesLength(sheet) - 1);\n          addCSSRule(sheet, '#' + slideId + ' .tns-item', str, getCssRulesLength(sheet));\n        }\n\n        // will do transform later if index !== indexTem\n        // make sure doTransform will only run once\n        if (!fixedWidth && index === indexTem) { doTransform(0); }\n      }\n\n      if (index !== indexTem) { \n        events.emit('indexChanged', info());\n        doTransform(0); \n        indexCached = index;\n      }\n\n      if (items !== itemsTem) { \n        lazyLoad(); \n        updateSlideStatus();\n        updateControlsStatus();\n        updateNavVisibility();\n        updateNavStatus();\n\n        if (navigator.msMaxTouchPoints) { setSnapInterval(); }\n      }\n    }\n\n    // things always do regardless of breakpoint zone changing\n    if (!horizontal) {\n      getSlideOffsetTops();\n      updateContentWrapperHeight();\n      doContainerTransform();\n    }\n\n    checkFixedWidthSlideCount();\n    // auto height\n    runAutoHeight();\n  }\n\n\n\n\n\n  // === INITIALIZATION FUNCTIONS === //\n  function getBreakpointZone() {\n    breakpointZone = 0;\n    breakpoints.forEach(function(bp, i) {\n      if (vpOuter >= bp) { breakpointZone = i + breakpointZoneAdjust; }\n    });\n    return breakpointZone;\n  }\n\n  // (slideBy, indexMin, indexMax) => index\n  var checkIndex = (function () {\n    if (loop) {\n      return function () {\n        var leftEdge = indexMin, rightEdge = indexMax;\n        if (carousel) {\n          leftEdge += slideBy;\n          rightEdge -= slideBy;\n        }\n\n        var gt = gutter ? gutter : 0;\n        if (fixedWidth && vpOuter%(fixedWidth + gt) > gt) { rightEdge -= 1; }\n\n        if (index > rightEdge) {\n          while(index >= leftEdge + slideCount) { index -= slideCount; }\n        } else if(index < leftEdge) {\n          while(index <= rightEdge - slideCount) { index += slideCount; }\n        }\n      };\n    } else {\n      return function () { index = Math.max(indexMin, Math.min(indexMax, index)); };\n    }\n  })();\n\n  function checkFixedWidthSlideCount() {\n    if (fixedWidth && cloneCount) {\n      if (freeze) {\n        if (!slideItems[0].classList.contains('tns-transparent')) {\n          // remove edge padding from inner wrapper\n          if (edgePadding) { innerWrapper.style.margin = '0'; }\n          // add class tns-transparent to cloned slides\n          for (var i = cloneCount; i--;) {\n            slideItems[i].classList.add('tns-transparent');\n            slideItems[slideCountNew - i - 1].classList.add('tns-transparent');\n          }\n        }\n      } else {\n        // restore edge padding for inner wrapper\n        if (edgePadding) {\n          if (vpOuter <= (fixedWidth + gutter)) {\n            if (innerWrapper.style.margin !== '0px') { innerWrapper.style.margin = '0'; }\n          } else {\n            innerWrapper.style.cssText = getInnerWrapperStyles(edgePadding, gutter, fixedWidth);\n          }\n        }\n\n        if (slideItems[0].classList.contains('tns-transparent')) {\n          // remove class tns-transparent to cloned slides\n          for (var i = cloneCount; i--;) {\n            slideItems[i].classList.remove('tns-transparent');\n            slideItems[slideCountNew - i - 1].classList.remove('tns-transparent');\n          }\n        }\n      }\n    }\n  }\n\n  function mouseoverPause() {\n    if (animating) { \n      stopAction(); \n      autoplayHoverStopped = true;\n    }\n  }\n\n  function mouseoutRestart() {\n    if (!animating && autoplayHoverStopped) { \n      startAction(); \n      autoplayHoverStopped = false;\n    }\n  }\n\n  // lazyload\n  function lazyLoad() {\n    if (lazyload) {\n      var i = index, \n          len = index + items;\n          \n      if (edgePadding) {\n        i -=1;\n        len +=1;\n      }\n\n      for(; i < len; i++) {\n        [].forEach.call(slideItems[i].querySelectorAll('.tns-lazy-img'), function (img) {\n          // stop propagationl transitionend event to container\n          var eve = {};\n          eve[TRANSITIONEND] = function (e) { e.stopPropagation(); };\n          addEvents(img, eve);\n\n          if (!img.classList.contains('loaded')) {\n            img.src = getAttr(img, 'data-src');\n            img.classList.add('loaded');\n          }\n        });\n      }\n    }\n  }\n\n  // check if all visible images are loaded\n  // and update container height if it's done\n  function runAutoHeight() {\n    if (!autoHeight) { return; }\n\n    // get all images inside visible slide items\n    var images = [];\n\n    for (var i = index; i < index + items; i++) {\n      [].forEach.call(slideItems[i].querySelectorAll('img'), function (img) {\n        images.push(img);\n      });\n    }\n\n    if (images.length === 0) {\n      updateInnerWrapperHeight(); \n    } else {\n      checkImagesLoaded(images);\n    }\n  }\n\n  function checkImagesLoaded(images) {\n    images.forEach(function (img, index) {\n      if (imageLoaded(img)) { images.splice(index, 1); }\n    });\n\n    if (images.length === 0) {\n      updateInnerWrapperHeight();\n    } else {\n      setTimeout(function () { \n        checkImagesLoaded(images); \n      }, 16);\n    }\n  } \n\n\n  // update inner wrapper height\n  // 1. get the max-height of the visible slides\n  // 2. set transitionDuration to speed\n  // 3. update inner wrapper height to max-height\n  // 4. set transitionDuration to 0s after transition done\n  function updateInnerWrapperHeight() {\n    var heights = [], maxHeight;\n    for (var i = index; i < index + items; i++) {\n      heights.push(slideItems[i].offsetHeight);\n    }\n    maxHeight = Math.max.apply(null, heights);\n\n    if (innerWrapper.style.height !== maxHeight) {\n      if (TRANSITIONDURATION) { setDurations(speed); }\n      innerWrapper.style.height = maxHeight + 'px';\n    }\n  }\n\n  // get the distance from the top edge of the first slide to each slide\n  // (init) => slideOffsetTops\n  function getSlideOffsetTops() {\n    slideOffsetTops = [0];\n    var topFirst = slideItems[0].getBoundingClientRect().top, attr;\n    for (var i = 1; i < slideCountNew; i++) {\n      attr = slideItems[i].getBoundingClientRect().top;\n      slideOffsetTops.push(attr - topFirst);\n    }\n  }\n\n  // set snapInterval (for IE10)\n  function setSnapInterval() {\n    outerWrapper.style.msScrollSnapPointsX = 'snapInterval(0%, ' + (100 / items) + '%)';\n  }\n\n  // update slide\n  function updateSlideStatus() {\n    for (var i = slideCountNew; i--;) {\n      var item = slideItems[i];\n      // visible slides\n      if (i >= index && i < index + items) {\n        if (hasAttr(item, 'tabindex')) {\n          setAttrs(item, {'aria-hidden': 'false'});\n          removeAttrs(item, ['tabindex']);\n        }\n      // hidden slides\n      } else {\n        if (!hasAttr(item, 'tabindex')) {\n          setAttrs(item, {\n            'aria-hidden': 'true',\n            'tabindex': '-1'\n          });\n        }\n      }\n    }\n  }\n\n  // set tabindex & aria-selected on Nav\n  function updateNavStatus() {\n    // get current nav\n    if (nav) {\n      navCurrent = navClicked !== -1 ? navClicked : (index - indexAdjust)%slideCount;\n      navClicked = -1;\n\n      if (navCurrent !== navCurrentCached) {\n        setAttrs(navItems[navCurrentCached], {\n          'tabindex': '-1',\n          'aria-selected': 'false'\n        });\n\n        setAttrs(navItems[navCurrent], {\n          'tabindex': '0',\n          'aria-selected': 'true'\n        });\n        navCurrentCached = navCurrent;\n      }\n    }\n  }\n\n  function isButton(el) {\n    return el.nodeName.toLowerCase() === 'button';\n  }\n\n  function isAriaDisabled(el) {\n    return el.getAttribute('aria-disabled') === 'true';\n  }\n\n  function disEnableElement(isButton, el, val) {\n    if (isButton) {\n      el.disabled = val;\n    } else {\n      el.setAttribute('aria-disabled', val.toString());\n    }\n  }\n\n  // set 'disabled' to true on controls when reach the edges\n  function updateControlsStatus() {\n    if (!controls || loop) { return; }\n\n    var prevDisabled = (prevIsButton) ? prevButton.disabled : isAriaDisabled(prevButton),\n        nextDisabled = (nextIsButton) ? nextButton.disabled : isAriaDisabled(nextButton),\n        disablePrev = (index === indexMin) ? true : false,\n        disableNext = (!rewind && index === indexMax) ? true : false;\n\n    if (disablePrev && !prevDisabled) {\n      disEnableElement(prevIsButton, prevButton, true);\n    }\n    if (!disablePrev && prevDisabled) {\n      disEnableElement(prevIsButton, prevButton, false);\n    }\n    if (disableNext && !nextDisabled) {\n      disEnableElement(nextIsButton, nextButton, true);\n    }\n    if (!disableNext && nextDisabled) {\n      disEnableElement(nextIsButton, nextButton, false);\n    }\n  }\n\n  // set duration\n  function setDurations (duration, target) {\n    duration = !duration ? '' : duration / 1000 + 's';\n    target = target || container;\n    target.style[TRANSITIONDURATION] = duration;\n\n    if (!carousel) {\n      target.style[ANIMATIONDURATION] = duration;\n    }\n    if (!horizontal) {\n      innerWrapper.style[TRANSITIONDURATION] = duration;\n    }\n  }\n\n  function getContainerTransformValue() {\n    var val;\n    if (horizontal) {\n      if (fixedWidth) {\n        val = - (fixedWidth + gutter) * index + 'px';\n      } else {\n        var denominator = TRANSFORM ? slideCountNew : items;\n        val = - index * 100 / denominator + '%';\n      }\n    } else {\n      val = - slideOffsetTops[index] + 'px';\n    }\n    return val;\n  }\n\n  function doContainerTransform(val) {\n    if (!val) { val = getContainerTransformValue(); }\n    container.style[transformAttr] = transformPrefix + val + transformPostfix;\n  }\n\n  function animateSlide(number, classOut, classIn, isOut) {\n    for (var i = number, l = number + items; i < l; i++) {\n      var item = slideItems[i];\n\n      // set item positions\n      if (!isOut) { item.style.left = (i - index) * 100 / items + '%'; }\n\n      if (TRANSITIONDURATION) { setDurations(speed, item); }\n      if (animateDelay && TRANSITIONDELAY) {\n        item.style[TRANSITIONDELAY] = item.style[ANIMATIONDELAY] = animateDelay * (i - number) / 1000 + 's';\n      }\n      item.classList.remove(classOut);\n      item.classList.add(classIn);\n      \n      if (isOut) { slideItemsOut.push(item); }\n    }\n  }\n\n  // make transfer after click/drag:\n  // 1. change 'transform' property for mordern browsers\n  // 2. change 'left' property for legacy browsers\n  var transformCore = (function () {\n    // carousel\n    if (carousel) {\n      return function (duration, distance) {\n        if (!distance) { distance = getContainerTransformValue(); }\n        // constrain the distance when non-loop no-edgePadding fixedWidth reaches the right edge\n        if (hasRightDeadZone && index === indexMax) {\n          var containerRightEdge = TRANSFORM ? \n              - ((slideCountNew - items) / slideCountNew) * 100 : \n              - (slideCountNew / items - 1) * 100; \n          distance = Math.max(parseFloat(distance), containerRightEdge) + '%';\n        }\n\n        if (TRANSITIONDURATION || !duration) {\n          doContainerTransform(distance);\n          if (speed === 0) { onTransitionEnd(); }\n        } else {\n          jsTransform(container, transformAttr, transformPrefix, transformPostfix, distance, speed, onTransitionEnd);\n        }\n\n        if (!horizontal) { updateContentWrapperHeight(); }\n      };\n\n    // gallery\n    } else {\n      return function () {\n        slideItemsOut = [];\n\n        var eve = {};\n        eve[TRANSITIONEND] = eve[ANIMATIONEND] = onTransitionEnd;\n        removeEvents(slideItems[indexCached], eve);\n        addEvents(slideItems[index], eve);\n\n        animateSlide(indexCached, animateIn, animateOut, true);\n        animateSlide(index, animateNormal, animateIn);\n\n        if (!TRANSITIONEND || !ANIMATIONEND || speed === 0) { setTimeout(onTransitionEnd, 0); }\n      };\n    }\n  })();\n\n  function doTransform (duration, distance) {\n    if (duration === undefined) { duration = speed; }\n    if (TRANSITIONDURATION) { setDurations(duration); }\n    transformCore(duration, distance);\n  }\n\n  function render() {\n    if (checkIndexBeforeTransform) { checkIndex(); }\n    if (index !== indexCached) {\n      // events\n      events.emit('indexChanged', info());\n      events.emit('transitionStart', info());\n\n      running = true;\n      doTransform();\n    }\n\n  }\n\n  // AFTER TRANSFORM\n  // Things need to be done after a transfer:\n  // 1. check index\n  // 2. add classes to visible slide\n  // 3. disable controls buttons when reach the first/last slide in non-loop slider\n  // 4. update nav status\n  // 5. lazyload images\n  // 6. update container height\n  function onTransitionEnd(event) {\n    events.emit('transitionEnd', info(event));\n\n    if (!carousel && slideItemsOut.length > 0) {\n      for (var i = 0; i < items; i++) {\n        var item = slideItemsOut[i];\n        // set item positions\n        item.style.left = '';\n\n        if (TRANSITIONDURATION) { setDurations(0, item); }\n        if (animateDelay && TRANSITIONDELAY) { \n          item.style[TRANSITIONDELAY] = item.style[ANIMATIONDELAY] = '';\n        }\n        item.classList.remove(animateOut);\n        item.classList.add(animateNormal);\n      }\n    }\n\n    /*\n     * Transfer prefixed properties to the same format\n     * CSS: -Webkit-Transform => webkittransform\n     * JS: WebkitTransform => webkittransform\n     * @param {string} str - property\n     *\n     */\n    function strTrans(str) {\n      return str.toLowerCase().replace(/-/g, '');\n    }\n\n    /* update slides, nav, controls after checking ...\n     * => legacy browsers who don't support 'event' \n     *    have to check event first, otherwise event.target will cause an error \n     * => or 'gallery' mode: \n     *   + event target is slide item\n     * => or 'carousel' mode: \n     *   + event target is container, \n     *   + event.property is the same with transform attribute\n     */\n    if (!event || \n        !carousel && event.target.parentNode === container || \n        event.target === container && strTrans(event.propertyName) === strTrans(transformAttr)) {\n\n      if (!checkIndexBeforeTransform) { \n        var indexTem = index;\n        checkIndex();\n        if (index !== indexTem) { \n          if (TRANSITIONDURATION) { setDurations(0); }\n          doContainerTransform();\n          events.emit('indexChanged', info());\n        }\n      } \n\n      updateSlideStatus();\n\n      // loop: update nav visibility when visibleNavIndexes doesn't contain current index\n      if (nav && visibleNavIndexes.indexOf(index%slideCount) === -1) {\n        updateNavVisibility(); \n      }\n      updateNavStatus();\n      updateControlsStatus();\n      lazyLoad();\n      runAutoHeight();\n\n      if (nested === 'inner') { events.emit('innerLoaded', info()); }\n      running = false;\n      indexCached = index;\n    }\n\n  }\n\n  // # ACTIONS\n  function goTo (targetIndex) {\n    if (freeze) { return; }\n\n    // prev slideBy\n    if (targetIndex === 'prev') {\n      onControlsClick(null, -1);\n\n    // next slideBy\n    } else if (targetIndex === 'next') {\n      onControlsClick(null, 1);\n\n    // go to exact slide\n    } else if (!running) {\n      var absIndex = index%slideCount, \n          indexGap = 0;\n      if (!loop && checkOption('edgePadding')) { absIndex--; }\n      if (absIndex < 0) { absIndex += slideCount; }\n\n      if (targetIndex === 'first') {\n        indexGap = - absIndex;\n      } else if (targetIndex === 'last') {\n        indexGap = slideCount - items - absIndex;\n      } else {\n        if (typeof targetIndex !== 'number') { targetIndex = parseInt(targetIndex); }\n        if (!isNaN(targetIndex)) {\n          var absTargetIndex = targetIndex%slideCount;\n          if (absTargetIndex < 0) { absTargetIndex += slideCount; }\n          if (!loop && edgePadding) { absTargetIndex += 1; }\n          indexGap = absTargetIndex - absIndex;\n        }\n      }\n\n      index += indexGap;\n\n      // if index is changed, start rendering\n      if (index%slideCount !== indexCached%slideCount) {\n        render();\n      }\n\n    }\n  }\n\n  // on controls click\n  function onControlsClick(e, dir) {\n    if (!running) {\n      var shouldRender;\n\n      if (!dir) {\n        e = e || win.event;\n        var target = e.target || e.srcElement;\n        while (target !== controlsContainer && !hasAttr(target, 'data-controls')) { target = target.parentNode; }\n      }\n\n      if (target && target === prevButton || dir === -1) {\n        if (index > indexMin) {\n          index -= slideBy;\n          shouldRender = true;\n        }\n      } else if (target && target === nextButton || dir === 1) {\n        // Go to the first if reach the end in rewind mode\n        // Otherwise go to the next\n        if (rewind && index === indexMax){\n          goTo(0);\n        } else if (index < indexMax) {\n          index += slideBy;\n          shouldRender = true;\n        }\n      }\n\n      if (shouldRender) { render(); }\n    }\n  }\n\n  // on nav click\n  function onNavClick(e) {\n    if (!running) {\n      e = e || win.event;\n      var target = e.target || e.srcElement,\n          navIndex;\n\n      // find the clicked nav item\n      while (target !== navContainer && !hasAttr(target, 'data-nav')) { target = target.parentNode; }\n      if (hasAttr(target, 'data-nav')) {\n        navIndex = navClicked = [].indexOf.call(navItems, target);\n        goTo(navIndex);\n      }\n    }\n  }\n\n  function updateAutoplayButton(action, txt) {\n    setAttrs(autoplayButton, {'data-action': action});\n    autoplayButton.innerHTML = autoplayHtmlStrings[0] + action + autoplayHtmlStrings[1] + txt;\n  }\n\n  function startAction() {\n    resetActionTimer();\n    updateAutoplayButton('stop', autoplayText[1]);\n\n    animating = true;\n  }\n\n  function stopAction() {\n    pauseActionTimer();\n    updateAutoplayButton('start', autoplayText[0]);\n\n    animating = false;\n  }\n\n  function pauseActionTimer() {\n    animating = 'paused';\n    clearInterval(autoplayTimer);\n  }\n\n  function resetActionTimer() {\n    if (animating === true) { return; }\n    clearInterval(autoplayTimer);\n    autoplayTimer = setInterval(function () {\n      onControlsClick(null, autoplayDirection);\n    }, autoplayTimeout);\n  }\n\n  function toggleAnimation() {\n    if (animating) {\n      stopAction();\n    } else {\n      startAction();\n    }\n  }\n\n  function onVisibilityChange() {\n    if (autoplayResetVisibilityState != doc.hidden && animating !== false) {\n      doc.hidden ? pauseActionTimer() : resetActionTimer();\n    }\n    autoplayResetVisibilityState = doc.hidden;\n  }\n\n  // keydown events on document \n  function onDocumentKeydown(e) {\n    e = e || win.event;\n    switch(e.keyCode) {\n      case KEYS.LEFT:\n        onControlsClick(null, -1);\n        break;\n      case KEYS.RIGHT:\n        onControlsClick(null, 1);\n    }\n  }\n\n  // on key control\n  function onControlsKeydown(e) {\n    e = e || win.event;\n    var code = e.keyCode;\n\n    switch (code) {\n      case KEYS.LEFT:\n      case KEYS.UP:\n      case KEYS.PAGEUP:\n          if (!prevButton.disabled) {\n            onControlsClick(null, -1);\n          }\n          break;\n      case KEYS.RIGHT:\n      case KEYS.DOWN:\n      case KEYS.PAGEDOWN:\n          if (!nextButton.disabled) {\n            onControlsClick(null, 1);\n          }\n          break;\n      case KEYS.HOME:\n        goTo(0);\n        break;\n      case KEYS.END:\n        goTo(slideCount - 1);\n        break;\n    }\n  }\n\n  // set focus\n  function setFocus(focus) {\n    focus.focus();\n  }\n\n  // on key nav\n  function onNavKeydown(e) {\n    var curElement = doc.activeElement;\n    if (!hasAttr(curElement, 'data-nav')) { return; }\n\n    e = e || win.event;\n    var code = e.keyCode,\n        navIndex = [].indexOf.call(navItems, curElement),\n        len = visibleNavIndexes.length,\n        current = visibleNavIndexes.indexOf(navIndex);\n\n    if (options.navContainer) {\n      len = slideCount;\n      current = navIndex;\n    }\n\n    function getNavIndex(num) {\n      return options.navContainer ? num : visibleNavIndexes[num];\n    }\n\n    switch(code) {\n      case KEYS.LEFT:\n      case KEYS.PAGEUP:\n        if (current > 0) { setFocus(navItems[getNavIndex(current - 1)]); }\n        break;\n\n      case KEYS.UP:\n      case KEYS.HOME:\n        if (current > 0) { setFocus(navItems[getNavIndex(0)]); }\n        break;\n\n      case KEYS.RIGHT:\n      case KEYS.PAGEDOWN:\n        if (current < len - 1) { setFocus(navItems[getNavIndex(current + 1)]); }\n        break;\n\n      case KEYS.DOWN:\n      case KEYS.END:\n        if (current < len - 1) { setFocus(navItems[getNavIndex(len - 1)]); }\n        break;\n\n      // Can't use onNavClick here,\n      // Because onNavClick require event.target as nav items\n      case KEYS.ENTER:\n      case KEYS.SPACE:\n        navClicked = navIndex;\n        goTo(navIndex);\n        break;\n    }\n  }\n\n  // IE10 scroll function\n  function ie10Scroll() {\n    doTransform(0, container.scrollLeft());\n    indexCached = index;\n  }\n\n  function getTarget(e) {\n    return e.target || e.srcElement;\n  }\n\n  function isTouchEvent(e) {\n    return e.type.indexOf('touch') >= 0;\n  }\n\n  function preventDefaultBehavior(e) {\n      if (e.preventDefault) {\n        e.preventDefault();\n      } else {\n        e.returnValue = false;\n      }\n  }\n\n  function onTouchOrMouseStart(e) {\n    e = e || win.event;\n    var ev;\n\n    if (isTouchEvent(e)) {\n      ev = e.changedTouches[0];\n      events.emit('touchStart', info(e));\n    } else {\n      ev = e;\n      preventDefaultBehavior(e);\n      events.emit('dragStart', info(e));\n    }\n\n    startX = parseInt(ev.clientX);\n    startY = parseInt(ev.clientY);\n    translateInit = parseFloat(container.style[transformAttr].replace(transformPrefix, '').replace(transformPostfix, ''));\n  }\n\n  function onTouchOrMouseMove(e) {\n    e = e || win.event;\n    // make sure touch started or mouse draged\n    if (startX !== null) {\n      var ev;\n      if (isTouchEvent(e)) {\n        ev = e.changedTouches[0];\n      } else {\n        ev = e;\n        preventDefaultBehavior(e);\n      }\n\n      disX = parseInt(ev.clientX) - startX;\n      disY = parseInt(ev.clientY) - startY;\n\n      if (getTouchDirection(toDegree(disY, disX), 15) === options.axis && disX) {\n        if (isTouchEvent(e)) {\n          events.emit('touchMove', info(e));\n        } else {\n          // \"mousemove\" event after \"mousedown\" indecate \n          // it is \"drag\", not \"click\"\n          if (!isDragEvent) { isDragEvent = true; }\n          events.emit('dragMove', info(e));\n        }\n        if (!touchedOrDraged) { touchedOrDraged = true; }\n\n        var x = translateInit;\n        if (horizontal) {\n          if (fixedWidth) {\n            x += disX;\n            x += 'px';\n          } else {\n            var percentageX = TRANSFORM ? disX * items * 100 / (vpInner * slideCountNew): disX * 100 / vpInner;\n            x += percentageX;\n            x += '%';\n          }\n        } else {\n          x += disY;\n          x += 'px';\n        }\n\n        if (TRANSFORM) { setDurations(0); }\n        container.style[transformAttr] = transformPrefix + x + transformPostfix;\n      }\n    }\n  }\n\n  function onTouchOrMouseEnd(e) {\n    e = e || win.event;\n\n    if (touchedOrDraged) {\n      touchedOrDraged = false;\n      var ev;\n\n      if (isTouchEvent(e)) {\n        ev = e.changedTouches[0];\n        events.emit('touchEnd', info(e));\n      } else {\n        ev = e;\n        events.emit('dragEnd', info(e));\n      }\n\n      disX = parseInt(ev.clientX) - startX;\n      disY = parseInt(ev.clientY) - startY;\n\n      // reset startX, startY\n      startX = startY = null;\n\n      if (horizontal) {\n        var indexMoved = - disX * items / vpInner;\n        indexMoved = disX > 0 ? Math.floor(indexMoved) : Math.ceil(indexMoved);\n        index += indexMoved;\n      } else {\n        var moved = - (translateInit + disY);\n        if (moved <= 0) {\n          index = indexMin;\n        } else if (moved >= slideOffsetTops[slideOffsetTops.length - 1]) {\n          index = indexMax;\n        } else {\n          var i = 0;\n          do {\n            i++;\n            index = disY < 0 ? i + 1 : i;\n          } while (i < slideCountNew && moved >= slideOffsetTops[i + 1]);\n        }\n      }\n      \n      render();\n\n      // drag vs click\n      if (isDragEvent) { \n        // reset isDragEvent\n        isDragEvent = false;\n\n        // prevent \"click\"\n        var target = getTarget(e);\n        addEvents(target, {'click': function preventClick(e) {\n          preventDefaultBehavior(e);\n          removeEvents(target, {'click': preventClick});\n        }}); \n      } \n    }\n  }\n\n  // === RESIZE FUNCTIONS === //\n  // (slideOffsetTops, index, items) => vertical_conentWrapper.height\n  function updateContentWrapperHeight() {\n    innerWrapper.style.height = slideOffsetTops[index + items] - slideOffsetTops[index] + 'px';\n  }\n\n  /*\n   * get nav item indexes per items\n   * add 1 more if the nav items cann't cover all slides\n   * [0, 1, 2, 3, 4] / 3 => [0, 3]\n   */\n  function getVisibleNavIndex() {\n    // reset visibleNavIndexes\n    visibleNavIndexes = [];\n\n    var temIndex = !loop && edgePadding ? (index - 1) : index;\n    var absIndexMin = temIndex%slideCount%items;\n    while (absIndexMin < slideCount) {\n      if (!loop && absIndexMin + items > slideCount) { absIndexMin = slideCount - items; }\n      visibleNavIndexes.push(absIndexMin);\n      absIndexMin += items;\n    }\n\n    // nav count * items < slide count means\n    // some slides can not be displayed only by nav clicking\n    if (loop && visibleNavIndexes.length * items < slideCount ||\n        !loop && visibleNavIndexes[0] > 0) {\n      visibleNavIndexes.unshift(0);\n    }\n  }\n  \n  /*\n   * 1. update visible nav items list\n   * 2. add \"hidden\" attributes to previous visible nav items\n   * 3. remove \"hidden\" attrubutes to new visible nav items\n   */\n  function updateNavVisibility() {\n    if (!nav || options.navContainer) { return; }\n\n    // update visible nav indexes\n    getVisibleNavIndex();\n\n    if (visibleNavIndexes !== visibleNavIndexesCached) {\n      // add 'hidden' attribute to previous visible navs\n      if (visibleNavIndexesCached.length > 0) {\n        visibleNavIndexesCached.forEach(function (ind) {\n          setAttrs(navItems[ind], {'hidden': ''});\n        });\n      }\n\n      // remove 'hidden' attribute from visible navs\n      if (visibleNavIndexes.length > 0) {\n        visibleNavIndexes.forEach(function (ind) {\n          removeAttrs(navItems[ind], 'hidden');\n        });\n      }\n\n      // cache visible nav indexes\n      visibleNavIndexesCached = visibleNavIndexes;\n    }\n  }\n\n  function info(e) {\n    return {\n      container: container,\n      slideItems: slideItems,\n      navContainer: navContainer,\n      navItems: navItems,\n      controlsContainer: controlsContainer,\n      prevButton: prevButton,\n      nextButton: nextButton,\n      items: items,\n      slideBy: slideBy,\n      cloneCount: cloneCount,\n      slideCount: slideCount,\n      slideCountNew: slideCountNew,\n      index: index,\n      indexCached: indexCached,\n      navCurrent: navCurrent,\n      navCurrentCached: navCurrentCached,\n      visibleNavIndexes: visibleNavIndexes,\n      visibleNavIndexesCached: visibleNavIndexesCached,\n      event: e || {},\n    };\n  }\n\n  return {\n    getInfo: info,\n    events: events,\n    goTo: goTo,\n\n    destroy: function () {\n      // sheet\n      sheet.disabled = true;\n\n      // cloned items\n      if (loop) {\n        for (var j = cloneCount; j--;) {\n          slideItems[0].remove();\n          slideItems[slideItems.length - 1].remove();\n        }\n      }\n\n      // Slide Items\n      for (var i = slideCount; i--;) {\n        slideItems[i].id = slideItemIdCached || '';\n        slideItems[i].className = slideItemClassCached || '';\n      }\n      removeAttrs(slideItems, ['style', 'aria-hidden', 'tabindex']);\n      slideItems = slideId = slideCount = slideCountNew = cloneCount = null;\n\n      // controls\n      if (controls) {\n        removeEvents(controlsContainer, controlsEvents);\n        if (options.controlsContainer) {\n          removeAttrs(controlsContainer, ['aria-label', 'tabindex']);\n          removeAttrs(controlsContainer.children, ['aria-controls', 'aria-disabled', 'tabindex']);\n        }\n        controlsContainer = prevButton = nextButton = null;\n      }\n\n      // nav\n      if (nav) {\n        removeEvents(navContainer, navEvents);\n        if (options.navContainer) {\n          removeAttrs(navContainer, ['aria-label']);\n          removeAttrs(navItems, ['aria-selected', 'aria-controls', 'tabindex']);\n        }\n        navContainer = navItems = null;\n      }\n\n      // auto\n      if (autoplay) {\n        removeEvents(autoplayButton, {'click': toggleAnimation});\n        removeEvents(container, hoverEvents);\n        removeEvents(container, visibilityEvent);\n        if (options.autoplayButton) {\n          removeAttrs(autoplayButton, ['data-action']);\n        }\n      }\n\n      // container\n      container.id = containerIdCached || '';\n      container.className = containerClassCached || '';\n      container.style = '';\n      if (carousel && TRANSITIONEND) {\n        var eve = {};\n        eve[TRANSITIONEND] = onTransitionEnd;\n        removeEvents(container, eve);\n      }\n      removeEvents(container, touchEvents);\n      removeEvents(container, dragEvents);\n\n      // outerWrapper\n      containerParent.insertBefore(container, outerWrapper);\n      outerWrapper.remove();\n      outerWrapper = innerWrapper = container = null;\n\n      // remove arrowKeys eventlistener\n      removeEvents(doc, docmentKeydownEvent);\n\n      // remove win event listeners\n      removeEvents(win, {'resize': onResize});\n    }\n  };\n};\n\nreturn tns;\n})();\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tiny-slider/dist/tiny-slider.js\n// module id = 21\n// module chunks = 0\n//# sourceURL=webpack:///./~/tiny-slider/dist/tiny-slider.js?")
}]);